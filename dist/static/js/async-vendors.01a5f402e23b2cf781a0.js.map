{"version":3,"sources":["webpack:///./node_modules/avalon2/dist/avalon.js"],"names":["global","factory","win","window","inBrowser","location","navigator","document$1","document","createElement","Object","createElementNS","documentElement","contains","Boolean","root","outerHTML","versions","objectobject","objectundefined","undefinedfunction","NaN","undefinedobject","msie$1","documentMode","all","XMLHttpRequest","modern","test","Cache","maxLength","this","size","limit","head","tail","_keymap","prototype","put","key","value","entry","newer","older","shift","get","delayCompile","directives","window$1","avalon","el","init","shadowCopy","destination","source","property","element","fn","rword","rnowhite","platform","oneObject","array","val","match","result","i","n","length","op","inspect","toString","ohasOwn","hasOwnProperty","ap","Array","hasConsole","console","isObject","a","config","debug","rhyphen","rcamelize","_slice","slice","rhashcode","makeHashCode","prefix","String","Math","random","replace","getLongID","uuid","UUID","getShortID","rescape","escapeRegExp","target","eventHooks","cssHooks","createFragment","createDocumentFragment","rentities","temp","settings","p","plugins","merge","other","push","apply","ensure","item","indexOf","removeAt","index","splice","remove","evaluatorPool","parsers","number","parseFloat","string","boolean","_decode","str","innerHTML","innerText","textContent","interpolate","openTag","closeTag","SyntaxError","o","c","rtext","RegExp","rexpr","isNative","version","vmodels","directive","name","opts","warn","update","delay","eventListeners","validators","log","Function","call","arguments","noop","method","error","e","Error","msie","range","start","end","step","max","ceil","nodes","hyphen","toLowerCase","camelize","charAt","toUpperCase","quote","_quote","trim","rtrim","create","F","hasDontEnumBug","propertyIsEnumerable","hasProtoEnumBug","dontEnums","dontEnumsLength","keys","object","theKeys","skipProto","callee","ctor","constructor","skipConstructor","j","dontEnum","isArray","bind","scope","argv","args","begin","cloned","len","upTo","iterator","vars","body","ret","fun","map","lastIndexOf","forEach","filter","some","every","Escapes","escapeChar","reEscape","compaceQuote","92","34","8","12","10","13","9","character","width","charCode","charCodeAt","escaped","lastIndex","JSON","stringify","class2type","type","obj","rfunction","isFunction","alert","enu","enumerateBUG","rwindow","isWindowModern","isWindow","isPlainObject","getPrototypeOf","nodeType","$vbthis","undefined$1","rcanMix","mix","isDeep","unshift","innerExtend","copyIsArray","clone","options","noCloneArrayMethod","src","copy","rarraylike","numberFilter","decimals","point","thousands","isFinite","prec","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","join","each","isArrayLike","welcomeIntro","con","groupCollapsed","groupEnd","rscripts","ron","ropen","rsanitize","img","form","toInt","parseInt","padNumber","num","digits","neg","substr","dateGetter","offset","date","dateStrGetter","shortForm","formats","DATE_FORMATS","yyyy","yy","y","MMMM","MMM","MM","M","dd","d","HH","H","hh","h","mm","m","ss","sss","EEEE","EEE","getHours","AMPMS","Z","zone","getTimezoneOffset","paddedZone","rdateFormat","raspnetjson","dateFilter","format","locate","text","parts","$1","trimDate","dateArray","oDate","Date","_","b","dateSetter","setFullYear","timeSetter","setHours","tzHour","tzMin","z","symbol","setUTCFullYear","setUTCHours","exec","concat","pop","0","1","DAY","2","3","4","5","6","MONTH","7","11","SHORTDAY","fullDate","longDate","medium","mediumDate","mediumTime","short","shortDate","shortTime","SHORTMONTH","$$skipArray","$id","falsy","$render","$track","$element","$computed","$watch","$fire","$events","$accessors","$hashcode","$mutations","$vbsetter","__repeat","isArray$$1","cb","recovery","callback","eventFilters","stop","stopPropagation","prevent","preventDefault","esc","tab","enter","space","del","up","left","right","down","name$1","which","$return","escapeFilter","filters","composeFilters","arr","escapeHtml","uppercase","lowercase","truncate","isNaN","escape","sanitize","reg","currency","amount","fractionSize","filterBy","search","stype","criteria","_orig","orderBy","by","decend","mapping","sort","reverse","_array","selectBy","data","defaults","limitBy","input","oldIndex","convertArray","floor","min","rcheckedType","fixElement","dest","nodeName","params","childNodes","clearHTML","appendChild","cloneNode","defaultChecked","checked","defaultSelected","selected","defaultValue","getAll","context","getElementsByTagName","querySelectorAll","fixClone","t","fixContains","parentNode","ClassList","node","classListFactory","classList","fixFF","prop","HTMLElement","__defineGetter__","createTextNode","Node","child","div","children","shimHack","cls","className","baseVal","add","set","setAttribute","removeAttribute","hasClass","toggleClass","stateVal","isBool","me","state","propMap","rvalidchars","rvalidbraces","rvalidescape","rvalidtokens","rsvg","ramp","innateMap","isInnateProps","attrName","parseJSON","parse","TypeError","attr","getAttribute","cssMap","cssNumber","prefixes","cssName","host","camelCase","style","css","position","offsetParent","elem","parentOffset","top","getBoundingClientRect","tagName","scrollTop","scrollLeft","styles","getComputedStyle","getPropertyValue","computed","cssShow","visibility","display","rdisplayswap","Width","Height","clientProp","scrollProp","offsetProp","override","boxSizing","hidden","showHidden","offsetWidth","parent","setTimeout","doc","includeMargin","rnumnonpx","rposition","ralpha","ropactiy","ie8","border","thin","thick","currentStyle","rsLeft","runtimeStyle","pixelLeft","opacity","Number","zoom","box","ownerDocument","root$$1","defaultView","parentWindow","clientTop","clientLeft","pageYOffset","pageXOffset","getWindow","scrollTo","valHooks","option:get","hasAttribute","getAttributeNode","specified","select:get","option","selectedIndex","getter","one","values","disabled","select:set","optionSet","access","voidTag","area","base","basefont","bgsound","br","col","command","embed","frame","hr","keygen","link","meta","param","track","wbr","makeObject","specalTag","xmp","script","noscript","textarea","#comment","template","hiddenTag","rcontent","rsp","fromString","cacheKey","cached","strCache","getOne","breakIndex","stack","origString","origLength","last","lastNode","addNode","getCloseTag","_node","nodeValue","getText","insertTbody","getOpenTag","selfClose","isVoidTag","_index","openIndex","dirString","textDir","parseTextDir","mayNode","addText","lexer","from","quote$$1","closeTagFirst","closeTagLength","rtbody","tbody","props","tag","ropenTag","l","thow","leftContent","attrValue","getAttrs","rhtml","htmlCache","rxhtml","parseHTML","html","fragment","hasCache","vnodes","vdom","parsed","unescapeHTML","lastChild","removeChild","canBubbleUp","click","dblclick","keydown","keypress","keyup","mousedown","mousemove","mouseup","mouseover","mouseout","wheel","mousewheel","change","beforeinput","compositionstart","compositionupdate","compositionend","select","cut","paste","beforecut","beforecopy","beforepaste","focusin","focusout","DOMFocusIn","DOMFocusOut","DOMActivate","dragend","datasetchanged","hackSafari","ontouchstart","setEventId","phase","unbind","hook","addEventListener","fix","focusBlur","_nativeBind","dispatch","delegateEvent","avEvent","_nativeUnBind","typeRegExp","rhandleHasVm","event","handlers","collectHandlers","uuids","g","gestureEvents","handler","cancelBubble","currentTarget","stopImmediate","vm","_ms_context_","focus","blur","eventProto","webkitMovementY","webkitMovementX","keyLocation","fixEvent","originalEvent","returnValue","stopImmediatePropagation","srcElement","timeStamp","mouseenter","mouseleave","origType","fixType","relatedTarget","compareDocumentPosition","AnimationEvent","WebKitAnimationEvent","construct","animationend","fixWheelType","onwheel","fixWheelDelta","delta","wheelDelta","_ms_wheel_","wheelDeltaY","wheelDeltaX","defineProperty","capture","attachEvent","removeEventListener","detachEvent","fireDom","createEvent","hackEvent","initEvent","dispatchEvent","createEventObject","fireEvent","rmouseEvent","keyCode","DOC","compatMode","pageX","clientX","pageY","clientY","propertyName","readyList","fireReady","isReady","ready","scan","readyState","isTop","frameElement","doScroll","external","doScrollCheck","bootstrap","orphanTag","makeOrphan","v","rtrimHTML","fromDOM","dom","from$1","attrs","rformElement","cssText","markProps","attributes","vnode","firstChild","VText","VComment","VElement","skipFalseAndFunction","toDOM","toHTML","createComment","svgTags","VMLTags","rvml","styleSheets","createStyleSheet","addRule","ns","namespaces","createVML","specalAttrs","styleSheet","hackIE","class","for","htmlFor","VFragment","f","toFragment","dispose","innerRender","constNameMap","#text","#document-fragment","vdomAdaptor","runActions","isRunningActions","inTransaction","task","tasks","pendingActions","uniqActions","domize","trackDeps","targetStack","collectDeps","action","observers","preAction","trackingAction","expr","mapIDs","hasError","prev","curr","ids","dep","isAction","lastAccessedBy","isComputed","_i","depsCount","deps","depsVersion","_dep","_dep2","_i2","resetDeps","transactionStart","transactionEnd","transaction","thisArg","displayName","res","stringNum","stringPool","rfill","dig","fill","clearString","readString","keyMap","skipMap","$event","__vmodel__","rvmKey","ruselessSp","rshortCircuit","brackets","rpipeline","rregexp","robjectProp","robjectKey","rfilterName","rlocalVar","exprCache","addScope","cache","bracketArgs","rhandleName","rfixIE678","makeHandle","actionUUID","Action","protectedMenbers","createGetter","setter","createSetter","getValue","setValue","deep","deepCollect","beforeUpdate","oldValue","getPlainObject","$model","_ret","_i3","oldVal","newVal","diff","_isScheduled","schedule","removeDepends","self","depend","beforeDispose","obid","Mutation","childVm","createProxy","ignoreIE","updateVersion","collect","childOb","__dep__","notify","list","propagateChanged","newValue","hash","childVM","instability","Computed","_super","__","entire","undefined","trackAndCompute","isStable","substring","cp","shouldCompute","toComputed","IProxy","definition","inProxyMode","modelAccessor","watchFactory","fireFactory","define","modelFactory","core","hideProperty","canHijack","createAccessor","_key","createViewModel","afterCreate","$proxyItemBackdoorMap","$proxyItemBackdoor","mutation","Accessor","enumerable","configurable","toJson","xtype","listFactory","itemFactory","before","after","fuseFactory","_splice","__array__","toJSON","pushArray","clear","removeAll","eliminate","original","hijackMethods","_dd","canHideProperty","protectedVB","writable","wrapIt","w","__proxy__","bindThis","ac","_key2","defineProperties","timeBucket","desc","__defineSetter__","descs","VBClassPool","execScript","VBMediator","instance","accessors","accessor","properties","buffer","uniq","parseVB","impCb","priority","getScope","removeClass","onReady","arrayWarn","cssDiff","hasChange","patch","deepEquals","_i4","_i5","wrap","getEnumerableKeys","level","aIsArray","noThisPropError","equalArray","equalObject","checker","TransitionEvent","WebKitTransitionEvent","OTransitionEvent","otransitionEvent","css3","tran","ani","name$2","animationEndEvent","transitionEndEvent","effectDir","effect","is","animating","globalOption","effects","finalOption","actionMaps","Effect","queue","animationQueue","callNextAnimation","true","false","leave","move","patchObject","enterClass","leaveClass","execHooks","fns","createAction","staggerCache","lower","staggerTime","stagger","staggerKey","count","items","stopAnimationID","staggerIndex","animationDone","isOk","__ms_effect_","clearTimeout","ok","addClass","time","computedStyles","tranDuration","transitionDuration","animDuration","animationDuration","toMillisecond","getAnimationTime","applyEffect","curEffect","old","getAction","rsecond","ratio","none","parseDisplay","continueScan","lookupOption","getOptionValue","setOption","show","displayValue","directive$$1","propName","scopeName","outerText","message","updateAttrs","oldRoot","placeholder","isShow","replaceChild","beforeInit","eventType","updateDataActions","rawValue","parsedValue","parseValue","duplexCb","pos","caret","setCaret","radio","isChecked","checkbox","__test__","field","contenteditable","userCb","updateDataHandle","_ms_duplex_","composing","getCaret","debounceTime","timestamp","dtype","debounceID","isChanged","rchangeFilter","rdebounceFilter","valueHijack","setters","aproto","HTMLInputElement","bproto","HTMLTextAreaElement","newSetter","isString","inputProto","getOwnPropertyNames","getOwnPropertyDescriptor","updateView","updateChecked","rforAs","rident","rinvalid","rargs","getTraceKey","FragmentDecorator","keyName","valName","asName","isInCache","id","r","saveInCache","component","trackId","kv","signature","forDir","updating","traceIds","fragments","preFragments","createFragments","oldTrackIds","newCache","fuzzy","_dispose","fuzzyMatchCache","diffList","isEnd","nextSibling","insertBefore","ch","parentChildren","startIndex","endIndex","updateList","classEvent","activateClass","abandonClass","tabIndex","tabindex","classNames","classes","arg","argType","dirType","neo","setClass","oldClass","active","hover","classMap","updateDataEvents","events","webkitURL","webkitEditableContentChanged","MutationEvent","DOMCharacterDataModified","updateModelKeyDown","updateModelDelay","closeComposition","openComposition","propertychange","updateModelHack","Int8Array","netscape","DOMAutoComplete","openCaret","closeCaret","mayBeAsync","cursorPosition","range$$1","createTextRange","collapse","moveEnd","moveStart","selectionStart","setSelectionRange","normalizedValue","textInputRange","endRange","selectionEnd","selection","createRange","parentElement","moveToBookmark","getBookmark","compareEndPoints","pollValue","isIE","valueHijack$$1","intervalID","setInterval","clearInterval","etype","duplex","compareVal","addEvent","__pollValue","oldUpdate","firstCheckedIt","isRegExp","rules","rmail","rurl","pattern","next","h5pattern","norequired","required","equalto","getElementById","year","month","getFullYear","getMonth","getDate","isCorrectDate","url","email","minlength","maxlength","chs","valiDir","validator","fields","vmValidator","_ms_validate_","collectFeild","findValidator","onManual","validateAll","onValidateAll","validateAllInSubmit","validateAllInSubmitFn","promises","validate","Promise","then","reasons","deduplicateInValidateAll","reason","uniqueID","isValidateAll","ngs","ruleName","ruleValue","resolve","validateRule","getMessage","onSuccess","onError","onComplete","getValidate","bindValidateEvent","msValidator","singleValidate","validateInKeyup","validateInBlur","resetInFocus","onReset","rformat","Directive","binding","render","decorator","mount","callbacks","eventMap","parseAttributes","dirs","tuple","bindings","hasIf","byPriority","rimprovePriority","rinnerValue","parseInterpolate","dir","tokens","groupTree","vlength","getChildren","domlength","appendChildMayThrowError","getSelectedValue","dumpTree","getRange","startWith","long","viewID","Render","beforeReady","newUpdate","viewChanging","vmodel","scanChildren","isRoot","scanText","scanComment","scanTag","complete","getForBinding","hasDir","hasFor","oldName","templateCaches","serverTemplates","clazz","getForBindingByElement","delayCompileNodes","yieldDirectives","optimizeDirectives","_i6","ms-for","slot","componentEvents","componentQueue","replaceRoot","fireComponentHook","collectHooks","resetParentChildren","componentExtend","soleSlot","cacheVm","comment","toObject","components","fromCache","comVm","hooks","def","createComponentVm","nodesWithSlot","directives$$1","curVM","curText","childBoss","arraySlot","objectSlot","insertArraySlot","insertObjectSlot","reInit","extend","addToQueue","module","exports"],"mappings":"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","file":"static/js/async-vendors.01a5f402e23b2cf781a0.js","sourcesContent":["/*!\nbuilt in 2018-2-7:20:17 version 2.2.10 by 司徒正美\nhttps://github.com/RubyLouvre/avalon/tree/2.2.9\n修复ms-for循环生成option与ms-deplex的联动问题\n解决 IE8 html 属性中的中文被转成 unicode 字符串问题 \n修复多个计算属性不更新的问题\n\n*/(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.avalon = factory();\n})(this, function () {\n    'use strict';\n\n    var win = typeof window === 'object' ? window : typeof global === 'object' ? global : {};\n\n    var inBrowser = !!win.location && win.navigator;\n    /* istanbul ignore if  */\n\n    var document$1 = inBrowser ? win.document : {\n        createElement: Object,\n        createElementNS: Object,\n        documentElement: 'xx',\n        contains: Boolean\n    };\n    var root = inBrowser ? document$1.documentElement : {\n        outerHTML: 'x'\n    };\n\n    var versions = {\n        objectobject: 7, //IE7-8\n        objectundefined: 6, //IE6\n        undefinedfunction: NaN, // other modern browsers\n        undefinedobject: NaN //Mobile Safari 8.0.0 (iOS 8.4.0) \n        //objectfunction chrome 47\n    };\n    /* istanbul ignore next  */\n    var msie$1 = document$1.documentMode || versions[typeof document$1.all + typeof XMLHttpRequest];\n\n    var modern = /NaN|undefined/.test(msie$1) || msie$1 > 8;\n\n    /*\n     https://github.com/rsms/js-lru\n     entry             entry             entry             entry        \n     ______            ______            ______            ______       \n     | head |.newer => |      |.newer => |      |.newer => | tail |      \n     |  A   |          |  B   |          |  C   |          |  D   |      \n     |______| <= older.|______| <= older.|______| <= older.|______|      \n     \n     removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added \n     */\n    function Cache(maxLength) {\n        // 标识当前缓存数组的大小\n        this.size = 0;\n        // 标识缓存数组能达到的最大长度\n        this.limit = maxLength;\n        //  head（最不常用的项），tail（最常用的项）全部初始化为undefined\n\n        this.head = this.tail = void 0;\n        this._keymap = {};\n    }\n\n    Cache.prototype = {\n        put: function put(key, value) {\n            var entry = {\n                key: key,\n                value: value\n            };\n            this._keymap[key] = entry;\n            if (this.tail) {\n                // 如果存在tail（缓存数组的长度不为0），将tail指向新的 entry\n                this.tail.newer = entry;\n                entry.older = this.tail;\n            } else {\n                // 如果缓存数组的长度为0，将head指向新的entry\n                this.head = entry;\n            }\n            this.tail = entry;\n            // 如果缓存数组达到上限，则先删除 head 指向的缓存对象\n            /* istanbul ignore if */\n            if (this.size === this.limit) {\n                this.shift();\n            } else {\n                this.size++;\n            }\n            return value;\n        },\n        shift: function shift() {\n            /* istanbul ignore next */\n            var entry = this.head;\n            /* istanbul ignore if */\n            if (entry) {\n                // 删除 head ，并改变指向\n                this.head = this.head.newer;\n                // 同步更新 _keymap 里面的属性值\n                this.head.older = entry.newer = entry.older = this._keymap[entry.key] = void 0;\n                delete this._keymap[entry.key]; //#1029\n                // 同步更新 缓存数组的长度\n                this.size--;\n            }\n        },\n        get: function get(key) {\n            var entry = this._keymap[key];\n            // 如果查找不到含有`key`这个属性的缓存对象\n            if (entry === void 0) return;\n            // 如果查找到的缓存对象已经是 tail (最近使用过的)\n            /* istanbul ignore if */\n            if (entry === this.tail) {\n                return entry.value;\n            }\n            // HEAD--------------TAIL\n            //   <.older   .newer>\n            //  <--- add direction --\n            //   A  B  C  <D>  E\n            if (entry.newer) {\n                // 处理 newer 指向\n                if (entry === this.head) {\n                    // 如果查找到的缓存对象是 head (最近最少使用过的)\n                    // 则将 head 指向原 head 的 newer 所指向的缓存对象\n                    this.head = entry.newer;\n                }\n                // 将所查找的缓存对象的下一级的 older 指向所查找的缓存对象的older所指向的值\n                // 例如：A B C D E\n                // 如果查找到的是D，那么将E指向C，不再指向D\n                entry.newer.older = entry.older; // C <-- E.\n            }\n            if (entry.older) {\n                // 处理 older 指向\n                // 如果查找到的是D，那么C指向E，不再指向D\n                entry.older.newer = entry.newer; // C. --> E\n            }\n            // 处理所查找到的对象的 newer 以及 older 指向\n            entry.newer = void 0; // D --x\n            // older指向之前使用过的变量，即D指向E\n            entry.older = this.tail; // D. --> E\n            if (this.tail) {\n                // 将E的newer指向D\n                this.tail.newer = entry; // E. <-- D\n            }\n            // 改变 tail 为D \n            this.tail = entry;\n            return entry.value;\n        }\n    };\n\n    var delayCompile = {};\n\n    var directives = {};\n\n    function directive(name, opts) {\n        if (directives[name]) {\n            avalon.warn(name, 'directive have defined! ');\n        }\n        directives[name] = opts;\n        if (!opts.update) {\n            opts.update = function () {};\n        }\n        if (opts.delay) {\n            delayCompile[name] = 1;\n        }\n        return opts;\n    }\n\n    function delayCompileNodes(dirs) {\n        for (var i in delayCompile) {\n            if ('ms-' + i in dirs) {\n                return true;\n            }\n        }\n    }\n\n    var window$1 = win;\n    function avalon(el) {\n        return new avalon.init(el);\n    }\n\n    avalon.init = function (el) {\n        this[0] = this.element = el;\n    };\n\n    avalon.fn = avalon.prototype = avalon.init.prototype;\n\n    function shadowCopy(destination, source) {\n        for (var property in source) {\n            destination[property] = source[property];\n        }\n        return destination;\n    }\n    var rword = /[^, ]+/g;\n    var rnowhite = /\\S+/g; //存在非空字符\n    var platform = {}; //用于放置平台差异的方法与属性\n\n\n    function oneObject(array, val) {\n        if (typeof array === 'string') {\n            array = array.match(rword) || [];\n        }\n        var result = {},\n            value = val !== void 0 ? val : 1;\n        for (var i = 0, n = array.length; i < n; i++) {\n            result[array[i]] = value;\n        }\n        return result;\n    }\n\n    var op = Object.prototype;\n    function quote(str) {\n        return avalon._quote(str);\n    }\n    var inspect = op.toString;\n    var ohasOwn = op.hasOwnProperty;\n    var ap = Array.prototype;\n\n    var hasConsole = typeof console === 'object';\n    avalon.config = { debug: true };\n    function log() {\n        if (hasConsole && avalon.config.debug) {\n            Function.apply.call(console.log, console, arguments);\n        }\n    }\n    function warn() {\n        if (hasConsole && avalon.config.debug) {\n            var method = console.warn || console.log;\n            // http://qiang106.iteye.com/blog/1721425\n            Function.apply.call(method, console, arguments);\n        }\n    }\n    function error(str, e) {\n        throw (e || Error)(str);\n    }\n    function noop() {}\n    function isObject(a) {\n        return a !== null && typeof a === 'object';\n    }\n\n    function range(start, end, step) {\n        // 用于生成整数数组\n        step || (step = 1);\n        if (end == null) {\n            end = start || 0;\n            start = 0;\n        }\n        var index = -1,\n            length = Math.max(0, Math.ceil((end - start) / step)),\n            result = new Array(length);\n        while (++index < length) {\n            result[index] = start;\n            start += step;\n        }\n        return result;\n    }\n\n    var rhyphen = /([a-z\\d])([A-Z]+)/g;\n    function hyphen(target) {\n        //转换为连字符线风格\n        return target.replace(rhyphen, '$1-$2').toLowerCase();\n    }\n\n    var rcamelize = /[-_][^-_]/g;\n    function camelize(target) {\n        //提前判断，提高getStyle等的效率\n        if (!target || target.indexOf('-') < 0 && target.indexOf('_') < 0) {\n            return target;\n        }\n        //转换为驼峰风格\n        return target.replace(rcamelize, function (match) {\n            return match.charAt(1).toUpperCase();\n        });\n    }\n\n    var _slice = ap.slice;\n    function slice(nodes, start, end) {\n        return _slice.call(nodes, start, end);\n    }\n\n    var rhashcode = /\\d\\.\\d{4}/;\n    //生成UUID http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n    function makeHashCode(prefix) {\n        /* istanbul ignore next*/\n        prefix = prefix || 'avalon';\n        /* istanbul ignore next*/\n        return String(Math.random() + Math.random()).replace(rhashcode, prefix);\n    }\n    //生成事件回调的UUID(用户通过ms-on指令)\n    function getLongID(fn) {\n        /* istanbul ignore next */\n        return fn.uuid || (fn.uuid = makeHashCode('e'));\n    }\n    var UUID = 1;\n    //生成事件回调的UUID(用户通过avalon.bind)\n    function getShortID(fn) {\n        /* istanbul ignore next */\n        return fn.uuid || (fn.uuid = '_' + ++UUID);\n    }\n\n    var rescape = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n    function escapeRegExp(target) {\n        //http://stevenlevithan.com/regex/xregexp/\n        //将字符串安全格式化为正则表达式的源码\n        return (target + '').replace(rescape, '\\\\$&');\n    }\n\n    var eventHooks = {};\n    var eventListeners = {};\n    var validators = {};\n    var cssHooks = {};\n\n    window$1.avalon = avalon;\n\n    function createFragment() {\n        /* istanbul ignore next  */\n        return document$1.createDocumentFragment();\n    }\n\n    var rentities = /&[a-z0-9#]{2,10};/;\n    var temp = document$1.createElement('div');\n    shadowCopy(avalon, {\n        Array: {\n            merge: function merge(target, other) {\n                //合并两个数组 avalon2新增\n                target.push.apply(target, other);\n            },\n            ensure: function ensure(target, item) {\n                //只有当前数组不存在此元素时只添加它\n                if (target.indexOf(item) === -1) {\n                    return target.push(item);\n                }\n            },\n            removeAt: function removeAt(target, index) {\n                //移除数组中指定位置的元素，返回布尔表示成功与否\n                return !!target.splice(index, 1).length;\n            },\n            remove: function remove(target, item) {\n                //移除数组中第一个匹配传参的那个元素，返回布尔表示成功与否\n                var index = target.indexOf(item);\n                if (~index) return avalon.Array.removeAt(target, index);\n                return false;\n            }\n        },\n        evaluatorPool: new Cache(888),\n        parsers: {\n            number: function number(a) {\n                return a === '' ? '' : parseFloat(a) || 0;\n            },\n            string: function string(a) {\n                return a === null || a === void 0 ? '' : a + '';\n            },\n            \"boolean\": function boolean(a) {\n                if (a === '') return a;\n                return a === 'true' || a === '1';\n            }\n        },\n        _decode: function _decode(str) {\n            if (rentities.test(str)) {\n                temp.innerHTML = str;\n                return temp.innerText || temp.textContent;\n            }\n            return str;\n        }\n    });\n\n    //============== config ============\n    function config(settings) {\n        for (var p in settings) {\n            var val = settings[p];\n            if (typeof config.plugins[p] === 'function') {\n                config.plugins[p](val);\n            } else {\n                config[p] = val;\n            }\n        }\n        return this;\n    }\n\n    var plugins = {\n        interpolate: function interpolate(array) {\n            var openTag = array[0];\n            var closeTag = array[1];\n            if (openTag === closeTag) {\n                throw new SyntaxError('interpolate openTag cannot equal to closeTag');\n            }\n            var str = openTag + 'test' + closeTag;\n\n            if (/[<>]/.test(str)) {\n                throw new SyntaxError('interpolate cannot contains \"<\" or \">\"');\n            }\n\n            config.openTag = openTag;\n            config.closeTag = closeTag;\n            var o = escapeRegExp(openTag);\n            var c = escapeRegExp(closeTag);\n\n            config.rtext = new RegExp(o + '(.+?)' + c, 'g');\n            config.rexpr = new RegExp(o + '([\\\\s\\\\S]*)' + c);\n        }\n    };\n    function createAnchor(nodeValue) {\n        return document$1.createComment(nodeValue);\n    }\n    config.plugins = plugins;\n    config({\n        interpolate: ['{{', '}}'],\n        debug: true\n    });\n    //============  config ============\n\n    shadowCopy(avalon, {\n        shadowCopy: shadowCopy,\n\n        oneObject: oneObject,\n        inspect: inspect,\n        ohasOwn: ohasOwn,\n        rword: rword,\n        version: \"2.2.10\",\n        vmodels: {},\n\n        directives: directives,\n        directive: directive,\n\n        eventHooks: eventHooks,\n        eventListeners: eventListeners,\n        validators: validators,\n        cssHooks: cssHooks,\n\n        log: log,\n        noop: noop,\n        warn: warn,\n        error: error,\n        config: config,\n\n        modern: modern,\n        msie: msie$1,\n        root: root,\n        document: document$1,\n        window: window$1,\n        inBrowser: inBrowser,\n\n        isObject: isObject,\n        range: range,\n        slice: slice,\n        hyphen: hyphen,\n        camelize: camelize,\n        escapeRegExp: escapeRegExp,\n        quote: quote,\n\n        makeHashCode: makeHashCode\n\n    });\n\n    /**\n     * 此模块用于修复语言的底层缺陷\n     */\n    function isNative(fn) {\n        return (/\\[native code\\]/.test(fn)\n        );\n    }\n\n    /* istanbul ignore if*/\n    if (!isNative('司徒正美'.trim)) {\n        var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n        String.prototype.trim = function () {\n            return this.replace(rtrim, '');\n        };\n    }\n    if (!Object.create) {\n        Object.create = function () {\n            function F() {}\n\n            return function (o) {\n                if (arguments.length != 1) {\n                    throw new Error('Object.create implementation only accepts one parameter.');\n                }\n                F.prototype = o;\n                return new F();\n            };\n        }();\n    }\n    var hasDontEnumBug = !{\n        'toString': null\n    }.propertyIsEnumerable('toString');\n    var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');\n    var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n    var dontEnumsLength = dontEnums.length;\n    /* istanbul ignore if*/\n    if (!isNative(Object.keys)) {\n        Object.keys = function (object) {\n            //ecma262v5 15.2.3.14\n            var theKeys = [];\n            var skipProto = hasProtoEnumBug && typeof object === 'function';\n            if (typeof object === 'string' || object && object.callee) {\n                for (var i = 0; i < object.length; ++i) {\n                    theKeys.push(String(i));\n                }\n            } else {\n                for (var name in object) {\n                    if (!(skipProto && name === 'prototype') && ohasOwn.call(object, name)) {\n                        theKeys.push(String(name));\n                    }\n                }\n            }\n\n            if (hasDontEnumBug) {\n                var ctor = object.constructor,\n                    skipConstructor = ctor && ctor.prototype === object;\n                for (var j = 0; j < dontEnumsLength; j++) {\n                    var dontEnum = dontEnums[j];\n                    if (!(skipConstructor && dontEnum === 'constructor') && ohasOwn.call(object, dontEnum)) {\n                        theKeys.push(dontEnum);\n                    }\n                }\n            }\n            return theKeys;\n        };\n    }\n    /* istanbul ignore if*/\n    if (!isNative(Array.isArray)) {\n        Array.isArray = function (a) {\n            return Object.prototype.toString.call(a) === '[object Array]';\n        };\n    }\n\n    /* istanbul ignore if*/\n    if (!isNative(isNative.bind)) {\n        /* istanbul ignore next*/\n        Function.prototype.bind = function (scope) {\n            if (arguments.length < 2 && scope === void 0) return this;\n            var fn = this,\n                argv = arguments;\n            return function () {\n                var args = [],\n                    i;\n                for (i = 1; i < argv.length; i++) {\n                    args.push(argv[i]);\n                }for (i = 0; i < arguments.length; i++) {\n                    args.push(arguments[i]);\n                }return fn.apply(scope, args);\n            };\n        };\n    }\n    //https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n\n    try {\n        // Can't be used with DOM elements in IE < 9\n        _slice.call(avalon.document.documentElement);\n    } catch (e) {\n        // Fails in IE < 9\n        // This will work for genuine arrays, array-like objects,\n        // NamedNodeMap (attributes, entities, notations),\n        // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n        // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n        /* istanbul ignore next*/\n        ap.slice = function (begin, end) {\n            // IE < 9 gets unhappy with an undefined end argument\n            end = typeof end !== 'undefined' ? end : this.length;\n\n            // For native Array objects, we use the native slice function\n            if (Array.isArray(this)) {\n                return _slice.call(this, begin, end);\n            }\n\n            // For array like object we handle it ourselves.\n            var i,\n                cloned = [],\n                size,\n                len = this.length;\n\n            // Handle negative value for \"begin\"\n            var start = begin || 0;\n            start = start >= 0 ? start : len + start;\n\n            // Handle negative value for \"end\"\n            var upTo = end ? end : len;\n            if (end < 0) {\n                upTo = len + end;\n            }\n\n            // Actual expected size of the slice\n            size = upTo - start;\n\n            if (size > 0) {\n                cloned = new Array(size);\n                if (this.charAt) {\n                    for (i = 0; i < size; i++) {\n                        cloned[i] = this.charAt(start + i);\n                    }\n                } else {\n                    for (i = 0; i < size; i++) {\n                        cloned[i] = this[start + i];\n                    }\n                }\n            }\n\n            return cloned;\n        };\n    }\n    /* istanbul ignore next*/\n    function iterator(vars, body, ret) {\n        var fun = 'for(var ' + vars + 'i=0,n = this.length; i < n; i++){' + body.replace('_', '((i in this) && fn.call(scope,this[i],i,this))') + '}' + ret;\n        /* jshint ignore:start */\n        return Function('fn,scope', fun);\n        /* jshint ignore:end */\n    }\n    /* istanbul ignore if*/\n    if (!isNative(ap.map)) {\n        avalon.shadowCopy(ap, {\n            //定位操作，返回数组中第一个等于给定参数的元素的索引值。\n            indexOf: function indexOf(item, index) {\n                var n = this.length,\n                    i = ~~index;\n                if (i < 0) i += n;\n                for (; i < n; i++) {\n                    if (this[i] === item) return i;\n                }return -1;\n            },\n            //定位操作，同上，不过是从后遍历。\n            lastIndexOf: function lastIndexOf(item, index) {\n                var n = this.length,\n                    i = index == null ? n - 1 : index;\n                if (i < 0) i = Math.max(0, n + i);\n                for (; i >= 0; i--) {\n                    if (this[i] === item) return i;\n                }return -1;\n            },\n            //迭代操作，将数组的元素挨个儿传入一个函数中执行。Prototype.js的对应名字为each。\n            forEach: iterator('', '_', ''),\n            //迭代类 在数组中的每个项上运行一个函数，如果此函数的值为真，则此元素作为新数组的元素收集起来，并返回新数组\n            filter: iterator('r=[],j=0,', 'if(_)r[j++]=this[i]', 'return r'),\n            //收集操作，将数组的元素挨个儿传入一个函数中执行，然后把它们的返回值组成一个新数组返回。Prototype.js的对应名字为collect。\n            map: iterator('r=[],', 'r[i]=_', 'return r'),\n            //只要数组中有一个元素满足条件（放进给定函数返回true），那么它就返回true。Prototype.js的对应名字为any。\n            some: iterator('', 'if(_)return true', 'return false'),\n            //只有数组中的元素都满足条件（放进给定函数返回true），它才返回true。Prototype.js的对应名字为all。\n            every: iterator('', 'if(!_)return false', 'return true')\n        });\n    }\n\n    //这里放置存在异议的方法\n    var compaceQuote = function () {\n        //https://github.com/bestiejs/json3/blob/master/lib/json3.js\n        var Escapes = {\n            92: \"\\\\\\\\\",\n            34: '\\\\\"',\n            8: \"\\\\b\",\n            12: \"\\\\f\",\n            10: \"\\\\n\",\n            13: \"\\\\r\",\n            9: \"\\\\t\"\n        };\n\n        var leadingZeroes = '000000';\n        var toPaddedString = function toPaddedString(width, value) {\n            return (leadingZeroes + (value || 0)).slice(-width);\n        };\n        var unicodePrefix = '\\\\u00';\n        var escapeChar = function escapeChar(character) {\n            var charCode = character.charCodeAt(0),\n                escaped = Escapes[charCode];\n            if (escaped) {\n                return escaped;\n            }\n            return unicodePrefix + toPaddedString(2, charCode.toString(16));\n        };\n        var reEscape = /[\\x00-\\x1f\\x22\\x5c]/g;\n        return function (value) {\n            /* istanbul ignore next */\n            reEscape.lastIndex = 0;\n            /* istanbul ignore next */\n            return '\"' + (reEscape.test(value) ? String(value).replace(reEscape, escapeChar) : value) + '\"';\n        };\n    }();\n    try {\n        avalon._quote = msie <= 8 ? compaceQuote : JSON.stringify;\n    } catch (e) {\n        /* istanbul ignore next  */\n        avalon._quote = compaceQuote;\n    }\n\n    var class2type = {};\n    'Boolean Number String Function Array Date RegExp Object Error'.replace(avalon.rword, function (name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n\n    avalon.type = function (obj) {\n        //取得目标的类型\n        if (obj == null) {\n            return String(obj);\n        }\n        // 早期的webkit内核浏览器实现了已废弃的ecma262v4标准，可以将正则字面量当作函数使用，因此typeof在判定正则时会返回function\n        return typeof obj === 'object' || typeof obj === 'function' ? class2type[inspect.call(obj)] || 'object' : typeof obj;\n    };\n\n    var rfunction = /^\\s*\\bfunction\\b/;\n\n    avalon.isFunction = /* istanbul ignore if */typeof alert === 'object' ? function (fn) {\n        /* istanbul ignore next */\n        try {\n            /* istanbul ignore next */\n            return rfunction.test(fn + '');\n        } catch (e) {\n            /* istanbul ignore next */\n            return false;\n        }\n    } : function (fn) {\n        return inspect.call(fn) === '[object Function]';\n    };\n\n    // 利用IE678 window == document为true,document == window竟然为false的神奇特性\n    // 标准浏览器及IE9，IE10等使用 正则检测\n    /* istanbul ignore next */\n    function isWindowCompact(obj) {\n        if (!obj) {\n            return false;\n        }\n        return obj == obj.document && obj.document != obj; //jshint ignore:line\n    }\n\n    var rwindow = /^\\[object (?:Window|DOMWindow|global)\\]$/;\n\n    function isWindowModern(obj) {\n        return rwindow.test(inspect.call(obj));\n    }\n\n    avalon.isWindow = isWindowModern(avalon.window) ? isWindowModern : isWindowCompact;\n\n    var enu;\n    var enumerateBUG;\n    for (enu in avalon({})) {\n        break;\n    }\n\n    enumerateBUG = enu !== '0'; //IE6下为true, 其他为false\n\n    /*判定是否是一个朴素的javascript对象（Object），不是DOM对象，不是BOM对象，不是自定义类的实例*/\n    /* istanbul ignore next */\n    function isPlainObjectCompact(obj, key) {\n        if (!obj || avalon.type(obj) !== 'object' || obj.nodeType || avalon.isWindow(obj)) {\n            return false;\n        }\n        try {\n            //IE内置对象没有constructor\n            if (obj.constructor && !ohasOwn.call(obj, 'constructor') && !ohasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {\n                return false;\n            }\n            var isVBscript = obj.$vbthis;\n        } catch (e) {\n            //IE8 9会在这里抛错\n            return false;\n        }\n        /* istanbul ignore if */\n        if (enumerateBUG) {\n            for (key in obj) {\n                return ohasOwn.call(obj, key);\n            }\n        }\n        for (key in obj) {}\n        return key === undefined$1 || ohasOwn.call(obj, key);\n    }\n\n    /* istanbul ignore next */\n    function isPlainObjectModern(obj) {\n        // 简单的 typeof obj === 'object'检测，会致使用isPlainObject(window)在opera下通不过\n        return inspect.call(obj) === '[object Object]' && Object.getPrototypeOf(obj) === Object.prototype;\n    }\n    /* istanbul ignore next */\n    avalon.isPlainObject = /\\[native code\\]/.test(Object.getPrototypeOf) ? isPlainObjectModern : isPlainObjectCompact;\n\n    var rcanMix = /object|function/;\n\n    //与jQuery.extend方法，可用于浅拷贝，深拷贝\n    /* istanbul ignore next */\n    avalon.mix = avalon.fn.mix = function () {\n        var n = arguments.length,\n            isDeep = false,\n            i = 0,\n            array = [];\n        if (arguments[0] === true) {\n            isDeep = true;\n            i = 1;\n        }\n        //将所有非空对象变成空对象\n        for (; i < n; i++) {\n            var el = arguments[i];\n            el = el && rcanMix.test(typeof el) ? el : {};\n            array.push(el);\n        }\n        if (array.length === 1) {\n            array.unshift(this);\n        }\n        return innerExtend(isDeep, array);\n    };\n    var undefined$1;\n\n    function innerExtend(isDeep, array) {\n        var target = array[0],\n            copyIsArray,\n            clone,\n            name;\n        for (var i = 1, length = array.length; i < length; i++) {\n            //只处理非空参数\n            var options = array[i];\n            var noCloneArrayMethod = Array.isArray(options);\n            for (name in options) {\n                if (noCloneArrayMethod && !options.hasOwnProperty(name)) {\n                    continue;\n                }\n                try {\n                    var src = target[name];\n                    var copy = options[name]; //当options为VBS对象时报错\n                } catch (e) {\n                    continue;\n                }\n\n                // 防止环引用\n                if (target === copy) {\n                    continue;\n                }\n                if (isDeep && copy && (avalon.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        clone = src && Array.isArray(src) ? src : [];\n                    } else {\n                        clone = src && avalon.isPlainObject(src) ? src : {};\n                    }\n\n                    target[name] = innerExtend(isDeep, [clone, copy]);\n                } else if (copy !== undefined$1) {\n                    target[name] = copy;\n                }\n            }\n        }\n        return target;\n    }\n\n    var rarraylike = /(Array|List|Collection|Map|Arguments)\\]$/;\n    /*判定是否类数组，如节点集合，纯数组，arguments与拥有非负整数的length属性的纯JS对象*/\n    /* istanbul ignore next */\n    function isArrayLike(obj) {\n        if (!obj) return false;\n        var n = obj.length;\n        if (n === n >>> 0) {\n            //检测length属性是否为非负整数\n            var type = inspect.call(obj);\n            if (rarraylike.test(type)) return true;\n            if (type !== '[object Object]') return false;\n            try {\n                if ({}.propertyIsEnumerable.call(obj, 'length') === false) {\n                    //如果是原生对象\n                    return rfunction.test(obj.item || obj.callee);\n                }\n                return true;\n            } catch (e) {\n                //IE的NodeList直接抛错\n                return !obj.window; //IE6-8 window\n            }\n        }\n        return false;\n    }\n\n    avalon.each = function (obj, fn) {\n        if (obj) {\n            //排除null, undefined\n            var i = 0;\n            if (isArrayLike(obj)) {\n                for (var n = obj.length; i < n; i++) {\n                    if (fn(i, obj[i]) === false) break;\n                }\n            } else {\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i) && fn(i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    (function () {\n        var welcomeIntro = [\"%cavalon.js %c\" + avalon.version + \" %cin debug mode, %cmore...\", \"color: rgb(114, 157, 52); font-weight: normal;\", \"color: rgb(85, 85, 85); font-weight: normal;\", \"color: rgb(85, 85, 85); font-weight: normal;\", \"color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;\"];\n        var welcomeMessage = \"You're running avalon in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\\n\\n\" + 'To disable debug mode, add this line at the start of your app:\\n\\n  avalon.config({debug: false});\\n\\n' + 'Debug mode also automatically shut down amicably when your app is minified.\\n\\n' + \"Get help and support:\\n  https://segmentfault.com/t/avalon\\n  http://avalonjs.coding.me/\\n  http://www.baidu-x.com/?q=avalonjs\\n  http://www.avalon.org.cn/\\n\\nFound a bug? Raise an issue:\\n  https://github.com/RubyLouvre/avalon/issues\\n\\n\";\n        if (typeof console === 'object') {\n            var con = console;\n            var method = con.groupCollapsed || con.log;\n            Function.apply.call(method, con, welcomeIntro);\n            con.log(welcomeMessage);\n            if (method !== console.log) {\n                con.groupEnd(welcomeIntro);\n            }\n        }\n    })();\n\n    function toFixedFix(n, prec) {\n        var k = Math.pow(10, prec);\n        return '' + (Math.round(n * k) / k).toFixed(prec);\n    }\n    function numberFilter(number, decimals, point, thousands) {\n        //https://github.com/txgruppi/number_format\n        //form http://phpjs.org/functions/number_format/\n        //number 必需，要格式化的数字\n        //decimals 可选，规定多少个小数位。\n        //point 可选，规定用作小数点的字符串（默认为 . ）。\n        //thousands 可选，规定用作千位分隔符的字符串（默认为 , ），如果设置了该参数，那么所有其他参数都是必需的。\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\n        var n = !isFinite(+number) ? 0 : +number,\n            prec = !isFinite(+decimals) ? 3 : Math.abs(decimals),\n            sep = typeof thousands === 'string' ? thousands : \",\",\n            dec = point || \".\",\n            s = '';\n\n        // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n        if (s[0].length > 3) {\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n        }\n        /** //好像没有用\n         var s1 = s[1] || ''\n        \n          if (s1.length < prec) {\n                  s1 += new Array(prec - s[1].length + 1).join('0')\n                  s[1] = s1\n          }\n          **/\n        return s.join(dec);\n    }\n\n    var rscripts = /<script[^>]*>([\\S\\s]*?)<\\/script\\s*>/gim;\n    var ron = /\\s+(on[^=\\s]+)(?:=(\"[^\"]*\"|'[^']*'|[^\\s>]+))?/g;\n    var ropen = /<\\w+\\b(?:([\"'])[^\"]*?(\\1)|[^>])*>/ig;\n    var rsanitize = {\n        a: /\\b(href)\\=(\"javascript[^\"]*\"|'javascript[^']*')/ig,\n        img: /\\b(src)\\=(\"javascript[^\"]*\"|'javascript[^']*')/ig,\n        form: /\\b(action)\\=(\"javascript[^\"]*\"|'javascript[^']*')/ig\n    };\n\n    //https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n    //    <a href=\"javasc&NewLine;ript&colon;alert('XSS')\">chrome</a> \n    //    <a href=\"data:text/html;base64, PGltZyBzcmM9eCBvbmVycm9yPWFsZXJ0KDEpPg==\">chrome</a>\n    //    <a href=\"jav\tascript:alert('XSS');\">IE67chrome</a>\n    //    <a href=\"jav&#x09;ascript:alert('XSS');\">IE67chrome</a>\n    //    <a href=\"jav&#x0A;ascript:alert('XSS');\">IE67chrome</a>\n    function sanitizeFilter(str) {\n        return str.replace(rscripts, \"\").replace(ropen, function (a, b) {\n            var match = a.toLowerCase().match(/<(\\w+)\\s/);\n            if (match) {\n                //处理a标签的href属性，img标签的src属性，form标签的action属性\n                var reg = rsanitize[match[1]];\n                if (reg) {\n                    a = a.replace(reg, function (s, name, value) {\n                        var quote = value.charAt(0);\n                        return name + \"=\" + quote + \"javascript:void(0)\" + quote; // jshint ignore:line\n                    });\n                }\n            }\n            return a.replace(ron, \" \").replace(/\\s+/g, \" \"); //移除onXXX事件\n        });\n    }\n\n    /*\n     'yyyy': 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n     'yy': 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n     'y': 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n     'MMMM': Month in year (January-December)\n     'MMM': Month in year (Jan-Dec)\n     'MM': Month in year, padded (01-12)\n     'M': Month in year (1-12)\n     'dd': Day in month, padded (01-31)\n     'd': Day in month (1-31)\n     'EEEE': Day in Week,(Sunday-Saturday)\n     'EEE': Day in Week, (Sun-Sat)\n     'HH': Hour in day, padded (00-23)\n     'H': Hour in day (0-23)\n     'hh': Hour in am/pm, padded (01-12)\n     'h': Hour in am/pm, (1-12)\n     'mm': Minute in hour, padded (00-59)\n     'm': Minute in hour (0-59)\n     'ss': Second in minute, padded (00-59)\n     's': Second in minute (0-59)\n     'a': am/pm marker\n     'Z': 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n     format string can also be one of the following predefined localizable formats:\n     \n     'medium': equivalent to 'MMM d, y h:mm:ss a' for en_US locale (e.g. Sep 3, 2010 12:05:08 pm)\n     'short': equivalent to 'M/d/yy h:mm a' for en_US locale (e.g. 9/3/10 12:05 pm)\n     'fullDate': equivalent to 'EEEE, MMMM d,y' for en_US locale (e.g. Friday, September 3, 2010)\n     'longDate': equivalent to 'MMMM d, y' for en_US locale (e.g. September 3, 2010\n     'mediumDate': equivalent to 'MMM d, y' for en_US locale (e.g. Sep 3, 2010)\n     'shortDate': equivalent to 'M/d/yy' for en_US locale (e.g. 9/3/10)\n     'mediumTime': equivalent to 'h:mm:ss a' for en_US locale (e.g. 12:05:08 pm)\n     'shortTime': equivalent to 'h:mm a' for en_US locale (e.g. 12:05 pm)\n     */\n\n    function toInt(str) {\n        return parseInt(str, 10) || 0;\n    }\n\n    function padNumber(num, digits, trim) {\n        var neg = '';\n        /* istanbul ignore if*/\n        if (num < 0) {\n            neg = '-';\n            num = -num;\n        }\n        num = '' + num;\n        while (num.length < digits) {\n            num = '0' + num;\n        }if (trim) num = num.substr(num.length - digits);\n        return neg + num;\n    }\n\n    function dateGetter(name, size, offset, trim) {\n        return function (date) {\n            var value = date[\"get\" + name]();\n            if (offset > 0 || value > -offset) value += offset;\n            if (value === 0 && offset === -12) {\n                /* istanbul ignore next*/\n                value = 12;\n            }\n            return padNumber(value, size, trim);\n        };\n    }\n\n    function dateStrGetter(name, shortForm) {\n        return function (date, formats) {\n            var value = date[\"get\" + name]();\n            var get = (shortForm ? \"SHORT\" + name : name).toUpperCase();\n            return formats[get][value];\n        };\n    }\n\n    function timeZoneGetter(date) {\n        var zone = -1 * date.getTimezoneOffset();\n        var paddedZone = zone >= 0 ? \"+\" : \"\";\n        paddedZone += padNumber(Math[zone > 0 ? \"floor\" : \"ceil\"](zone / 60), 2) + padNumber(Math.abs(zone % 60), 2);\n        return paddedZone;\n    }\n    //取得上午下午\n    function ampmGetter(date, formats) {\n        return date.getHours() < 12 ? formats.AMPMS[0] : formats.AMPMS[1];\n    }\n    var DATE_FORMATS = {\n        yyyy: dateGetter(\"FullYear\", 4),\n        yy: dateGetter(\"FullYear\", 2, 0, true),\n        y: dateGetter(\"FullYear\", 1),\n        MMMM: dateStrGetter(\"Month\"),\n        MMM: dateStrGetter(\"Month\", true),\n        MM: dateGetter(\"Month\", 2, 1),\n        M: dateGetter(\"Month\", 1, 1),\n        dd: dateGetter(\"Date\", 2),\n        d: dateGetter(\"Date\", 1),\n        HH: dateGetter(\"Hours\", 2),\n        H: dateGetter(\"Hours\", 1),\n        hh: dateGetter(\"Hours\", 2, -12),\n        h: dateGetter(\"Hours\", 1, -12),\n        mm: dateGetter(\"Minutes\", 2),\n        m: dateGetter(\"Minutes\", 1),\n        ss: dateGetter(\"Seconds\", 2),\n        s: dateGetter(\"Seconds\", 1),\n        sss: dateGetter(\"Milliseconds\", 3),\n        EEEE: dateStrGetter(\"Day\"),\n        EEE: dateStrGetter(\"Day\", true),\n        a: ampmGetter,\n        Z: timeZoneGetter\n    };\n    var rdateFormat = /((?:[^yMdHhmsaZE']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z))(.*)/;\n    var raspnetjson = /^\\/Date\\((\\d+)\\)\\/$/;\n    function dateFilter(date, format) {\n        var locate = dateFilter.locate,\n            text = \"\",\n            parts = [],\n            fn,\n            match;\n        format = format || \"mediumDate\";\n        format = locate[format] || format;\n        if (typeof date === \"string\") {\n            if (/^\\d+$/.test(date)) {\n                date = toInt(date);\n            } else if (raspnetjson.test(date)) {\n                date = +RegExp.$1;\n            } else {\n                var trimDate = date.trim();\n                var dateArray = [0, 0, 0, 0, 0, 0, 0];\n                var oDate = new Date(0);\n                //取得年月日\n                trimDate = trimDate.replace(/^(\\d+)\\D(\\d+)\\D(\\d+)/, function (_, a, b, c) {\n                    var array = c.length === 4 ? [c, a, b] : [a, b, c];\n                    dateArray[0] = toInt(array[0]); //年\n                    dateArray[1] = toInt(array[1]) - 1; //月\n                    dateArray[2] = toInt(array[2]); //日\n                    return \"\";\n                });\n                var dateSetter = oDate.setFullYear;\n                var timeSetter = oDate.setHours;\n                trimDate = trimDate.replace(/[T\\s](\\d+):(\\d+):?(\\d+)?\\.?(\\d)?/, function (_, a, b, c, d) {\n                    dateArray[3] = toInt(a); //小时\n                    dateArray[4] = toInt(b); //分钟\n                    dateArray[5] = toInt(c); //秒\n                    if (d) {\n                        //毫秒\n                        dateArray[6] = Math.round(parseFloat(\"0.\" + d) * 1000);\n                    }\n                    return \"\";\n                });\n                var tzHour = 0;\n                var tzMin = 0;\n                trimDate = trimDate.replace(/Z|([+-])(\\d\\d):?(\\d\\d)/, function (z, symbol, c, d) {\n                    dateSetter = oDate.setUTCFullYear;\n                    timeSetter = oDate.setUTCHours;\n                    if (symbol) {\n                        tzHour = toInt(symbol + c);\n                        tzMin = toInt(symbol + d);\n                    }\n                    return '';\n                });\n\n                dateArray[3] -= tzHour;\n                dateArray[4] -= tzMin;\n                dateSetter.apply(oDate, dateArray.slice(0, 3));\n                timeSetter.apply(oDate, dateArray.slice(3));\n                date = oDate;\n            }\n        }\n        if (typeof date === 'number') {\n            date = new Date(date);\n        }\n\n        while (format) {\n            match = rdateFormat.exec(format);\n            /* istanbul ignore else */\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                format = parts.pop();\n            } else {\n                parts.push(format);\n                format = null;\n            }\n        }\n        parts.forEach(function (value) {\n            fn = DATE_FORMATS[value];\n            text += fn ? fn(date, locate) : value.replace(/(^'|'$)/g, \"\").replace(/''/g, \"'\");\n        });\n        return text;\n    }\n\n    var locate = {\n        AMPMS: {\n            0: '上午',\n            1: '下午'\n        },\n        DAY: {\n            0: '星期日',\n            1: '星期一',\n            2: '星期二',\n            3: '星期三',\n            4: '星期四',\n            5: '星期五',\n            6: '星期六'\n        },\n        MONTH: {\n            0: '1月',\n            1: '2月',\n            2: '3月',\n            3: '4月',\n            4: '5月',\n            5: '6月',\n            6: '7月',\n            7: '8月',\n            8: '9月',\n            9: '10月',\n            10: '11月',\n            11: '12月'\n        },\n        SHORTDAY: {\n            '0': '周日',\n            '1': '周一',\n            '2': '周二',\n            '3': '周三',\n            '4': '周四',\n            '5': '周五',\n            '6': '周六'\n        },\n        fullDate: 'y年M月d日EEEE',\n        longDate: 'y年M月d日',\n        medium: 'yyyy-M-d H:mm:ss',\n        mediumDate: 'yyyy-M-d',\n        mediumTime: 'H:mm:ss',\n        'short': 'yy-M-d ah:mm',\n        shortDate: 'yy-M-d',\n        shortTime: 'ah:mm'\n    };\n    locate.SHORTMONTH = locate.MONTH;\n    dateFilter.locate = locate;\n\n    /**\n    $$skipArray:是系统级通用的不可监听属性\n    $skipArray: 是当前对象特有的不可监听属性\n    \n     不同点是\n     $$skipArray被hasOwnProperty后返回false\n     $skipArray被hasOwnProperty后返回true\n     */\n    var falsy;\n    var $$skipArray = {\n        $id: falsy,\n        $render: falsy,\n        $track: falsy,\n        $element: falsy,\n        $computed: falsy,\n        $watch: falsy,\n        $fire: falsy,\n        $events: falsy,\n        $accessors: falsy,\n        $hashcode: falsy,\n        $mutations: falsy,\n        $vbthis: falsy,\n        $vbsetter: falsy\n    };\n\n    /*\n    https://github.com/hufyhang/orderBy/blob/master/index.js\n    */\n\n    function orderBy(array, by, decend) {\n        var type = avalon.type(array);\n        if (type !== 'array' && type !== 'object') throw 'orderBy只能处理对象或数组';\n        var criteria = typeof by == 'string' ? function (el) {\n            return el && el[by];\n        } : typeof by === 'function' ? by : function (el) {\n            return el;\n        };\n        var mapping = {};\n        var temp = [];\n        __repeat(array, Array.isArray(array), function (key) {\n            var val = array[key];\n            var k = criteria(val, key);\n            if (k in mapping) {\n                mapping[k].push(key);\n            } else {\n                mapping[k] = [key];\n            }\n            temp.push(k);\n        });\n\n        temp.sort();\n        if (decend < 0) {\n            temp.reverse();\n        }\n        var _array = type === 'array';\n        var target = _array ? [] : {};\n        return recovery(target, temp, function (k) {\n            var key = mapping[k].shift();\n            if (_array) {\n                target.push(array[key]);\n            } else {\n                target[key] = array[key];\n            }\n        });\n    }\n\n    function __repeat(array, isArray$$1, cb) {\n        if (isArray$$1) {\n            array.forEach(function (val, index) {\n                cb(index);\n            });\n        } else if (typeof array.$track === 'string') {\n            array.$track.replace(/[^☥]+/g, function (k) {\n                cb(k);\n            });\n        } else {\n            for (var i in array) {\n                if (array.hasOwnProperty(i)) {\n                    cb(i);\n                }\n            }\n        }\n    }\n    function filterBy(array, search) {\n        var type = avalon.type(array);\n        if (type !== 'array' && type !== 'object') throw 'filterBy只能处理对象或数组';\n        var args = avalon.slice(arguments, 2);\n        var stype = avalon.type(search);\n        if (stype === 'function') {\n            var criteria = search._orig || search;\n        } else if (stype === 'string' || stype === 'number') {\n            if (search === '') {\n                return array;\n            } else {\n                var reg = new RegExp(avalon.escapeRegExp(search), 'i');\n                criteria = function criteria(el) {\n                    return reg.test(el);\n                };\n            }\n        } else {\n            return array;\n        }\n        var isArray$$1 = type === 'array';\n        var target = isArray$$1 ? [] : {};\n        __repeat(array, isArray$$1, function (key) {\n            var val = array[key];\n            if (criteria.apply({\n                key: key\n            }, [val, key].concat(args))) {\n                if (isArray$$1) {\n                    target.push(val);\n                } else {\n                    target[key] = val;\n                }\n            }\n        });\n        return target;\n    }\n\n    function selectBy(data, array, defaults) {\n        if (avalon.isObject(data) && !Array.isArray(data)) {\n            var target = [];\n            return recovery(target, array, function (name) {\n                target.push(data.hasOwnProperty(name) ? data[name] : defaults ? defaults[name] : '');\n            });\n        } else {\n            return data;\n        }\n    }\n\n    function limitBy(input, limit, begin) {\n        var type = avalon.type(input);\n        if (type !== 'array' && type !== 'object') throw 'limitBy只能处理对象或数组';\n        //必须是数值\n        if (typeof limit !== 'number') {\n            return input;\n        }\n        //不能为NaN\n        if (limit !== limit) {\n            return input;\n        }\n        //将目标转换为数组\n        if (type === 'object') {\n            input = convertArray(input, false);\n        }\n        var n = input.length;\n        limit = Math.floor(Math.min(n, limit));\n        begin = typeof begin === 'number' ? begin : 0;\n        if (begin < 0) {\n            begin = Math.max(0, n + begin);\n        }\n        var data = [];\n        for (var i = begin; i < n; i++) {\n            if (data.length === limit) {\n                break;\n            }\n            data.push(input[i]);\n        }\n        var isArray$$1 = type === 'array';\n        if (isArray$$1) {\n            return data;\n        }\n        var target = {};\n        return recovery(target, data, function (el) {\n            target[el.key] = el.value;\n        });\n    }\n\n    function recovery(ret, array, callback) {\n        for (var i = 0, n = array.length; i < n; i++) {\n            callback(array[i]);\n        }\n        return ret;\n    }\n\n    //Chrome谷歌浏览器中js代码Array.sort排序的bug乱序解决办法\n    //http://www.cnblogs.com/yzeng/p/3949182.html\n    function convertArray(array, isArray$$1) {\n        var ret = [],\n            i = 0;\n        __repeat(array, isArray$$1, function (key) {\n            ret[i] = {\n                oldIndex: i,\n                value: array[key],\n                key: key\n            };\n            i++;\n        });\n        return ret;\n    }\n\n    var eventFilters = {\n        stop: function stop(e) {\n            e.stopPropagation();\n            return e;\n        },\n        prevent: function prevent(e) {\n            e.preventDefault();\n            return e;\n        }\n    };\n    var keys = {\n        esc: 27,\n        tab: 9,\n        enter: 13,\n        space: 32,\n        del: 46,\n        up: 38,\n        left: 37,\n        right: 39,\n        down: 40\n    };\n    for (var name$1 in keys) {\n        (function (filter, key) {\n            eventFilters[filter] = function (e) {\n                if (e.which !== key) {\n                    e.$return = true;\n                }\n                return e;\n            };\n        })(name$1, keys[name$1]);\n    }\n\n    //https://github.com/teppeis/htmlspecialchars\n    function escapeFilter(str) {\n        if (str == null) return '';\n\n        return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n    }\n\n    var filters = avalon.filters = {};\n\n    avalon.composeFilters = function () {\n        var args = arguments;\n        return function (value) {\n            for (var i = 0, arr; arr = args[i++];) {\n                var name = arr[0];\n                var filter = avalon.filters[name];\n                if (typeof filter === 'function') {\n                    arr[0] = value;\n                    try {\n                        value = filter.apply(0, arr);\n                    } catch (e) {}\n                }\n            }\n            return value;\n        };\n    };\n\n    avalon.escapeHtml = escapeFilter;\n\n    avalon.mix(filters, {\n        uppercase: function uppercase(str) {\n            return String(str).toUpperCase();\n        },\n        lowercase: function lowercase(str) {\n            return String(str).toLowerCase();\n        },\n        truncate: function truncate(str, length, end) {\n            //length，新字符串长度，truncation，新字符串的结尾的字段,返回新字符串\n            if (!str) {\n                return '';\n            }\n            str = String(str);\n            if (isNaN(length)) {\n                length = 30;\n            }\n            end = typeof end === \"string\" ? end : \"...\";\n            return str.length > length ? str.slice(0, length - end.length) + end : /* istanbul ignore else*/\n            str;\n        },\n\n        camelize: avalon.camelize,\n        date: dateFilter,\n        escape: escapeFilter,\n        sanitize: sanitizeFilter,\n        number: numberFilter,\n        currency: function currency(amount, symbol, fractionSize) {\n            return (symbol || '\\xA5') + numberFilter(amount, isFinite(fractionSize) ? /* istanbul ignore else*/fractionSize : 2);\n        }\n    }, { filterBy: filterBy, orderBy: orderBy, selectBy: selectBy, limitBy: limitBy }, eventFilters);\n\n    var rcheckedType = /^(?:checkbox|radio)$/;\n\n    /* istanbul ignore next */\n    function fixElement(dest, src) {\n        if (dest.nodeType !== 1) {\n            return;\n        }\n        var nodeName = dest.nodeName.toLowerCase();\n\n        if (nodeName === \"script\") {\n            if (dest.text !== src.text) {\n                dest.type = \"noexec\";\n                dest.text = src.text;\n                dest.type = src.type || \"\";\n            }\n        } else if (nodeName === 'object') {\n            var params = src.childNodes;\n            if (dest.childNodes.length !== params.length) {\n                avalon.clearHTML(dest);\n                for (var i = 0, el; el = params[i++];) {\n                    dest.appendChild(el.cloneNode(true));\n                }\n            }\n        } else if (nodeName === 'input' && rcheckedType.test(src.nodeName)) {\n\n            dest.defaultChecked = dest.checked = src.checked;\n            if (dest.value !== src.value) {\n                dest.value = src.value;\n            }\n        } else if (nodeName === 'option') {\n            dest.defaultSelected = dest.selected = src.defaultSelected;\n        } else if (nodeName === 'input' || nodeName === 'textarea') {\n            dest.defaultValue = src.defaultValue;\n        }\n    }\n\n    /* istanbul ignore next */\n    function getAll(context) {\n        return typeof context.getElementsByTagName !== 'undefined' ? context.getElementsByTagName('*') : typeof context.querySelectorAll !== 'undefined' ? context.querySelectorAll('*') : [];\n    }\n\n    /* istanbul ignore next */\n    function fixClone(src) {\n        var target = src.cloneNode(true);\n        //http://www.myexception.cn/web/665613.html\n        // target.expando = null\n        var t = getAll(target);\n        var s = getAll(src);\n        for (var i = 0; i < s.length; i++) {\n            fixElement(t[i], s[i]);\n        }\n        return target;\n    }\n\n    /* istanbul ignore next */\n    function fixContains(root, el) {\n        try {\n            //IE6-8,游离于DOM树外的文本节点，访问parentNode有时会抛错\n            while (el = el.parentNode) {\n                if (el === root) return true;\n            }\n        } catch (e) {}\n        return false;\n    }\n\n    avalon.contains = fixContains;\n\n    avalon.cloneNode = function (a) {\n        return a.cloneNode(true);\n    };\n\n    //IE6-11的文档对象没有contains\n    /* istanbul ignore next */\n    function shimHack() {\n        if (msie$1 < 10) {\n            avalon.cloneNode = fixClone;\n        }\n        if (!document$1.contains) {\n            document$1.contains = function (b) {\n                return fixContains(document$1, b);\n            };\n        }\n        if (avalon.modern) {\n            if (!document$1.createTextNode('x').contains) {\n                Node.prototype.contains = function (child) {\n                    //IE6-8没有Node对象\n                    return fixContains(this, child);\n                };\n            }\n        }\n        //firefox 到11时才有outerHTML\n        function fixFF(prop, cb) {\n            if (!(prop in root) && HTMLElement.prototype.__defineGetter__) {\n                HTMLElement.prototype.__defineGetter__(prop, cb);\n            }\n        }\n        fixFF('outerHTML', function () {\n            var div = document$1.createElement('div');\n            div.appendChild(this);\n            return div.innerHTML;\n        });\n        fixFF('children', function () {\n            var children = [];\n            for (var i = 0, el; el = this.childNodes[i++];) {\n                if (el.nodeType === 1) {\n                    children.push(el);\n                }\n            }\n            return children;\n        });\n        fixFF('innerText', function () {\n            //firefox45+, chrome4+ http://caniuse.com/#feat=innertext\n            return this.textContent;\n        });\n    }\n\n    if (inBrowser) {\n        shimHack();\n    }\n\n    function ClassList(node) {\n        this.node = node;\n    }\n\n    ClassList.prototype = {\n        toString: function toString() {\n            var node = this.node;\n            var cls = node.className;\n            var str = typeof cls === 'string' ? cls : cls.baseVal;\n            var match = str.match(rnowhite);\n            return match ? match.join(' ') : '';\n        },\n        contains: function contains(cls) {\n            return (' ' + this + ' ').indexOf(' ' + cls + ' ') > -1;\n        },\n        add: function add(cls) {\n            if (!this.contains(cls)) {\n                this.set(this + ' ' + cls);\n            }\n        },\n        remove: function remove(cls) {\n            this.set((' ' + this + ' ').replace(' ' + cls + ' ', ' '));\n        },\n        set: function set(cls) {\n            cls = cls.trim();\n            var node = this.node;\n            if (typeof node.className === 'object') {\n                //SVG元素的className是一个对象 SVGAnimatedString { baseVal='', animVal=''}，只能通过set/getAttribute操作\n                node.setAttribute('class', cls);\n            } else {\n                node.className = cls;\n            }\n            if (!cls) {\n                node.removeAttribute('class');\n            }\n            //toggle存在版本差异，因此不使用它\n        }\n    };\n\n    function classListFactory(node) {\n        if (!('classList' in node)) {\n            node.classList = new ClassList(node);\n        }\n        return node.classList;\n    }\n\n    'add,remove'.replace(rword, function (method) {\n        avalon.fn[method + 'Class'] = function (cls) {\n            var el = this[0] || {};\n            //https://developer.mozilla.org/zh-CN/docs/Mozilla/Firefox/Releases/26\n            if (cls && typeof cls === 'string' && el.nodeType === 1) {\n                cls.replace(rnowhite, function (c) {\n                    classListFactory(el)[method](c);\n                });\n            }\n            return this;\n        };\n    });\n\n    avalon.shadowCopy(avalon.fn, {\n        hasClass: function hasClass(cls) {\n            var el = this[0] || {};\n            return el.nodeType === 1 && classListFactory(el).contains(cls);\n        },\n        toggleClass: function toggleClass(value, stateVal) {\n            var isBool = typeof stateVal === 'boolean';\n            var me = this;\n            String(value).replace(rnowhite, function (c) {\n                var state = isBool ? stateVal : !me.hasClass(c);\n                me[state ? 'addClass' : 'removeClass'](c);\n            });\n            return this;\n        }\n    });\n\n    var propMap = {}; //不规则的属性名映射\n\n\n    //防止压缩时出错\n    'accept-charset,acceptCharset|char,ch|charoff,chOff|class,className|for,htmlFor|http-equiv,httpEquiv'.replace(/[^\\|]+/g, function (a) {\n        var k = a.split(',');\n        propMap[k[0]] = k[1];\n    });\n    /*\n    contenteditable不是布尔属性\n    http://www.zhangxinxu.com/wordpress/2016/01/contenteditable-plaintext-only/\n    contenteditable=''\n    contenteditable='events'\n    contenteditable='caret'\n    contenteditable='plaintext-only'\n    contenteditable='true'\n    contenteditable='false'\n     */\n    var bools = ['autofocus,autoplay,async,allowTransparency,checked,controls', 'declare,disabled,defer,defaultChecked,defaultSelected,', 'isMap,loop,multiple,noHref,noResize,noShade', 'open,readOnly,selected'].join(',');\n\n    bools.replace(/\\w+/g, function (name) {\n        propMap[name.toLowerCase()] = name;\n    });\n\n    var anomaly = ['accessKey,bgColor,cellPadding,cellSpacing,codeBase,codeType,colSpan', 'dateTime,defaultValue,contentEditable,frameBorder,longDesc,maxLength,' + 'marginWidth,marginHeight,rowSpan,tabIndex,useMap,vSpace,valueType,vAlign'].join(',');\n\n    anomaly.replace(/\\w+/g, function (name) {\n        propMap[name.toLowerCase()] = name;\n    });\n\n    //module.exports = propMap\n\n    function isVML(src) {\n        var nodeName = src.nodeName;\n        return nodeName.toLowerCase() === nodeName && !!src.scopeName && src.outerText === '';\n    }\n\n    var rvalidchars = /^[\\],:{}\\s]*$/;\n    var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n    var rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g;\n    var rvalidtokens = /\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g;\n\n    function compactParseJSON(data) {\n        if (typeof data === 'string') {\n            data = data.trim();\n            if (data) {\n                if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n                    return new Function('return ' + data)(); // jshint ignore:line\n                }\n            }\n            throw TypeError('Invalid JSON: [' + data + ']');\n        }\n        return data;\n    }\n\n    var rsvg = /^\\[object SVG\\w*Element\\]$/;\n    var ramp = /&amp;/g;\n    function updateAttrs(node, attrs) {\n        for (var attrName in attrs) {\n            try {\n                var val = attrs[attrName];\n                // 处理路径属性\n                /* istanbul ignore if*/\n\n                //处理HTML5 data-*属性 SVG\n                if (attrName.indexOf('data-') === 0 || rsvg.test(node)) {\n                    node.setAttribute(attrName, val);\n                } else {\n                    var propName = propMap[attrName] || attrName;\n                    /* istanbul ignore if */\n                    if (typeof node[propName] === 'boolean') {\n                        if (propName === 'checked') {\n                            node.defaultChecked = !!val;\n                        }\n                        node[propName] = !!val;\n                        //布尔属性必须使用el.xxx = true|false方式设值\n                        //如果为false, IE全系列下相当于setAttribute(xxx,''),\n                        //会影响到样式,需要进一步处理\n                    }\n\n                    if (val === false) {\n                        //移除属性\n                        node.removeAttribute(propName);\n                        continue;\n                    }\n                    //IE6中classNamme, htmlFor等无法检测它们为内建属性　\n                    if (avalon.msie < 8 && /[A-Z]/.test(propName)) {\n                        node[propName] = val + '';\n                        continue;\n                    }\n                    //SVG只能使用setAttribute(xxx, yyy), VML只能使用node.xxx = yyy ,\n                    //HTML的固有属性必须node.xxx = yyy\n                    /* istanbul ignore next */\n                    var isInnate = !avalon.modern && isVML(node) ? true : isInnateProps(node.nodeName, attrName);\n                    if (isInnate) {\n                        if (attrName === 'href' || attrName === 'src') {\n                            /* istanbul ignore if */\n                            if (avalon.msie < 8) {\n                                val = String(val).replace(ramp, '&'); //处理IE67自动转义的问题\n                            }\n                        }\n                        node[propName] = val + '';\n                    } else {\n                        node.setAttribute(attrName, val);\n                    }\n                }\n            } catch (e) {\n                // 对象不支持此属性或方法 src https://github.com/ecomfe/zrender \n                // 未知名称。\\/n\n                // e.message大概这样,需要trim\n                //IE6-8,元素节点不支持其他元素节点的内置属性,如src, href, for\n                /* istanbul ignore next */\n                avalon.log(String(e.message).trim(), attrName, val);\n            }\n        }\n    }\n    var innateMap = {};\n\n    function isInnateProps(nodeName, attrName) {\n        var key = nodeName + \":\" + attrName;\n        if (key in innateMap) {\n            return innateMap[key];\n        }\n        return innateMap[key] = attrName in document$1.createElement(nodeName);\n    }\n    try {\n        avalon.parseJSON = JSON.parse;\n    } catch (e) {\n        /* istanbul ignore next */\n        avalon.parseJSON = compactParseJSON;\n    }\n\n    avalon.fn.attr = function (name, value) {\n        if (arguments.length === 2) {\n            this[0].setAttribute(name, value);\n            return this;\n        } else {\n            return this[0].getAttribute(name);\n        }\n    };\n\n    var cssMap = oneObject('float', 'cssFloat');\n    avalon.cssNumber = oneObject('animationIterationCount,columnCount,order,flex,flexGrow,flexShrink,fillOpacity,fontWeight,lineHeight,opacity,orphans,widows,zIndex,zoom');\n    var prefixes = ['', '-webkit-', '-o-', '-moz-', '-ms-'];\n    /* istanbul ignore next */\n    avalon.cssName = function (name, host, camelCase) {\n        if (cssMap[name]) {\n            return cssMap[name];\n        }\n        host = host || avalon.root.style || {};\n        for (var i = 0, n = prefixes.length; i < n; i++) {\n            camelCase = avalon.camelize(prefixes[i] + name);\n            if (camelCase in host) {\n                return cssMap[name] = camelCase;\n            }\n        }\n        return null;\n    };\n    /* istanbul ignore next */\n    avalon.css = function (node, name, value, fn) {\n        //读写删除元素节点的样式\n        if (node instanceof avalon) {\n            node = node[0];\n        }\n        if (node.nodeType !== 1) {\n            return;\n        }\n        var prop = avalon.camelize(name);\n        name = avalon.cssName(prop) || /* istanbul ignore next*/prop;\n        if (value === void 0 || typeof value === 'boolean') {\n            //获取样式\n            fn = cssHooks[prop + ':get'] || cssHooks['@:get'];\n            if (name === 'background') {\n                name = 'backgroundColor';\n            }\n            var val = fn(node, name);\n            return value === true ? parseFloat(val) || 0 : val;\n        } else if (value === '') {\n            //请除样式\n            node.style[name] = '';\n        } else {\n            //设置样式\n            if (value == null || value !== value) {\n                return;\n            }\n            if (isFinite(value) && !avalon.cssNumber[prop]) {\n                value += 'px';\n            }\n            fn = cssHooks[prop + ':set'] || cssHooks['@:set'];\n            fn(node, name, value);\n        }\n    };\n    /* istanbul ignore next */\n    avalon.fn.css = function (name, value) {\n        if (avalon.isPlainObject(name)) {\n            for (var i in name) {\n                avalon.css(this, i, name[i]);\n            }\n        } else {\n            var ret = avalon.css(this, name, value);\n        }\n        return ret !== void 0 ? ret : this;\n    };\n    /* istanbul ignore next */\n    avalon.fn.position = function () {\n        var offsetParent,\n            offset,\n            elem = this[0],\n            parentOffset = {\n            top: 0,\n            left: 0\n        };\n        if (!elem) {\n            return parentOffset;\n        }\n        if (this.css('position') === 'fixed') {\n            offset = elem.getBoundingClientRect();\n        } else {\n            offsetParent = this.offsetParent(); //得到真正的offsetParent\n            offset = this.offset(); // 得到正确的offsetParent\n            if (offsetParent[0].tagName !== 'HTML') {\n                parentOffset = offsetParent.offset();\n            }\n            parentOffset.top += avalon.css(offsetParent[0], 'borderTopWidth', true);\n            parentOffset.left += avalon.css(offsetParent[0], 'borderLeftWidth', true);\n\n            // Subtract offsetParent scroll positions\n            parentOffset.top -= offsetParent.scrollTop();\n            parentOffset.left -= offsetParent.scrollLeft();\n        }\n        return {\n            top: offset.top - parentOffset.top - avalon.css(elem, 'marginTop', true),\n            left: offset.left - parentOffset.left - avalon.css(elem, 'marginLeft', true)\n        };\n    };\n    /* istanbul ignore next */\n    avalon.fn.offsetParent = function () {\n        var offsetParent = this[0].offsetParent;\n        while (offsetParent && avalon.css(offsetParent, 'position') === 'static') {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return avalon(offsetParent || avalon.root);\n    };\n\n    /* istanbul ignore next */\n    cssHooks['@:set'] = function (node, name, value) {\n        try {\n            //node.style.width = NaN;node.style.width = 'xxxxxxx';\n            //node.style.width = undefine 在旧式IE下会抛异常\n            node.style[name] = value;\n        } catch (e) {}\n    };\n    /* istanbul ignore next */\n    cssHooks['@:get'] = function (node, name) {\n        if (!node || !node.style) {\n            throw new Error('getComputedStyle要求传入一个节点 ' + node);\n        }\n        var ret,\n            styles = window$1.getComputedStyle(node, null);\n        if (styles) {\n            ret = name === 'filter' ? styles.getPropertyValue(name) : styles[name];\n            if (ret === '') {\n                ret = node.style[name]; //其他浏览器需要我们手动取内联样式\n            }\n        }\n        return ret;\n    };\n\n    cssHooks['opacity:get'] = function (node) {\n        var ret = cssHooks['@:get'](node, 'opacity');\n        return ret === '' ? '1' : ret;\n    };\n\n    'top,left'.replace(avalon.rword, function (name) {\n        cssHooks[name + ':get'] = function (node) {\n            var computed = cssHooks['@:get'](node, name);\n            return (/px$/.test(computed) ? computed : avalon(node).position()[name] + 'px'\n            );\n        };\n    });\n\n    var cssShow = {\n        position: 'absolute',\n        visibility: 'hidden',\n        display: 'block'\n    };\n\n    var rdisplayswap = /^(none|table(?!-c[ea]).+)/;\n    /* istanbul ignore next */\n    function showHidden(node, array) {\n        //http://www.cnblogs.com/rubylouvre/archive/2012/10/27/2742529.html\n        if (node.offsetWidth <= 0) {\n            //opera.offsetWidth可能小于0\n            if (rdisplayswap.test(cssHooks['@:get'](node, 'display'))) {\n                var obj = {\n                    node: node\n                };\n                for (var name in cssShow) {\n                    obj[name] = node.style[name];\n                    node.style[name] = cssShow[name];\n                }\n                array.push(obj);\n            }\n            var parent = node.parentNode;\n            if (parent && parent.nodeType === 1) {\n                showHidden(parent, array);\n            }\n        }\n    }\n    /* istanbul ignore next*/\n    avalon.each({\n        Width: 'width',\n        Height: 'height'\n    }, function (name, method) {\n        var clientProp = 'client' + name,\n            scrollProp = 'scroll' + name,\n            offsetProp = 'offset' + name;\n        cssHooks[method + ':get'] = function (node, which, override) {\n            var boxSizing = -4;\n            if (typeof override === 'number') {\n                boxSizing = override;\n            }\n            which = name === 'Width' ? ['Left', 'Right'] : ['Top', 'Bottom'];\n            var ret = node[offsetProp]; // border-box 0\n            if (boxSizing === 2) {\n                // margin-box 2\n                return ret + avalon.css(node, 'margin' + which[0], true) + avalon.css(node, 'margin' + which[1], true);\n            }\n            if (boxSizing < 0) {\n                // padding-box  -2\n                ret = ret - avalon.css(node, 'border' + which[0] + 'Width', true) - avalon.css(node, 'border' + which[1] + 'Width', true);\n            }\n            if (boxSizing === -4) {\n                // content-box -4\n                ret = ret - avalon.css(node, 'padding' + which[0], true) - avalon.css(node, 'padding' + which[1], true);\n            }\n            return ret;\n        };\n        cssHooks[method + '&get'] = function (node) {\n            var hidden = [];\n            showHidden(node, hidden);\n            var val = cssHooks[method + ':get'](node);\n            for (var i = 0, obj; obj = hidden[i++];) {\n                node = obj.node;\n                for (var n in obj) {\n                    if (typeof obj[n] === 'string') {\n                        node.style[n] = obj[n];\n                    }\n                }\n            }\n            return val;\n        };\n        avalon.fn[method] = function (value) {\n            //会忽视其display\n            var node = this[0];\n            if (arguments.length === 0) {\n                if (node.setTimeout) {\n                    //取得窗口尺寸\n                    return node['inner' + name] || node.document.documentElement[clientProp] || node.document.body[clientProp]; //IE6下前两个分别为undefined,0\n                }\n                if (node.nodeType === 9) {\n                    //取得页面尺寸\n                    var doc = node.documentElement;\n                    //FF chrome    html.scrollHeight< body.scrollHeight\n                    //IE 标准模式 : html.scrollHeight> body.scrollHeight\n                    //IE 怪异模式 : html.scrollHeight 最大等于可视窗口多一点？\n                    return Math.max(node.body[scrollProp], doc[scrollProp], node.body[offsetProp], doc[offsetProp], doc[clientProp]);\n                }\n                return cssHooks[method + '&get'](node);\n            } else {\n                return this.css(method, value);\n            }\n        };\n        avalon.fn['inner' + name] = function () {\n            return cssHooks[method + ':get'](this[0], void 0, -2);\n        };\n        avalon.fn['outer' + name] = function (includeMargin) {\n            return cssHooks[method + ':get'](this[0], void 0, includeMargin === true ? 2 : 0);\n        };\n    });\n\n    function getWindow(node) {\n        return node.window || node.defaultView || node.parentWindow || false;\n    }\n\n    /* istanbul ignore if */\n    if (msie$1 < 9) {\n        avalon.shadowCopy(cssMap, oneObject('float', 'styleFloat'));\n        var rnumnonpx = /^-?(?:\\d*\\.)?\\d+(?!px)[^\\d\\s]+$/i;\n        var rposition = /^(top|right|bottom|left)$/;\n        var ralpha = /alpha\\([^)]+\\)/i;\n        var ropactiy = /(opacity|\\d(\\d|\\.)*)/g;\n        var ie8 = msie$1 === 8;\n        var salpha = 'DXImageTransform.Microsoft.Alpha';\n        var border = {\n            thin: ie8 ? '1px' : '2px',\n            medium: ie8 ? '3px' : '4px',\n            thick: ie8 ? '5px' : '6px'\n        };\n        cssHooks['@:get'] = function (node, name) {\n            //取得精确值，不过它有可能是带em,pc,mm,pt,%等单位\n            var currentStyle = node.currentStyle;\n            var ret = currentStyle[name];\n            if (rnumnonpx.test(ret) && !rposition.test(ret)) {\n                //①，保存原有的style.left, runtimeStyle.left,\n                var style = node.style,\n                    left = style.left,\n                    rsLeft = node.runtimeStyle.left;\n                //②由于③处的style.left = xxx会影响到currentStyle.left，\n                //因此把它currentStyle.left放到runtimeStyle.left，\n                //runtimeStyle.left拥有最高优先级，不会style.left影响\n                node.runtimeStyle.left = currentStyle.left;\n                //③将精确值赋给到style.left，然后通过IE的另一个私有属性 style.pixelLeft\n                //得到单位为px的结果；fontSize的分支见http://bugs.jquery.com/ticket/760\n                style.left = name === 'fontSize' ? '1em' : ret || 0;\n                ret = style.pixelLeft + 'px';\n                //④还原 style.left，runtimeStyle.left\n                style.left = left;\n                node.runtimeStyle.left = rsLeft;\n            }\n            if (ret === 'medium') {\n                name = name.replace('Width', 'Style');\n                //border width 默认值为medium，即使其为0'\n                if (currentStyle[name] === 'none') {\n                    ret = '0px';\n                }\n            }\n            return ret === '' ? 'auto' : border[ret] || ret;\n        };\n        cssHooks['opacity:set'] = function (node, name, value) {\n            var style = node.style;\n\n            var opacity = Number(value) <= 1 ? 'alpha(opacity=' + value * 100 + ')' : '';\n            var filter = style.filter || '';\n            style.zoom = 1;\n            //不能使用以下方式设置透明度\n            //node.filters.alpha.opacity = value * 100\n            style.filter = (ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + ' ' + opacity).trim();\n\n            if (!style.filter) {\n                style.removeAttribute('filter');\n            }\n        };\n        cssHooks['opacity:get'] = function (node) {\n            var match = node.style.filter.match(ropactiy) || [];\n            var ret = false;\n            for (var i = 0, el; el = match[i++];) {\n                if (el === 'opacity') {\n                    ret = true;\n                } else if (ret) {\n                    return el / 100 + '';\n                }\n            }\n            return '1'; //确保返回的是字符串\n        };\n    }\n\n    /* istanbul ignore next */\n    avalon.fn.offset = function () {\n        //取得距离页面左右角的坐标\n        var node = this[0],\n            box = {\n            left: 0,\n            top: 0\n        };\n        if (!node || !node.tagName || !node.ownerDocument) {\n            return box;\n        }\n        var doc = node.ownerDocument;\n        var body = doc.body;\n        var root$$1 = doc.documentElement;\n        var win = doc.defaultView || doc.parentWindow;\n        if (!avalon.contains(root$$1, node)) {\n            return box;\n        }\n        //http://hkom.blog1.fc2.com/?mode=m&no=750 body的偏移量是不包含margin的\n        //我们可以通过getBoundingClientRect来获得元素相对于client的rect.\n        //http://msdn.microsoft.com/en-us/library/ms536433.aspx\n        if (node.getBoundingClientRect) {\n            box = node.getBoundingClientRect(); // BlackBerry 5, iOS 3 (original iPhone)\n        }\n        //chrome/IE6: body.scrollTop, firefox/other: root.scrollTop\n        var clientTop = root$$1.clientTop || body.clientTop,\n            clientLeft = root$$1.clientLeft || body.clientLeft,\n            scrollTop = Math.max(win.pageYOffset || 0, root$$1.scrollTop, body.scrollTop),\n            scrollLeft = Math.max(win.pageXOffset || 0, root$$1.scrollLeft, body.scrollLeft);\n        // 把滚动距离加到left,top中去。\n        // IE一些版本中会自动为HTML元素加上2px的border，我们需要去掉它\n        // http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx\n        return {\n            top: box.top + scrollTop - clientTop,\n            left: box.left + scrollLeft - clientLeft\n        };\n    };\n\n    //生成avalon.fn.scrollLeft, avalon.fn.scrollTop方法\n    /* istanbul ignore next */\n    avalon.each({\n        scrollLeft: 'pageXOffset',\n        scrollTop: 'pageYOffset'\n    }, function (method, prop) {\n        avalon.fn[method] = function (val) {\n            var node = this[0] || {};\n            var win = getWindow(node);\n            var root$$1 = avalon.root;\n            var top = method === 'scrollTop';\n            if (!arguments.length) {\n                return win ? prop in win ? win[prop] : root$$1[method] : node[method];\n            } else {\n                if (win) {\n                    win.scrollTo(!top ? val : avalon(win).scrollLeft(), top ? val : avalon(win).scrollTop());\n                } else {\n                    node[method] = val;\n                }\n            }\n        };\n    });\n\n    function getDuplexType(elem) {\n        var ret = elem.tagName.toLowerCase();\n        if (ret === 'input') {\n            return rcheckedType.test(elem.type) ? 'checked' : elem.type;\n        }\n        return ret;\n    }\n\n    /**\n     * IE6/7/8中，如果option没有value值，那么将返回空字符串。\n     * IE9/Firefox/Safari/Chrome/Opera 中先取option的value值，如果没有value属性，则取option的innerText值。\n     * IE11及W3C，如果没有指定value，那么node.value默认为node.text（存在trim作），但IE9-10则是取innerHTML(没trim操作)\n     */\n\n    function getOption(node) {\n        if (node.hasAttribute && node.hasAttribute('value')) {\n            return node.getAttribute('value');\n        }\n        var attr = node.getAttributeNode('value');\n        if (attr && attr.specified) {\n            return attr.value;\n        }\n        return node.innerHTML.trim();\n    }\n\n    var valHooks = {\n        'option:get': msie$1 ? getOption : function (node) {\n            return node.value;\n        },\n        'select:get': function selectGet(node, value) {\n            var option,\n                options = node.options,\n                index = node.selectedIndex,\n                getter = valHooks['option:get'],\n                one = node.type === 'select-one' || index < 0,\n                values = one ? null : [],\n                max = one ? index + 1 : options.length,\n                i = index < 0 ? max : one ? index : 0;\n            for (; i < max; i++) {\n                option = options[i];\n                //IE6-9在reset后不会改变selected，需要改用i === index判定\n                //我们过滤所有disabled的option元素，但在safari5下，\n                //如果设置optgroup为disable，那么其所有孩子都disable\n                //因此当一个元素为disable，需要检测其是否显式设置了disable及其父节点的disable情况\n                if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || option.parentNode.tagName !== 'OPTGROUP')) {\n                    value = getter(option);\n                    if (one) {\n                        return value;\n                    }\n                    //收集所有selected值组成数组返回\n                    values.push(value);\n                }\n            }\n            return values;\n        },\n        'select:set': function selectSet(node, values, optionSet) {\n            values = [].concat(values); //强制转换为数组\n            var getter = valHooks['option:get'];\n            for (var i = 0, el; el = node.options[i++];) {\n                if (el.selected = values.indexOf(getter(el)) > -1) {\n                    optionSet = true;\n                }\n            }\n            if (!optionSet) {\n                node.selectedIndex = -1;\n            }\n        }\n    };\n\n    avalon.fn.val = function (value) {\n        var node = this[0];\n        if (node && node.nodeType === 1) {\n            var get = arguments.length === 0;\n            var access = get ? ':get' : ':set';\n            var fn = valHooks[getDuplexType(node) + access];\n            if (fn) {\n                var val = fn(node, value);\n            } else if (get) {\n                return (node.value || '').replace(/\\r/g, '');\n            } else {\n                node.value = value;\n            }\n        }\n        return get ? val : this;\n    };\n\n    var voidTag = {\n        area: 1,\n        base: 1,\n        basefont: 1,\n        bgsound: 1,\n        br: 1,\n        col: 1,\n        command: 1,\n        embed: 1,\n        frame: 1,\n        hr: 1,\n        img: 1,\n        input: 1,\n        keygen: 1,\n        link: 1,\n        meta: 1,\n        param: 1,\n        source: 1,\n        track: 1,\n        wbr: 1\n    };\n\n    function makeObject(str) {\n        return oneObject(str + ',template,#document-fragment,#comment');\n    }\n    var pNestChild = oneObject('div,ul,ol,dl,table,h1,h2,h3,h4,h5,h6,form,fieldset');\n    var tNestChild = makeObject('tr,style,script');\n    var nestObject = {\n        p: pNestChild,\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n        select: makeObject('option,optgroup,#text'),\n        optgroup: makeObject('option,#text'),\n        option: makeObject('#text'),\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n        // No special behavior since these rules fall back to \"in body\" mode for\n        // all except special table nodes which cause bad parsing behavior anyway.\n\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n        tr: makeObject('th,td,style,script'),\n\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n        tbody: tNestChild,\n        tfoot: tNestChild,\n        thead: tNestChild,\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n        colgroup: makeObject('col'),\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n        // table: oneObject('caption,colgroup,tbody,thead,tfoot,style,script,template,#document-fragment'),\n        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n        head: makeObject('base,basefont,bgsound,link,style,script,meta,title,noscript,noframes'),\n        // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n        html: oneObject('head,body')\n    };\n\n    /**\n     * ------------------------------------------------------------\n     * avalon2.2.6的新式lexer\n     * 将字符串变成一个虚拟DOM树,方便以后进一步变成模板函数\n     * 此阶段只会生成VElement,VText,VComment\n     * ------------------------------------------------------------\n     */\n    var specalTag = { xmp: 1, style: 1, script: 1, noscript: 1, textarea: 1, '#comment': 1, template: 1 };\n    var hiddenTag = { style: 1, script: 1, noscript: 1, template: 1 };\n    var rcontent = /\\S/; //判定里面有没有内容\n    var rsp = /\\s/;\n    function fromString(str) {\n        return from(str);\n    }\n    avalon.lexer = fromString;\n\n    var strCache = new Cache(100);\n\n    function from(str) {\n        var cacheKey = str;\n        var cached = strCache.get(cacheKey);\n        if (cached) {\n            return avalon.mix(true, [], cached);\n        }\n\n        var ret = parse(str, false);\n        strCache.put(cacheKey, avalon.mix(true, [], ret));\n        return ret;\n    }\n\n    /**\n     * \n     * \n     * @param {any} string \n     * @param {any} getOne 只返回一个节点\n     * @returns \n     */\n    function parse(string, getOne) {\n        getOne = getOne === void 666 || getOne === true;\n        var ret = lexer(string, getOne);\n        if (getOne) {\n            return typeof ret[0] === 'string' ? ret[1] : ret[0];\n        }\n        return ret;\n    }\n\n    function lexer(string, getOne) {\n        var tokens = [];\n        var breakIndex = 9990;\n        var stack = [];\n        var origString = string;\n        var origLength = string.length;\n\n        stack.last = function () {\n            return stack[stack.length - 1];\n        };\n        var ret = [];\n\n        function addNode(node) {\n            var p = stack.last();\n            if (p && p.children) {\n                p.children.push(node);\n            } else {\n                ret.push(node);\n            }\n        }\n\n        var lastNode;\n        do {\n            if (--breakIndex === 0) {\n                break;\n            }\n            var arr = getCloseTag(string);\n\n            if (arr) {\n                //处理关闭标签\n                string = string.replace(arr[0], '');\n                var _node = stack.pop();\n                if (!_node) {\n                    throw '是不是有属性值没有用引号括起';\n                }\n                //处理下面两种特殊情况：\n                //1. option会自动移除元素节点，将它们的nodeValue组成新的文本节点\n                //2. table会将没有被thead, tbody, tfoot包起来的tr或文本节点，收集到一个新的tbody元素中\n\n                if (_node.nodeName === 'option') {\n                    _node.children = [{\n                        nodeName: '#text',\n                        nodeValue: getText(_node)\n                    }];\n                } else if (_node.nodeName === 'table') {\n                    insertTbody(_node.children);\n                }\n                lastNode = null;\n                if (getOne && ret.length === 1 && !stack.length) {\n                    return [origString.slice(0, origLength - string.length), ret[0]];\n                }\n                continue;\n            }\n\n            var arr = getOpenTag(string);\n            if (arr) {\n                string = string.replace(arr[0], '');\n                var node = arr[1];\n                addNode(node);\n                var selfClose = !!(node.isVoidTag || specalTag[node.nodeName]);\n                if (!selfClose) {\n                    //放到这里可以添加孩子\n                    stack.push(node);\n                }\n                if (getOne && selfClose && !stack.length) {\n                    return [origString.slice(0, origLength - string.length), node];\n                }\n                lastNode = node;\n                continue;\n            }\n\n            var text = '';\n            do {\n                //处理<div><<<<<<div>的情况\n                var _index = string.indexOf('<');\n                if (_index === 0) {\n                    text += string.slice(0, 1);\n                    string = string.slice(1);\n                } else {\n                    break;\n                }\n            } while (string.length);\n\n            //处理<div>{aaa}</div>,<div>xxx{aaa}xxx</div>,<div>xxx</div>{aaa}sss的情况\n            var index = string.indexOf('<'); //判定它后面是否存在标签\n            if (index === -1) {\n                text = string;\n                string = '';\n            } else {\n                var openIndex = string.indexOf(config.openTag);\n\n                if (openIndex !== -1 && openIndex < index) {\n                    if (openIndex !== 0) {\n                        text += string.slice(0, openIndex);\n                    }\n                    var dirString = string.slice(openIndex);\n                    var textDir = parseTextDir(dirString);\n                    text += textDir;\n                    string = dirString.slice(textDir.length);\n                } else {\n                    text += string.slice(0, index);\n                    string = string.slice(index);\n                }\n            }\n            var mayNode = addText(lastNode, text, addNode);\n            if (mayNode) {\n                lastNode = mayNode;\n            }\n        } while (string.length);\n        return ret;\n    }\n\n    function addText(lastNode, text, addNode) {\n        if (rcontent.test(text)) {\n            if (lastNode && lastNode.nodeName === '#text') {\n                lastNode.nodeValue += text;\n                return lastNode;\n            } else {\n                lastNode = {\n                    nodeName: '#text',\n                    nodeValue: text\n                };\n                addNode(lastNode);\n                return lastNode;\n            }\n        }\n    }\n\n    function parseTextDir(string) {\n        var closeTag = config.closeTag;\n        var openTag = config.openTag;\n        var closeTagFirst = closeTag.charAt(0);\n        var closeTagLength = closeTag.length;\n        var state = 'code',\n            quote$$1,\n            escape;\n        for (var i = openTag.length, n = string.length; i < n; i++) {\n\n            var c = string.charAt(i);\n            switch (state) {\n                case 'code':\n                    if (c === '\"' || c === \"'\") {\n                        state = 'string';\n                        quote$$1 = c;\n                    } else if (c === closeTagFirst) {\n                        //如果遇到}\n                        if (string.substr(i, closeTagLength) === closeTag) {\n                            return string.slice(0, i + closeTagLength);\n                        }\n                    }\n                    break;\n                case 'string':\n                    if (c === '\\\\' && /\"'/.test(string.charAt(i + 1))) {\n                        escape = !escape;\n                    }\n                    if (c === quote$$1 && !escape) {\n                        state = 'code';\n                    }\n                    break;\n            }\n        }\n        throw '找不到界定符' + closeTag;\n    }\n\n    var rtbody = /^(tbody|thead|tfoot)$/;\n\n    function insertTbody(nodes) {\n        var tbody = false;\n        for (var i = 0, n = nodes.length; i < n; i++) {\n            var node = nodes[i];\n            if (rtbody.test(node.nodeName)) {\n                tbody = false;\n                continue;\n            }\n\n            if (node.nodeName === 'tr') {\n                if (tbody) {\n                    nodes.splice(i, 1);\n                    tbody.children.push(node);\n                    n--;\n                    i--;\n                } else {\n                    tbody = {\n                        nodeName: 'tbody',\n                        props: {},\n                        children: [node]\n                    };\n                    nodes.splice(i, 1, tbody);\n                }\n            } else {\n                if (tbody) {\n                    nodes.splice(i, 1);\n                    tbody.children.push(node);\n                    n--;\n                    i--;\n                }\n            }\n        }\n    }\n\n    //<div>{{<div/>}}</div>\n    function getCloseTag(string) {\n        if (string.indexOf(\"</\") === 0) {\n            var match = string.match(/\\<\\/(\\w+[^\\s\\/\\>]*)>/);\n            if (match) {\n                var tag = match[1];\n                string = string.slice(3 + tag.length);\n                return [match[0], {\n                    nodeName: tag\n                }];\n            }\n        }\n        return null;\n    }\n    var ropenTag = /\\<(\\w[^\\s\\/\\>]*)/;\n\n    function getOpenTag(string) {\n        if (string.indexOf(\"<\") === 0) {\n            var i = string.indexOf('<!--'); //处理注释节点\n            if (i === 0) {\n                var l = string.indexOf('-->');\n                if (l === -1) {\n                    thow('注释节点没有闭合 ' + string.slice(0, 100));\n                }\n                var node = {\n                    nodeName: '#comment',\n                    nodeValue: string.slice(4, l)\n                };\n                return [string.slice(0, l + 3), node];\n            }\n            var match = string.match(ropenTag); //处理元素节点\n            if (match) {\n                var leftContent = match[0],\n                    tag = match[1];\n                var node = {\n                    nodeName: tag,\n                    props: {},\n                    children: []\n                };\n\n                string = string.replace(leftContent, ''); //去掉标签名(rightContent)\n                try {\n                    var arr = getAttrs(string); //处理属性\n                } catch (e) {}\n                if (arr) {\n                    node.props = arr[1];\n                    string = string.replace(arr[0], '');\n                    leftContent += arr[0];\n                }\n\n                if (string.charAt(0) === '>') {\n                    //处理开标签的边界符\n                    leftContent += '>';\n                    string = string.slice(1);\n                    if (voidTag[node.nodeName]) {\n                        node.isVoidTag = true;\n                    }\n                } else if (string.slice(0, 2) === '/>') {\n                    //处理开标签的边界符\n                    leftContent += '/>';\n                    string = string.slice(2);\n                    node.isVoidTag = true;\n                }\n\n                if (!node.isVoidTag && specalTag[tag]) {\n                    //如果是script, style, xmp等元素\n                    var closeTag = '</' + tag + '>';\n                    var j = string.indexOf(closeTag);\n                    var nodeValue = string.slice(0, j);\n                    leftContent += nodeValue + closeTag;\n                    node.children.push({\n                        nodeName: '#text',\n                        nodeValue: nodeValue\n                    });\n                    if (tag === 'textarea') {\n                        node.props.type = tag;\n                        node.props.value = nodeValue;\n                    }\n                }\n                return [leftContent, node];\n            }\n        }\n    }\n\n    function getText(node) {\n        var ret = '';\n        node.children.forEach(function (el) {\n            if (el.nodeName === '#text') {\n                ret += el.nodeValue;\n            } else if (el.children && !hiddenTag[el.nodeName]) {\n                ret += getText(el);\n            }\n        });\n        return ret;\n    }\n\n    function getAttrs(string) {\n        var state = 'AttrName',\n            attrName = '',\n            attrValue = '',\n            quote$$1,\n            escape,\n            props = {};\n        for (var i = 0, n = string.length; i < n; i++) {\n            var c = string.charAt(i);\n            switch (state) {\n                case 'AttrName':\n                    if (c === '/' && string.charAt(i + 1) === '>' || c === '>') {\n                        if (attrName) props[attrName] = attrName;\n                        return [string.slice(0, i), props];\n                    }\n                    if (rsp.test(c)) {\n                        if (attrName) {\n                            state = 'AttrEqual';\n                        }\n                    } else if (c === '=') {\n                        if (!attrName) {\n                            throw '必须指定属性名';\n                        }\n                        state = 'AttrQuote';\n                    } else {\n                        attrName += c;\n                    }\n                    break;\n                case 'AttrEqual':\n                    if (c === '=') {\n                        state = 'AttrQuote';\n                    } else if (rcontent.test(c)) {\n                        props[attrName] = attrName;\n                        attrName = c;\n                        state = 'AttrName';\n                    }\n                    break;\n                case 'AttrQuote':\n                    if (c === '\"' || c === \"'\") {\n                        quote$$1 = c;\n                        state = 'AttrValue';\n                        escape = false;\n                    }\n                    break;\n                case 'AttrValue':\n                    if (c === '\\\\' && /\"'/.test(string.charAt(i + 1))) {\n                        escape = !escape;\n                    }\n                    if (c === '\\n') {\n                        break;\n                    }\n                    if (c !== quote$$1) {\n                        attrValue += c;\n                    } else if (c === quote$$1 && !escape) {\n                        props[attrName] = attrValue;\n                        attrName = attrValue = '';\n                        state = 'AttrName';\n                    }\n                    break;\n            }\n        }\n        throw '必须关闭标签';\n    }\n\n    var rhtml = /<|&#?\\w+;/;\n    var htmlCache = new Cache(128);\n    var rxhtml = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig;\n\n    avalon.parseHTML = function (html) {\n        var fragment = createFragment();\n        //处理非字符串\n        if (typeof html !== 'string') {\n            return fragment;\n        }\n        //处理非HTML字符串\n        if (!rhtml.test(html)) {\n            return document$1.createTextNode(html);\n        }\n\n        html = html.replace(rxhtml, '<$1></$2>').trim();\n        var hasCache = htmlCache.get(html);\n        if (hasCache) {\n            return avalon.cloneNode(hasCache);\n        }\n        var vnodes = fromString(html);\n        for (var i = 0, el; el = vnodes[i++];) {\n            var child = avalon.vdom(el, 'toDOM');\n            fragment.appendChild(child);\n        }\n        if (html.length < 1024) {\n            htmlCache.put(html, fragment);\n        }\n        return fragment;\n    };\n\n    avalon.innerHTML = function (node, html) {\n        var parsed = avalon.parseHTML(html);\n        this.clearHTML(node);\n        node.appendChild(parsed);\n    };\n\n    //https://github.com/karloespiritu/escapehtmlent/blob/master/index.js\n    avalon.unescapeHTML = function (html) {\n        return String(html).replace(/&quot;/g, '\"').replace(/&#39;/g, '\\'').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');\n    };\n\n    avalon.clearHTML = function (node) {\n        /* istanbul ignore next */\n        while (node.lastChild) {\n            node.removeChild(node.lastChild);\n        }\n        return node;\n    };\n\n    //http://www.feiesoft.com/html/events.html\n    //http://segmentfault.com/q/1010000000687977/a-1020000000688757\n    var canBubbleUp = {\n        click: true,\n        dblclick: true,\n        keydown: true,\n        keypress: true,\n        keyup: true,\n        mousedown: true,\n        mousemove: true,\n        mouseup: true,\n        mouseover: true,\n        mouseout: true,\n        wheel: true,\n        mousewheel: true,\n        input: true,\n        change: true,\n        beforeinput: true,\n        compositionstart: true,\n        compositionupdate: true,\n        compositionend: true,\n        select: true,\n        //http://blog.csdn.net/lee_magnum/article/details/17761441\n        cut: true,\n        copy: true,\n        paste: true,\n        beforecut: true,\n        beforecopy: true,\n        beforepaste: true,\n        focusin: true,\n        focusout: true,\n        DOMFocusIn: true,\n        DOMFocusOut: true,\n        DOMActivate: true,\n        dragend: true,\n        datasetchanged: true\n    };\n\n    /* istanbul ignore if */\n    var hackSafari = avalon.modern && document$1.ontouchstart;\n\n    //添加fn.bind, fn.unbind, bind, unbind\n    avalon.fn.bind = function (type, fn, phase) {\n        if (this[0]) {\n            //此方法不会链\n            return avalon.bind(this[0], type, fn, phase);\n        }\n    };\n\n    avalon.fn.unbind = function (type, fn, phase) {\n        if (this[0]) {\n            var args = _slice.call(arguments);\n            args.unshift(this[0]);\n            avalon.unbind.apply(0, args);\n        }\n        return this;\n    };\n\n    /*绑定事件*/\n    avalon.bind = function (elem, type, fn) {\n        if (elem.nodeType === 1) {\n            var value = elem.getAttribute('avalon-events') || '';\n            //如果是使用ms-on-*绑定的回调,其uuid格式为e12122324,\n            //如果是使用bind方法绑定的回调,其uuid格式为_12\n            var uuid = getShortID(fn);\n            var hook = eventHooks[type];\n            /* istanbul ignore if */\n            if (type === 'click' && hackSafari) {\n                elem.addEventListener('click', avalon.noop);\n            }\n            /* istanbul ignore if */\n            if (hook) {\n                type = hook.type || type;\n                if (hook.fix) {\n                    fn = hook.fix(elem, fn);\n                    fn.uuid = uuid;\n                }\n            }\n            var key = type + ':' + uuid;\n            avalon.eventListeners[fn.uuid] = fn;\n            /* istanbul ignore if */\n            if (value.indexOf(type + ':') === -1) {\n                //同一种事件只绑定一次\n                if (canBubbleUp[type] || avalon.modern && focusBlur[type]) {\n                    delegateEvent(type);\n                } else {\n                    avalon._nativeBind(elem, type, dispatch);\n                }\n            }\n            var keys = value.split(',');\n            /* istanbul ignore if */\n            if (keys[0] === '') {\n                keys.shift();\n            }\n            if (keys.indexOf(key) === -1) {\n                keys.push(key);\n                setEventId(elem, keys.join(','));\n                //将令牌放进avalon-events属性中\n            }\n            return fn;\n        } else {\n            /* istanbul ignore next */\n            var cb = function cb(e) {\n                fn.call(elem, new avEvent(e));\n            };\n\n            avalon._nativeBind(elem, type, cb);\n            return cb;\n        }\n    };\n\n    function setEventId(node, value) {\n        node.setAttribute('avalon-events', value);\n    }\n    /* istanbul ignore next */\n    avalon.unbind = function (elem, type, fn) {\n        if (elem.nodeType === 1) {\n            var value = elem.getAttribute('avalon-events') || '';\n            switch (arguments.length) {\n                case 1:\n                    avalon._nativeUnBind(elem, type, dispatch);\n                    elem.removeAttribute('avalon-events');\n                    break;\n                case 2:\n                    value = value.split(',').filter(function (str) {\n                        return str.indexOf(type + ':') === -1;\n                    }).join(',');\n                    setEventId(elem, value);\n                    break;\n                default:\n                    var search = type + ':' + fn.uuid;\n                    value = value.split(',').filter(function (str) {\n                        return str !== search;\n                    }).join(',');\n                    setEventId(elem, value);\n                    delete avalon.eventListeners[fn.uuid];\n                    break;\n            }\n        } else {\n            avalon._nativeUnBind(elem, type, fn);\n        }\n    };\n\n    var typeRegExp = {};\n\n    function collectHandlers(elem, type, handlers) {\n        var value = elem.getAttribute('avalon-events');\n        if (value && (elem.disabled !== true || type !== 'click')) {\n            var uuids = [];\n            var reg = typeRegExp[type] || (typeRegExp[type] = new RegExp(\"\\\\b\" + type + '\\\\:([^,\\\\s]+)', 'g'));\n            value.replace(reg, function (a, b) {\n                uuids.push(b);\n                return a;\n            });\n            if (uuids.length) {\n                handlers.push({\n                    elem: elem,\n                    uuids: uuids\n                });\n            }\n        }\n        elem = elem.parentNode;\n        var g = avalon.gestureEvents || {};\n        if (elem && elem.getAttribute && (canBubbleUp[type] || g[type])) {\n            collectHandlers(elem, type, handlers);\n        }\n    }\n\n    var rhandleHasVm = /^e/;\n\n    function dispatch(event) {\n        event = new avEvent(event);\n        var type = event.type;\n        var elem = event.target;\n        var handlers = [];\n        collectHandlers(elem, type, handlers);\n        var i = 0,\n            j,\n            uuid,\n            handler;\n        while ((handler = handlers[i++]) && !event.cancelBubble) {\n            var host = event.currentTarget = handler.elem;\n            j = 0;\n            while (uuid = handler.uuids[j++]) {\n                if (event.stopImmediate) {\n                    break;\n                }\n                var fn = avalon.eventListeners[uuid];\n                if (fn) {\n                    var vm = rhandleHasVm.test(uuid) ? handler.elem._ms_context_ : 0;\n                    if (vm && vm.$hashcode === false) {\n                        return avalon.unbind(elem, type, fn);\n                    }\n                    var ret = fn.call(vm || elem, event);\n\n                    if (ret === false) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n            }\n        }\n    }\n\n    var focusBlur = {\n        focus: true,\n        blur: true\n    };\n\n    function delegateEvent(type) {\n        var value = root.getAttribute('delegate-events') || '';\n        if (value.indexOf(type) === -1) {\n            //IE6-8会多次绑定同种类型的同一个函数,其他游览器不会\n            var arr = value.match(avalon.rword) || [];\n            arr.push(type);\n            root.setAttribute('delegate-events', arr.join(','));\n            avalon._nativeBind(root, type, dispatch, !!focusBlur[type]);\n        }\n    }\n\n    var eventProto = {\n        webkitMovementY: 1,\n        webkitMovementX: 1,\n        keyLocation: 1,\n        fixEvent: function fixEvent() {},\n        preventDefault: function preventDefault() {\n            var e = this.originalEvent || {};\n            e.returnValue = this.returnValue = false;\n            if (modern && e.preventDefault) {\n                e.preventDefault();\n            }\n        },\n        stopPropagation: function stopPropagation() {\n            var e = this.originalEvent || {};\n            e.cancelBubble = this.cancelBubble = true;\n            if (modern && e.stopPropagation) {\n                e.stopPropagation();\n            }\n        },\n        stopImmediatePropagation: function stopImmediatePropagation() {\n            this.stopPropagation();\n            this.stopImmediate = true;\n        },\n        toString: function toString() {\n            return '[object Event]'; //#1619\n        }\n    };\n\n    function avEvent(event) {\n        if (event.originalEvent) {\n            return event;\n        }\n        for (var i in event) {\n            if (!eventProto[i]) {\n                this[i] = event[i];\n            }\n        }\n        if (!this.target) {\n            this.target = event.srcElement;\n        }\n        var target = this.target;\n        this.fixEvent();\n        this.timeStamp = new Date() - 0;\n        this.originalEvent = event;\n    }\n    avEvent.prototype = eventProto;\n    //针对firefox, chrome修正mouseenter, mouseleave\n    /* istanbul ignore if */\n    if (!('onmouseenter' in root)) {\n        avalon.each({\n            mouseenter: 'mouseover',\n            mouseleave: 'mouseout'\n        }, function (origType, fixType) {\n            eventHooks[origType] = {\n                type: fixType,\n                fix: function fix(elem, fn) {\n                    return function (e) {\n                        var t = e.relatedTarget;\n                        if (!t || t !== elem && !(elem.compareDocumentPosition(t) & 16)) {\n                            delete e.type;\n                            e.type = origType;\n                            return fn.apply(this, arguments);\n                        }\n                    };\n                }\n            };\n        });\n    }\n    //针对IE9+, w3c修正animationend\n    avalon.each({\n        AnimationEvent: 'animationend',\n        WebKitAnimationEvent: 'webkitAnimationEnd'\n    }, function (construct, fixType) {\n        if (window$1[construct] && !eventHooks.animationend) {\n            eventHooks.animationend = {\n                type: fixType\n            };\n        }\n    });\n\n    /* istanbul ignore if */\n    if (!(\"onmousewheel\" in document$1)) {\n        /* IE6-11 chrome mousewheel wheelDetla 下 -120 上 120\n         firefox DOMMouseScroll detail 下3 上-3\n         firefox wheel detlaY 下3 上-3\n         IE9-11 wheel deltaY 下40 上-40\n         chrome wheel deltaY 下100 上-100 */\n        var fixWheelType = document$1.onwheel !== void 0 ? 'wheel' : 'DOMMouseScroll';\n        var fixWheelDelta = fixWheelType === 'wheel' ? 'deltaY' : 'detail';\n        eventHooks.mousewheel = {\n            type: fixWheelType,\n            fix: function fix(elem, fn) {\n                return function (e) {\n                    var delta = e[fixWheelDelta] > 0 ? -120 : 120;\n                    e.wheelDelta = ~~elem._ms_wheel_ + delta;\n                    elem._ms_wheel_ = e.wheelDeltaY = e.wheelDelta;\n                    e.wheelDeltaX = 0;\n                    if (Object.defineProperty) {\n                        Object.defineProperty(e, 'type', {\n                            value: 'mousewheel'\n                        });\n                    }\n                    return fn.apply(this, arguments);\n                };\n            }\n        };\n    }\n\n    /* istanbul ignore if */\n    if (!modern) {\n        delete canBubbleUp.change;\n        delete canBubbleUp.select;\n    }\n    /* istanbul ignore next */\n    avalon._nativeBind = modern ? function (el, type, fn, capture) {\n        el.addEventListener(type, fn, !!capture);\n    } : function (el, type, fn) {\n        el.attachEvent('on' + type, fn);\n    };\n    /* istanbul ignore next */\n    avalon._nativeUnBind = modern ? function (el, type, fn, a) {\n        el.removeEventListener(type, fn, !!a);\n    } : function (el, type, fn) {\n        el.detachEvent('on' + type, fn);\n    };\n    /* istanbul ignore next */\n    avalon.fireDom = function (elem, type, opts) {\n        if (document$1.createEvent) {\n            var hackEvent = document$1.createEvent('Events');\n            hackEvent.initEvent(type, true, true, opts);\n            avalon.shadowCopy(hackEvent, opts);\n            elem.dispatchEvent(hackEvent);\n        } else if (root.contains(elem)) {\n            //IE6-8触发事件必须保证在DOM树中,否则报'SCRIPT16389: 未指明的错误'\n            hackEvent = document$1.createEventObject();\n            if (opts) avalon.shadowCopy(hackEvent, opts);\n            try {\n                elem.fireEvent('on' + type, hackEvent);\n            } catch (e) {\n                avalon.log('fireDom', type, 'args error');\n            }\n        }\n    };\n\n    var rmouseEvent = /^(?:mouse|contextmenu|drag)|click/;\n    /* istanbul ignore next */\n    avEvent.prototype.fixEvent = function () {\n        var event = this;\n        if (event.which == null && event.type.indexOf('key') === 0) {\n            event.which = event.charCode != null ? event.charCode : event.keyCode;\n        }\n        if (rmouseEvent.test(event.type) && !('pageX' in event)) {\n            var DOC = event.target.ownerDocument || document$1;\n            var box = DOC.compatMode === 'BackCompat' ? DOC.body : DOC.documentElement;\n            event.pageX = event.clientX + (box.scrollLeft >> 0) - (box.clientLeft >> 0);\n            event.pageY = event.clientY + (box.scrollTop >> 0) - (box.clientTop >> 0);\n            event.wheelDeltaY = ~~event.wheelDelta;\n            event.wheelDeltaX = 0;\n        }\n    };\n\n    //针对IE6-8修正input\n    /* istanbul ignore if */\n    if (!('oninput' in document$1.createElement('input'))) {\n        eventHooks.input = {\n            type: 'propertychange',\n            fix: function fix(elem, fn) {\n                return function (e) {\n                    if (e.propertyName === 'value') {\n                        e.type = 'input';\n                        return fn.apply(this, arguments);\n                    }\n                };\n            }\n        };\n    }\n\n    var readyList = [];\n\n    function fireReady(fn) {\n        avalon.isReady = true;\n        while (fn = readyList.shift()) {\n            fn(avalon);\n        }\n    }\n\n    avalon.ready = function (fn) {\n        readyList.push(fn);\n        if (avalon.isReady) {\n            fireReady();\n        }\n    };\n\n    avalon.ready(function () {\n        avalon.scan && avalon.scan(document$1.body);\n    });\n\n    /* istanbul ignore next */\n    function bootstrap() {\n        function doScrollCheck() {\n            try {\n                //IE下通过doScrollCheck检测DOM树是否建完\n                root.doScroll('left');\n                fireReady();\n            } catch (e) {\n                setTimeout(doScrollCheck);\n            }\n        }\n        if (document$1.readyState === 'complete') {\n            setTimeout(fireReady); //如果在domReady之外加载\n        } else if (document$1.addEventListener) {\n            document$1.addEventListener('DOMContentLoaded', fireReady, false);\n        } else if (document$1.attachEvent) {\n            //必须传入三个参数，否则在firefox4-26中报错\n            //caught exception: [Exception... \"Not enough arguments\"  nsresult: \"0x\n            document$1.attachEvent('onreadystatechange', function () {\n                if (document$1.readyState === 'complete') {\n                    fireReady();\n                }\n            });\n            try {\n                var isTop = window$1.frameElement === null;\n            } catch (e) {}\n            if (root.doScroll && isTop && window$1.external) {\n                //fix IE iframe BUG\n                doScrollCheck();\n            }\n        }\n\n        avalon.bind(window$1, 'load', fireReady);\n    }\n    if (inBrowser) {\n        bootstrap();\n    }\n\n    /**\n     * ------------------------------------------------------------\n     *                          DOM Api\n     * shim,class,data,css,val,html,event,ready  \n     * ------------------------------------------------------------\n     */\n\n    var orphanTag = {\n        script: 1,\n        style: 1,\n        textarea: 1,\n        xmp: 1,\n        noscript: 1,\n        template: 1\n    };\n\n    /* \n     *  此模块只用于文本转虚拟DOM, \n     *  因为在真实浏览器会对我们的HTML做更多处理,\n     *  如, 添加额外属性, 改变结构\n     *  此模块就是用于模拟这些行为\n     */\n    function makeOrphan(node, nodeName, innerHTML) {\n        switch (nodeName) {\n            case 'style':\n            case 'script':\n            case 'noscript':\n            case 'template':\n            case 'xmp':\n                node.children = [{\n                    nodeName: '#text',\n                    nodeValue: innerHTML\n                }];\n                break;\n            case 'textarea':\n                var props = node.props;\n                props.type = nodeName;\n                props.value = innerHTML;\n                node.children = [{\n                    nodeName: '#text',\n                    nodeValue: innerHTML\n                }];\n                break;\n            case 'option':\n                node.children = [{\n                    nodeName: '#text',\n                    nodeValue: trimHTML(innerHTML)\n                }];\n                break;\n        }\n    }\n\n    //专门用于处理option标签里面的标签\n    var rtrimHTML = /<\\w+(\\s+(\"[^\"]*\"|'[^']*'|[^>])+)?>|<\\/\\w+>/gi;\n    function trimHTML(v) {\n        return String(v).replace(rtrimHTML, '').trim();\n    }\n\n    //widget rule duplex validate\n\n    function fromDOM(dom) {\n        return [from$1(dom)];\n    }\n\n    function from$1(node) {\n        var type = node.nodeName.toLowerCase();\n        switch (type) {\n            case '#text':\n            case '#comment':\n                return {\n                    nodeName: type,\n                    dom: node,\n                    nodeValue: node.nodeValue\n                };\n            default:\n                var props = markProps(node, node.attributes || []);\n                var vnode = {\n                    nodeName: type,\n                    dom: node,\n                    isVoidTag: !!voidTag[type],\n                    props: props\n                };\n                if (type === 'option') {\n                    //即便你设置了option.selected = true,\n                    //option.attributes也找不到selected属性\n                    props.selected = node.selected;\n                }\n                if (orphanTag[type] || type === 'option') {\n                    makeOrphan(vnode, type, node.text || node.innerHTML);\n                    if (node.childNodes.length === 1) {\n                        vnode.children[0].dom = node.firstChild;\n                    }\n                } else if (!vnode.isVoidTag) {\n                    vnode.children = [];\n                    for (var i = 0, el; el = node.childNodes[i++];) {\n                        var child = from$1(el);\n                        if (/\\S/.test(child.nodeValue)) {\n                            vnode.children.push(child);\n                        }\n                    }\n                }\n                return vnode;\n        }\n    }\n\n    var rformElement = /input|textarea|select/i;\n\n    function markProps(node, attrs) {\n        var ret = {};\n        for (var i = 0, n = attrs.length; i < n; i++) {\n            var attr = attrs[i];\n            if (attr.specified) {\n                //IE6-9不会将属性名变小写,比如它会将用户的contenteditable变成contentEditable\n                ret[attr.name.toLowerCase()] = attr.value;\n            }\n        }\n        if (rformElement.test(node.nodeName)) {\n            ret.type = node.type;\n            var a = node.getAttributeNode('value');\n            if (a && /\\S/.test(a.value)) {\n                //IE6,7中无法取得checkbox,radio的value\n                ret.value = a.value;\n            }\n        }\n        var style = node.style.cssText;\n        if (style) {\n            ret.style = style;\n        }\n        //类名 = 去重(静态类名+动态类名+ hover类名? + active类名)\n        if (ret.type === 'select-one') {\n            ret.selectedIndex = node.selectedIndex;\n        }\n        return ret;\n    }\n\n    function VText(text) {\n        this.nodeName = '#text';\n        this.nodeValue = text;\n    }\n\n    VText.prototype = {\n        constructor: VText,\n        toDOM: function toDOM() {\n            /* istanbul ignore if*/\n            if (this.dom) return this.dom;\n            var v = avalon._decode(this.nodeValue);\n            return this.dom = document$1.createTextNode(v);\n        },\n        toHTML: function toHTML() {\n            return this.nodeValue;\n        }\n    };\n\n    function VComment(text) {\n        this.nodeName = '#comment';\n        this.nodeValue = text;\n    }\n    VComment.prototype = {\n        constructor: VComment,\n        toDOM: function toDOM() {\n            if (this.dom) return this.dom;\n            return this.dom = document$1.createComment(this.nodeValue);\n        },\n        toHTML: function toHTML() {\n            return '<!--' + this.nodeValue + '-->';\n        }\n    };\n\n    function VElement(type, props, children, isVoidTag) {\n        this.nodeName = type;\n        this.props = props;\n        this.children = children;\n        this.isVoidTag = isVoidTag;\n    }\n    VElement.prototype = {\n        constructor: VElement,\n        toDOM: function toDOM() {\n            if (this.dom) return this.dom;\n            var dom,\n                tagName = this.nodeName;\n            if (avalon.modern && svgTags[tagName]) {\n                dom = createSVG(tagName);\n                /* istanbul ignore next*/\n            } else if (!avalon.modern && (VMLTags[tagName] || rvml.test(tagName))) {\n                dom = createVML(tagName);\n            } else {\n                dom = document$1.createElement(tagName);\n            }\n\n            var props = this.props || {};\n\n            for (var i in props) {\n                var val = props[i];\n                if (skipFalseAndFunction(val)) {\n                    /* istanbul ignore if*/\n                    if (specalAttrs[i] && avalon.msie < 8) {\n                        specalAttrs[i](dom, val);\n                    } else {\n                        dom.setAttribute(i, val + '');\n                    }\n                }\n            }\n            var c = this.children || [];\n            var template = c[0] ? c[0].nodeValue : '';\n            switch (this.nodeName) {\n                case 'script':\n                    dom.type = 'noexec';\n                    dom.text = template;\n                    try {\n                        dom.innerHTML = template;\n                    } catch (e) {}\n                    dom.type = props.type || '';\n                    break;\n                case 'noscript':\n                    dom.textContent = template;\n                case 'style':\n                case 'xmp':\n                case 'template':\n                    try {\n                        dom.innerHTML = template;\n                    } catch (e) {\n                        /* istanbul ignore next*/\n                        hackIE(dom, this.nodeName, template);\n                    }\n                    break;\n                case 'option':\n                    //IE6-8,为option添加文本子节点,不会同步到text属性中\n                    /* istanbul ignore next */\n                    if (msie$1 < 9) dom.text = template;\n                default:\n                    /* istanbul ignore next */\n                    if (!this.isVoidTag && this.children) {\n                        this.children.forEach(function (el) {\n                            return c && dom.appendChild(avalon.vdom(c, 'toDOM'));\n                        });\n                    }\n                    break;\n            }\n            return this.dom = dom;\n        },\n\n        /* istanbul ignore next */\n\n        toHTML: function toHTML() {\n            var arr = [];\n            var props = this.props || {};\n            for (var i in props) {\n                var val = props[i];\n                if (skipFalseAndFunction(val)) {\n                    arr.push(i + '=' + avalon.quote(props[i] + ''));\n                }\n            }\n            arr = arr.length ? ' ' + arr.join(' ') : '';\n            var str = '<' + this.nodeName + arr;\n            if (this.isVoidTag) {\n                return str + '/>';\n            }\n            str += '>';\n            if (this.children) {\n                str += this.children.map(function (el) {\n                    return el ? avalon.vdom(el, 'toHTML') : '';\n                }).join('');\n            }\n            return str + '</' + this.nodeName + '>';\n        }\n    };\n    function hackIE(dom, nodeName, template) {\n        switch (nodeName) {\n            case 'style':\n                dom.setAttribute('type', 'text/css');\n                dom.styleSheet.cssText = template;\n                break;\n            case 'xmp': //IE6-8,XMP元素里面只能有文本节点,不能使用innerHTML\n            case 'noscript':\n                dom.textContent = template;\n                break;\n        }\n    }\n    function skipFalseAndFunction(a) {\n        return a !== false && Object(a) !== a;\n    }\n    /* istanbul ignore next */\n    var specalAttrs = {\n        \"class\": function _class(dom, val) {\n            dom.className = val;\n        },\n        style: function style(dom, val) {\n            dom.style.cssText = val;\n        },\n        type: function type(dom, val) {\n            try {\n                //textarea,button 元素在IE6,7设置 type 属性会抛错\n                dom.type = val;\n            } catch (e) {}\n        },\n        'for': function _for(dom, val) {\n            dom.setAttribute('for', val);\n            dom.htmlFor = val;\n        }\n    };\n\n    function createSVG(type) {\n        return document$1.createElementNS('http://www.w3.org/2000/svg', type);\n    }\n    var svgTags = avalon.oneObject('circle,defs,ellipse,image,line,' + 'path,polygon,polyline,rect,symbol,text,use,g,svg');\n\n    var rvml = /^\\w+\\:\\w+/;\n    /* istanbul ignore next*/\n    function createVML(type) {\n        if (document$1.styleSheets.length < 31) {\n            document$1.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\");\n        } else {\n            // no more room, add to the existing one\n            // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n            document$1.styleSheets[0].addRule(\".rvml\", \"behavior:url(#default#VML)\");\n        }\n        var arr = type.split(':');\n        if (arr.length === 1) {\n            arr.unshift('v');\n        }\n        var tag = arr[1];\n        var ns = arr[0];\n        if (!document$1.namespaces[ns]) {\n            document$1.namespaces.add(ns, \"urn:schemas-microsoft-com:vml\");\n        }\n        return document$1.createElement('<' + ns + ':' + tag + ' class=\"rvml\">');\n    }\n\n    var VMLTags = avalon.oneObject('shape,line,polyline,rect,roundrect,oval,arc,' + 'curve,background,image,shapetype,group,fill,' + 'stroke,shadow, extrusion, textbox, imagedata, textpath');\n\n    function VFragment(children, key, val, index) {\n        this.nodeName = '#document-fragment';\n        this.children = children;\n        this.key = key;\n        this.val = val;\n        this.index = index;\n        this.props = {};\n    }\n    VFragment.prototype = {\n        constructor: VFragment,\n        toDOM: function toDOM() {\n            if (this.dom) return this.dom;\n            var f = this.toFragment();\n            //IE6-11 docment-fragment都没有children属性 \n            this.split = f.lastChild;\n            return this.dom = f;\n        },\n        dispose: function dispose() {\n            this.toFragment();\n            this.innerRender && this.innerRender.dispose();\n            for (var i in this) {\n                this[i] = null;\n            }\n        },\n        toFragment: function toFragment() {\n            var f = createFragment();\n            this.children.forEach(function (el) {\n                return f.appendChild(avalon.vdom(el, 'toDOM'));\n            });\n            return f;\n        },\n        toHTML: function toHTML() {\n            var c = this.children;\n            return c.map(function (el) {\n                return avalon.vdom(el, 'toHTML');\n            }).join('');\n        }\n    };\n\n    /**\n     * 虚拟DOM的4大构造器\n     */\n    avalon.mix(avalon, {\n        VText: VText,\n        VComment: VComment,\n        VElement: VElement,\n        VFragment: VFragment\n    });\n\n    var constNameMap = {\n        '#text': 'VText',\n        '#document-fragment': 'VFragment',\n        '#comment': 'VComment'\n    };\n\n    var vdom = avalon.vdomAdaptor = avalon.vdom = function (obj, method) {\n        if (!obj) {\n            //obj在ms-for循环里面可能是null\n            return method === \"toHTML\" ? '' : createFragment();\n        }\n        var nodeName = obj.nodeName;\n        if (!nodeName) {\n            return new avalon.VFragment(obj)[method]();\n        }\n        var constName = constNameMap[nodeName] || 'VElement';\n        return avalon[constName].prototype[method].call(obj);\n    };\n\n    avalon.domize = function (a) {\n        return avalon.vdom(a, 'toDOM');\n    };\n\n    avalon.pendingActions = [];\n    avalon.uniqActions = {};\n    avalon.inTransaction = 0;\n    config.trackDeps = false;\n    avalon.track = function () {\n        if (config.trackDeps) {\n            avalon.log.apply(avalon, arguments);\n        }\n    };\n\n    /**\n     * Batch is a pseudotransaction, just for purposes of memoizing ComputedValues when nothing else does.\n     * During a batch `onBecomeUnobserved` will be called at most once per observable.\n     * Avoids unnecessary recalculations.\n     */\n\n    function runActions() {\n        if (avalon.isRunningActions === true || avalon.inTransaction > 0) return;\n        avalon.isRunningActions = true;\n        var tasks = avalon.pendingActions.splice(0, avalon.pendingActions.length);\n        for (var i = 0, task; task = tasks[i++];) {\n            task.update();\n            delete avalon.uniqActions[task.uuid];\n        }\n        avalon.isRunningActions = false;\n    }\n\n    function propagateChanged(target) {\n        var list = target.observers;\n        for (var i = 0, el; el = list[i++];) {\n            el.schedule(); //通知action, computed做它们该做的事\n        }\n    }\n\n    //将自己抛到市场上卖\n    function reportObserved(target) {\n        var action = avalon.trackingAction || null;\n        if (action !== null) {\n\n            avalon.track('征收到', target.expr);\n            action.mapIDs[target.uuid] = target;\n        }\n    }\n\n    var targetStack = [];\n\n    function collectDeps(action, getter) {\n        if (!action.observers) return;\n        var preAction = avalon.trackingAction;\n        if (preAction) {\n            targetStack.push(preAction);\n        }\n        avalon.trackingAction = action;\n        avalon.track('【action】', action.type, action.expr, '开始征收依赖项');\n        //多个observe持有同一个action\n        action.mapIDs = {}; //重新收集依赖\n        var hasError = true,\n            result;\n        try {\n            result = getter.call(action);\n            hasError = false;\n        } finally {\n            if (hasError) {\n                avalon.warn('collectDeps fail', getter + '');\n                action.mapIDs = {};\n                avalon.trackingAction = preAction;\n            } else {\n                // 确保它总是为null\n                avalon.trackingAction = targetStack.pop();\n                try {\n                    resetDeps(action);\n                } catch (e) {\n                    avalon.warn(e);\n                }\n            }\n            return result;\n        }\n    }\n\n    function resetDeps(action) {\n        var prev = action.observers,\n            curr = [],\n            checked = {},\n            ids = [];\n        for (var i in action.mapIDs) {\n            var dep = action.mapIDs[i];\n            if (!dep.isAction) {\n                if (!dep.observers) {\n                    //如果它已经被销毁\n                    delete action.mapIDs[i];\n                    continue;\n                }\n                ids.push(dep.uuid);\n                curr.push(dep);\n                checked[dep.uuid] = 1;\n                if (dep.lastAccessedBy === action.uuid) {\n                    continue;\n                }\n                dep.lastAccessedBy = action.uuid;\n                avalon.Array.ensure(dep.observers, action);\n            }\n        }\n        var ids = ids.sort().join(',');\n        if (ids === action.ids) {\n            return;\n        }\n        action.ids = ids;\n        if (!action.isComputed) {\n            action.observers = curr;\n        } else {\n            action.depsCount = curr.length;\n            action.deps = avalon.mix({}, action.mapIDs);\n            action.depsVersion = {};\n            for (var _i in action.mapIDs) {\n                var _dep = action.mapIDs[_i];\n                action.depsVersion[_dep.uuid] = _dep.version;\n            }\n        }\n\n        for (var _i2 = 0, _dep2; _dep2 = prev[_i2++];) {\n            if (!checked[_dep2.uuid]) {\n                avalon.Array.remove(_dep2.observers, action);\n            }\n        }\n    }\n\n    function transaction(action, thisArg, args) {\n        args = args || [];\n        var name = 'transaction ' + (action.name || action.displayName || 'noop');\n        transactionStart(name);\n        var res = action.apply(thisArg, args);\n        transactionEnd(name);\n        return res;\n    }\n    avalon.transaction = transaction;\n\n    function transactionStart(name) {\n        avalon.inTransaction += 1;\n    }\n\n    function transactionEnd(name) {\n        if (--avalon.inTransaction === 0) {\n            avalon.isRunningActions = false;\n            runActions();\n        }\n    }\n\n    /* \n     * 将要检测的字符串的字符串替换成??123这样的格式\n     */\n    var stringNum = 0;\n    var stringPool = {\n        map: {}\n    };\n    var rfill = /\\?\\?\\d+/g;\n    function dig(a) {\n        var key = '??' + stringNum++;\n        stringPool.map[key] = a;\n        return key + ' ';\n    }\n    function fill(a) {\n        var val = stringPool.map[a];\n        return val;\n    }\n    function clearString(str) {\n        var array = readString(str);\n        for (var i = 0, n = array.length; i < n; i++) {\n            str = str.replace(array[i], dig);\n        }\n        return str;\n    }\n    //https://github.com/RubyLouvre/avalon/issues/1944\n    function readString(str, i, ret) {\n        var end = false,\n            s = 0,\n            i = i || 0;\n        ret = ret || [];\n        for (var n = str.length; i < n; i++) {\n            var c = str.charAt(i);\n            if (!end) {\n                if (c === \"'\") {\n                    end = \"'\";\n                    s = i;\n                } else if (c === '\"') {\n                    end = '\"';\n                    s = i;\n                }\n            } else {\n                if (c === end) {\n                    ret.push(str.slice(s, i + 1));\n                    end = false;\n                }\n            }\n        }\n        if (end !== false) {\n            return readString(str, s + 1, ret);\n        }\n        return ret;\n    }\n\n    var keyMap = avalon.oneObject(\"break,case,catch,continue,debugger,default,delete,do,else,false,\" + \"finally,for,function,if,in,instanceof,new,null,return,switch,this,\" + \"throw,true,try,typeof,var,void,while,with,\" + /* 关键字*/\n    \"abstract,boolean,byte,char,class,const,double,enum,export,extends,\" + \"final,float,goto,implements,import,int,interface,long,native,\" + \"package,private,protected,public,short,static,super,synchronized,\" + \"throws,transient,volatile,arguments\");\n\n    var skipMap = avalon.mix({\n        Math: 1,\n        Date: 1,\n        $event: 1,\n        window: 1,\n        __vmodel__: 1,\n        avalon: 1\n    }, keyMap);\n\n    var rvmKey = /(^|[^\\w\\u00c0-\\uFFFF_])(@|##)(?=[$\\w])/g;\n    var ruselessSp = /\\s*(\\.|\\|)\\s*/g;\n    var rshortCircuit = /\\|\\|/g;\n    var brackets = /\\(([^)]*)\\)/;\n    var rpipeline = /\\|(?=\\?\\?)/;\n    var rregexp = /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/g;\n    var robjectProp = /\\.[\\w\\.\\$]+/g; //对象的属性 el.xxx 中的xxx\n    var robjectKey = /(\\{|\\,)\\s*([\\$\\w]+)\\s*:/g; //对象的键名与冒号 {xxx:1,yyy: 2}中的xxx, yyy\n    var rfilterName = /\\|(\\w+)/g;\n    var rlocalVar = /[$a-zA-Z_][$a-zA-Z0-9_]*/g;\n\n    var exprCache = new Cache(300);\n\n    function addScopeForLocal(str) {\n        return str.replace(robjectProp, dig).replace(rlocalVar, function (el) {\n            if (!skipMap[el]) {\n                return \"__vmodel__.\" + el;\n            }\n            return el;\n        });\n    }\n\n    function addScope(expr, type) {\n        var cacheKey = expr + ':' + type;\n        var cache = exprCache.get(cacheKey);\n        if (cache) {\n            return cache.slice(0);\n        }\n\n        stringPool.map = {};\n        //https://github.com/RubyLouvre/avalon/issues/1849\n        var input = expr.replace(rregexp, function (a, b) {\n            return b + dig(a.slice(b.length));\n        }); //移除所有正则\n        input = clearString(input); //移除所有字符串\n        input = input.replace(rshortCircuit, dig). //移除所有短路运算符\n        replace(ruselessSp, '$1'). //移除.|两端空白\n\n        replace(robjectKey, function (_, a, b) {\n            //移除所有键名\n            return a + dig(b) + ':'; //比如 ms-widget=\"[{is:'ms-address-wrap', $id:'address'}]\"这样极端的情况 \n        }).replace(rvmKey, '$1__vmodel__.'). //转换@与##为__vmodel__\n        replace(rfilterName, function (a, b) {\n            //移除所有过滤器的名字\n            return '|' + dig(b);\n        });\n        input = addScopeForLocal(input); //在本地变量前添加__vmodel__\n\n        var filters = input.split(rpipeline); //根据管道符切割表达式\n        var body = filters.shift().replace(rfill, fill).trim();\n        if (/\\?\\?\\d/.test(body)) {\n            body = body.replace(rfill, fill);\n        }\n        if (filters.length) {\n            filters = filters.map(function (filter) {\n                var bracketArgs = '';\n                filter = filter.replace(brackets, function (a, b) {\n                    if (/\\S/.test(b)) {\n                        bracketArgs += ',' + b; //还原字符串,正则,短路运算符\n                    }\n                    return '';\n                });\n                var arg = '[' + avalon.quote(filter.trim()) + bracketArgs + ']';\n                return arg;\n            });\n            filters = 'avalon.composeFilters(' + filters + ')(__value__)';\n            filters = filters.replace(rfill, fill);\n        } else {\n            filters = '';\n        }\n        return exprCache.put(cacheKey, [body, filters]);\n    }\n    var rhandleName = /^__vmodel__\\.[$\\w\\.]+$/;\n    var rfixIE678 = /__vmodel__\\.([^(]+)\\(([^)]*)\\)/;\n    function makeHandle(body) {\n        if (rhandleName.test(body)) {\n            body = body + '($event)';\n        }\n        /* istanbul ignore if */\n        if (msie$1 < 9) {\n            body = body.replace(rfixIE678, function (a, b, c) {\n                return '__vmodel__.' + b + '.call(__vmodel__' + (/\\S/.test(c) ? ',' + c : '') + ')';\n            });\n        }\n        return body;\n    }\n    function createGetter(expr, type) {\n        var arr = addScope(expr, type),\n            body;\n        if (!arr[1]) {\n            body = arr[0];\n        } else {\n            body = arr[1].replace(/__value__\\)$/, arr[0] + ')');\n        }\n        try {\n            return new Function('__vmodel__', 'return ' + body + ';');\n            /* istanbul ignore next */\n        } catch (e) {\n            avalon.log('parse getter: [', expr, body, ']error');\n            return avalon.noop;\n        }\n    }\n\n    /**\n     * 生成表达式设值函数\n     * @param  {String}  expr\n     */\n    function createSetter(expr, type) {\n        var arr = addScope(expr, type);\n        var body = 'try{ ' + arr[0] + ' = __value__}catch(e){avalon.log(e, \"in on dir\")}';\n        try {\n            return new Function('__vmodel__', '__value__', body + ';');\n            /* istanbul ignore next */\n        } catch (e) {\n            avalon.log('parse setter: ', expr, ' error');\n            return avalon.noop;\n        }\n    }\n\n    var actionUUID = 1;\n    //需要重构\n    function Action(vm, options, callback) {\n        for (var i in options) {\n            if (protectedMenbers[i] !== 1) {\n                this[i] = options[i];\n            }\n        }\n\n        this.vm = vm;\n        this.observers = [];\n        this.callback = callback;\n        this.uuid = ++actionUUID;\n        this.ids = '';\n        this.mapIDs = {}; //这个用于去重\n        this.isAction = true;\n        var expr = this.expr;\n        // 缓存取值函数\n        if (typeof this.getter !== 'function') {\n            this.getter = createGetter(expr, this.type);\n        }\n        // 缓存设值函数（双向数据绑定）\n        if (this.type === 'duplex') {\n            this.setter = createSetter(expr, this.type);\n        }\n        // 缓存表达式旧值\n        this.value = NaN;\n        // 表达式初始值 & 提取依赖\n        if (!this.node) {\n            this.value = this.get();\n        }\n    }\n\n    Action.prototype = {\n        getValue: function getValue() {\n            var scope = this.vm;\n            try {\n                return this.getter.call(scope, scope);\n            } catch (e) {\n                avalon.log(this.getter + ' exec error');\n            }\n        },\n        setValue: function setValue(value) {\n            var scope = this.vm;\n            if (this.setter) {\n                this.setter.call(scope, scope, value);\n            }\n        },\n\n\n        // get --> getValue --> getter\n        get: function get(fn) {\n            var name = 'action track ' + this.type;\n\n            if (this.deep) {\n                avalon.deepCollect = true;\n            }\n\n            var value = collectDeps(this, this.getValue);\n            if (this.deep && avalon.deepCollect) {\n                avalon.deepCollect = false;\n            }\n\n            return value;\n        },\n\n\n        /**\n         * 在更新视图前保存原有的value\n         */\n        beforeUpdate: function beforeUpdate() {\n            return this.oldValue = getPlainObject(this.value);\n        },\n        update: function update(args, uuid) {\n            var oldVal = this.beforeUpdate();\n            var newVal = this.value = this.get();\n            var callback = this.callback;\n            if (callback && this.diff(newVal, oldVal, args)) {\n                callback.call(this.vm, this.value, oldVal, this.expr);\n            }\n            this._isScheduled = false;\n        },\n        schedule: function schedule() {\n            if (!this._isScheduled) {\n                this._isScheduled = true;\n                if (!avalon.uniqActions[this.uuid]) {\n                    avalon.uniqActions[this.uuid] = 1;\n                    avalon.pendingActions.push(this);\n                }\n\n                runActions(); //这里会还原_isScheduled\n\n            }\n        },\n        removeDepends: function removeDepends() {\n            var self = this;\n            this.observers.forEach(function (depend) {\n                avalon.Array.remove(depend.observers, self);\n            });\n        },\n\n\n        /**\n         * 比较两个计算值是否,一致,在for, class等能复杂数据类型的指令中,它们会重写diff复法\n         */\n        diff: function diff(a, b) {\n            return a !== b;\n        },\n\n\n        /**\n         * 销毁指令\n         */\n        dispose: function dispose() {\n            this.value = null;\n            this.removeDepends();\n            if (this.beforeDispose) {\n                this.beforeDispose();\n            }\n            for (var i in this) {\n                delete this[i];\n            }\n        }\n    };\n\n    function getPlainObject(v) {\n        if (v && typeof v === 'object') {\n            if (v && v.$events) {\n                return v.$model;\n            } else if (Array.isArray(v)) {\n                var ret = [];\n                for (var i = 0, n = v.length; i < n; i++) {\n                    ret.push(getPlainObject(v[i]));\n                }\n                return ret;\n            } else {\n                var _ret = {};\n                for (var _i3 in v) {\n                    _ret[_i3] = getPlainObject(v[_i3]);\n                }\n                return _ret;\n            }\n        } else {\n            return v;\n        }\n    }\n\n    var protectedMenbers = {\n        vm: 1,\n        callback: 1,\n\n        observers: 1,\n        oldValue: 1,\n        value: 1,\n        getValue: 1,\n        setValue: 1,\n        get: 1,\n\n        removeDepends: 1,\n        beforeUpdate: 1,\n        update: 1,\n        //diff\n        //getter\n        //setter\n        //expr\n        //vdom\n        //type: \"for\"\n        //name: \"ms-for\"\n        //attrName: \":for\"\n        //param: \"click\"\n        //beforeDispose\n        dispose: 1\n    };\n\n    /**\n    * \n     与Computed等共享UUID\n    */\n    var obid = 1;\n    function Mutation(expr, value, vm) {\n        //构造函数\n        this.expr = expr;\n        if (value) {\n            var childVm = platform.createProxy(value, this);\n            if (childVm) {\n                value = childVm;\n            }\n        }\n        this.value = value;\n        this.vm = vm;\n        try {\n            vm.$mutations[expr] = this;\n        } catch (ignoreIE) {}\n        this.uuid = ++obid;\n        this.updateVersion();\n        this.mapIDs = {};\n        this.observers = [];\n    }\n\n    Mutation.prototype = {\n        get: function get() {\n            if (avalon.trackingAction) {\n                this.collect(); //被收集\n                var childOb = this.value;\n                if (childOb && childOb.$events) {\n                    if (Array.isArray(childOb)) {\n                        childOb.forEach(function (item) {\n                            if (item && item.$events) {\n                                item.$events.__dep__.collect();\n                            }\n                        });\n                    } else if (avalon.deepCollect) {\n                        for (var key in childOb) {\n                            if (childOb.hasOwnProperty(key)) {\n                                var collectIt = childOb[key];\n                            }\n                        }\n                    }\n                }\n            }\n            return this.value;\n        },\n        collect: function collect() {\n            avalon.track(name, '被收集');\n            reportObserved(this);\n        },\n        updateVersion: function updateVersion() {\n            this.version = Math.random() + Math.random();\n        },\n        notify: function notify() {\n            transactionStart();\n            propagateChanged(this);\n            transactionEnd();\n        },\n        set: function set(newValue) {\n            var oldValue = this.value;\n            if (newValue !== oldValue) {\n                if (avalon.isObject(newValue)) {\n                    var hash = oldValue && oldValue.$hashcode;\n                    var childVM = platform.createProxy(newValue, this);\n                    if (childVM) {\n                        if (hash) {\n                            childVM.$hashcode = hash;\n                        }\n                        newValue = childVM;\n                    }\n                }\n                this.value = newValue;\n                this.updateVersion();\n                this.notify();\n            }\n        }\n    };\n\n    function getBody(fn) {\n        var entire = fn.toString();\n        return entire.substring(entire.indexOf('{}') + 1, entire.lastIndexOf('}'));\n    }\n    //如果不存在三目,if,方法\n    var instability = /(\\?|if\\b|\\(.+\\))/;\n\n    function __create(o) {\n        var __ = function __() {};\n        __.prototype = o;\n        return new __();\n    }\n\n    function __extends(child, parent) {\n        if (typeof parent === 'function') {\n            var proto = child.prototype = __create(parent.prototype);\n            proto.constructor = child;\n        }\n    }\n    var Computed = function (_super) {\n        __extends(Computed, _super);\n\n        function Computed(name, options, vm) {\n            //构造函数\n            _super.call(this, name, undefined, vm);\n            delete options.get;\n            delete options.set;\n\n            avalon.mix(this, options);\n            this.deps = {};\n            this.type = 'computed';\n            this.depsVersion = {};\n            this.isComputed = true;\n            this.trackAndCompute();\n            if (!('isStable' in this)) {\n                this.isStable = !instability.test(getBody(this.getter));\n            }\n        }\n        var cp = Computed.prototype;\n        cp.trackAndCompute = function () {\n            if (this.isStable && this.depsCount > 0) {\n                this.getValue();\n            } else {\n                collectDeps(this, this.getValue.bind(this));\n            }\n        };\n\n        cp.getValue = function () {\n            return this.value = this.getter.call(this.vm);\n        };\n\n        cp.schedule = function () {\n            var observers = this.observers;\n            var i = observers.length;\n            while (i--) {\n                var d = observers[i];\n                if (d.schedule) {\n                    d.schedule();\n                }\n            }\n        };\n\n        cp.shouldCompute = function () {\n            if (this.isStable) {\n                //如果变动因子确定,那么只比较变动因子的版本\n                var toComputed = false;\n                for (var i in this.deps) {\n                    if (this.deps[i].version !== this.depsVersion[i]) {\n                        toComputed = true;\n                        this.depsVersion[i] = this.deps[i].version;\n                    }\n                }\n                return toComputed;\n            }\n            return true;\n        };\n        cp.set = function () {\n            if (this.setter) {\n                avalon.transaction(this.setter, this.vm, arguments);\n            }\n        };\n        cp.get = function () {\n\n            //当被设置了就不稳定,当它被访问了一次就是稳定\n            this.collect();\n\n            if (this.shouldCompute()) {\n                this.trackAndCompute();\n                // console.log('computed 2 分支')\n                this.updateVersion();\n                //  this.reportChanged()\n            }\n\n            //下面这一行好像没用\n            return this.value;\n        };\n        return Computed;\n    }(Mutation);\n\n    /**\n     * 这里放置ViewModel模块的共用方法\n     * avalon.define: 全框架最重要的方法,生成用户VM\n     * IProxy, 基本用户数据产生的一个数据对象,基于$model与vmodel之间的形态\n     * modelFactory: 生成用户VM\n     * canHijack: 判定此属性是否该被劫持,加入数据监听与分发的的逻辑\n     * createProxy: listFactory与modelFactory的封装\n     * createAccessor: 实现数据监听与分发的重要对象\n     * itemFactory: ms-for循环中产生的代理VM的生成工厂\n     * fuseFactory: 两个ms-controller间产生的代理VM的生成工厂\n     */\n\n    avalon.define = function (definition) {\n        var $id = definition.$id;\n        if (!$id) {\n            avalon.error('vm.$id must be specified');\n        }\n        if (avalon.vmodels[$id]) {\n            avalon.warn('error:[' + $id + '] had defined!');\n        }\n        var vm = platform.modelFactory(definition);\n        return avalon.vmodels[$id] = vm;\n    };\n\n    /**\n     * 在未来的版本,avalon改用Proxy来创建VM,因此\n     */\n\n    function IProxy(definition, dd) {\n        avalon.mix(this, definition);\n        avalon.mix(this, $$skipArray);\n        this.$hashcode = avalon.makeHashCode('$');\n        this.$id = this.$id || this.$hashcode;\n        this.$events = {\n            __dep__: dd || new Mutation(this.$id)\n        };\n        if (avalon.config.inProxyMode) {\n            delete this.$mutations;\n            this.$accessors = {};\n            this.$computed = {};\n            this.$track = '';\n        } else {\n            this.$accessors = {\n                $model: modelAccessor\n            };\n        }\n        if (dd === void 0) {\n            this.$watch = platform.watchFactory(this.$events);\n            this.$fire = platform.fireFactory(this.$events);\n        } else {\n            delete this.$watch;\n            delete this.$fire;\n        }\n    }\n\n    platform.modelFactory = function modelFactory(definition, dd) {\n        var $computed = definition.$computed || {};\n        delete definition.$computed;\n        var core = new IProxy(definition, dd);\n        var $accessors = core.$accessors;\n        var keys = [];\n\n        platform.hideProperty(core, '$mutations', {});\n\n        for (var key in definition) {\n            if (key in $$skipArray) continue;\n            var val = definition[key];\n            keys.push(key);\n            if (canHijack(key, val)) {\n                $accessors[key] = createAccessor(key, val);\n            }\n        }\n        for (var _key in $computed) {\n            if (_key in $$skipArray) continue;\n            var val = $computed[_key];\n            if (typeof val === 'function') {\n                val = {\n                    get: val\n                };\n            }\n            if (val && val.get) {\n                val.getter = val.get;\n                val.setter = val.set;\n                avalon.Array.ensure(keys, _key);\n                $accessors[_key] = createAccessor(_key, val, true);\n            }\n        }\n        //将系统API以unenumerable形式加入vm,\n        //添加用户的其他不可监听属性或方法\n        //重写$track\n        //并在IE6-8中增添加不存在的hasOwnPropert方法\n        var vm = platform.createViewModel(core, $accessors, core);\n        platform.afterCreate(vm, core, keys, !dd);\n        return vm;\n    };\n    var $proxyItemBackdoorMap = {};\n\n    function canHijack(key, val, $proxyItemBackdoor) {\n        if (key in $$skipArray) return false;\n        if (key.charAt(0) === '$') {\n            if ($proxyItemBackdoor) {\n                if (!$proxyItemBackdoorMap[key]) {\n                    $proxyItemBackdoorMap[key] = 1;\n                    avalon.warn('ms-for\\u4E2D\\u7684\\u53D8\\u91CF' + key + '\\u4E0D\\u518D\\u5EFA\\u8BAE\\u4EE5$\\u4E3A\\u524D\\u7F00');\n                }\n                return true;\n            }\n            return false;\n        }\n        if (val == null) {\n            avalon.warn('定义vmodel时' + key + '的属性值不能为null undefine');\n            return true;\n        }\n        if (/error|date|function|regexp/.test(avalon.type(val))) {\n            return false;\n        }\n        return !(val && val.nodeName && val.nodeType);\n    }\n\n    function createProxy(target, dd) {\n        if (target && target.$events) {\n            return target;\n        }\n        var vm;\n        if (Array.isArray(target)) {\n            vm = platform.listFactory(target, false, dd);\n        } else if (isObject(target)) {\n            vm = platform.modelFactory(target, dd);\n        }\n        return vm;\n    }\n\n    platform.createProxy = createProxy;\n\n    platform.itemFactory = function itemFactory(before, after) {\n        var keyMap = before.$model;\n        var core = new IProxy(keyMap);\n        var state = avalon.shadowCopy(core.$accessors, before.$accessors); //防止互相污染\n        var data = after.data;\n        //core是包含系统属性的对象\n        //keyMap是不包含系统属性的对象, keys\n        for (var key in data) {\n            var val = keyMap[key] = core[key] = data[key];\n            state[key] = createAccessor(key, val);\n        }\n        var keys = Object.keys(keyMap);\n        var vm = platform.createViewModel(core, state, core);\n        platform.afterCreate(vm, core, keys);\n        return vm;\n    };\n\n    function createAccessor(key, val, isComputed) {\n        var mutation = null;\n        var Accessor = isComputed ? Computed : Mutation;\n        return {\n            get: function Getter() {\n                if (!mutation) {\n                    mutation = new Accessor(key, val, this);\n                }\n                return mutation.get();\n            },\n            set: function Setter(newValue) {\n                if (!mutation) {\n                    mutation = new Accessor(key, val, this);\n                }\n                mutation.set(newValue);\n            },\n            enumerable: true,\n            configurable: true\n        };\n    }\n\n    platform.fuseFactory = function fuseFactory(before, after) {\n        var keyMap = avalon.mix(before.$model, after.$model);\n        var core = new IProxy(avalon.mix(keyMap, {\n            $id: before.$id + after.$id\n        }));\n        var state = avalon.mix(core.$accessors, before.$accessors, after.$accessors); //防止互相污染\n\n        var keys = Object.keys(keyMap);\n        //将系统API以unenumerable形式加入vm,并在IE6-8中添加hasOwnPropert方法\n        var vm = platform.createViewModel(core, state, core);\n        platform.afterCreate(vm, core, keys, false);\n        return vm;\n    };\n\n    function toJson(val) {\n        var xtype = avalon.type(val);\n        if (xtype === 'array') {\n            var array = [];\n            for (var i = 0; i < val.length; i++) {\n                array[i] = toJson(val[i]);\n            }\n            return array;\n        } else if (xtype === 'object') {\n            if (typeof val.$track === 'string') {\n                var obj = {};\n                var arr = val.$track.match(/[^☥]+/g) || [];\n                arr.forEach(function (i) {\n                    var value = val[i];\n                    obj[i] = value && value.$events ? toJson(value) : value;\n                });\n                return obj;\n            }\n        }\n        return val;\n    }\n\n    var modelAccessor = {\n        get: function get() {\n            return toJson(this);\n        },\n        set: avalon.noop,\n        enumerable: false,\n        configurable: true\n    };\n\n    platform.toJson = toJson;\n    platform.modelAccessor = modelAccessor;\n\n    var _splice = ap.splice;\n    var __array__ = {\n        set: function set(index, val) {\n            if (index >>> 0 === index && this[index] !== val) {\n                if (index > this.length) {\n                    throw Error(index + 'set方法的第一个参数不能大于原数组长度');\n                }\n                this.splice(index, 1, val);\n            }\n        },\n        toJSON: function toJSON() {\n            //为了解决IE6-8的解决,通过此方法显式地求取数组的$model\n            return this.$model = platform.toJson(this);\n        },\n        contains: function contains(el) {\n            //判定是否包含\n            return this.indexOf(el) !== -1;\n        },\n        ensure: function ensure(el) {\n            if (!this.contains(el)) {\n                //只有不存在才push\n                this.push(el);\n                return true;\n            }\n            return false;\n        },\n        pushArray: function pushArray(arr) {\n            return this.push.apply(this, arr);\n        },\n        remove: function remove(el) {\n            //移除第一个等于给定值的元素\n            return this.removeAt(this.indexOf(el));\n        },\n        removeAt: function removeAt(index) {\n            //移除指定索引上的元素\n            if (index >>> 0 === index) {\n                return this.splice(index, 1);\n            }\n            return [];\n        },\n        clear: function clear() {\n            this.removeAll();\n            return this;\n        },\n        removeAll: function removeAll(all) {\n            //移除N个元素\n            var size = this.length;\n            var eliminate = Array.isArray(all) ? function (el) {\n                return all.indexOf(el) !== -1;\n            } : typeof all === 'function' ? all : false;\n\n            if (eliminate) {\n                for (var i = this.length - 1; i >= 0; i--) {\n                    if (eliminate(this[i], i)) {\n                        _splice.call(this, i, 1);\n                    }\n                }\n            } else {\n                _splice.call(this, 0, this.length);\n            }\n            this.toJSON();\n            this.$events.__dep__.notify();\n        }\n    };\n    function hijackMethods(array) {\n        for (var i in __array__) {\n            platform.hideProperty(array, i, __array__[i]);\n        }\n    }\n    var __method__ = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];\n\n    __method__.forEach(function (method) {\n        var original = ap[method];\n        __array__[method] = function () {\n            // 继续尝试劫持数组元素的属性\n            var core = this.$events;\n\n            var args = platform.listFactory(arguments, true, core.__dep__);\n            var result = original.apply(this, args);\n\n            this.toJSON();\n            core.__dep__.notify(method);\n            return result;\n        };\n    });\n\n    function listFactory(array, stop, dd) {\n        if (!stop) {\n            hijackMethods(array);\n            if (modern) {\n                Object.defineProperty(array, '$model', platform.modelAccessor);\n            }\n            platform.hideProperty(array, '$hashcode', avalon.makeHashCode('$'));\n            platform.hideProperty(array, '$events', { __dep__: dd || new Mutation() });\n        }\n        var _dd = array.$events && array.$events.__dep__;\n        for (var i = 0, n = array.length; i < n; i++) {\n            var item = array[i];\n            if (isObject(item)) {\n                array[i] = platform.createProxy(item, _dd);\n            }\n        }\n        return array;\n    }\n\n    platform.listFactory = listFactory;\n\n    //如果浏览器不支持ecma262v5的Object.defineProperties或者存在BUG，比如IE8\n    //标准浏览器使用__defineGetter__, __defineSetter__实现\n    var canHideProperty = true;\n    try {\n        Object.defineProperty({}, '_', {\n            value: 'x'\n        });\n        delete $$skipArray.$vbsetter;\n        delete $$skipArray.$vbthis;\n    } catch (e) {\n        /* istanbul ignore next*/\n        canHideProperty = false;\n    }\n\n    var protectedVB = { $vbthis: 1, $vbsetter: 1 };\n    /* istanbul ignore next */\n    function hideProperty(host, name, value) {\n        if (canHideProperty) {\n            Object.defineProperty(host, name, {\n                value: value,\n                writable: true,\n                enumerable: false,\n                configurable: true\n            });\n        } else if (!protectedVB[name]) {\n            /* istanbul ignore next */\n            host[name] = value;\n        }\n    }\n\n    function watchFactory(core) {\n        return function $watch(expr, callback, deep) {\n            var w = new Action(core.__proxy__, {\n                deep: deep,\n                type: 'user',\n                expr: expr\n            }, callback);\n            if (!core[expr]) {\n                core[expr] = [w];\n            } else {\n                core[expr].push(w);\n            }\n\n            return function () {\n                w.dispose();\n                avalon.Array.remove(core[expr], w);\n                if (core[expr].length === 0) {\n                    delete core[expr];\n                }\n            };\n        };\n    }\n\n    function fireFactory(core) {\n        return function $fire(expr, a) {\n            var list = core[expr];\n            if (Array.isArray(list)) {\n                for (var i = 0, w; w = list[i++];) {\n                    w.callback.call(w.vm, a, w.value, w.expr);\n                }\n            }\n        };\n    }\n\n    function wrapIt(str) {\n        return '☥' + str + '☥';\n    }\n\n    function afterCreate(vm, core, keys, bindThis) {\n        var ac = vm.$accessors;\n        //隐藏系统属性\n        for (var key in $$skipArray) {\n            if (avalon.msie < 9 && core[key] === void 0) continue;\n            hideProperty(vm, key, core[key]);\n        }\n        //为不可监听的属性或方法赋值\n        for (var i = 0; i < keys.length; i++) {\n            var _key2 = keys[i];\n            if (!(_key2 in ac)) {\n                var val = core[_key2];\n                if (bindThis && typeof val === 'function') {\n                    vm[_key2] = val.bind(vm);\n                    vm[_key2]._orig = val;\n                    continue;\n                }\n                vm[_key2] = val;\n            }\n        }\n        vm.$track = keys.join('☥');\n\n        function hasOwnKey(key) {\n            return wrapIt(vm.$track).indexOf(wrapIt(key)) > -1;\n        }\n        if (avalon.msie < 9) {\n            vm.hasOwnProperty = hasOwnKey;\n        }\n        vm.$events.__proxy__ = vm;\n    }\n\n    platform.hideProperty = hideProperty;\n    platform.fireFactory = fireFactory;\n    platform.watchFactory = watchFactory;\n    platform.afterCreate = afterCreate;\n\n    var createViewModel = Object.defineProperties;\n    var defineProperty;\n\n    var timeBucket = new Date() - 0;\n    /* istanbul ignore if*/\n    if (!canHideProperty) {\n        if ('__defineGetter__' in avalon) {\n            defineProperty = function defineProperty(obj, prop, desc) {\n                if ('value' in desc) {\n                    obj[prop] = desc.value;\n                }\n                if ('get' in desc) {\n                    obj.__defineGetter__(prop, desc.get);\n                }\n                if ('set' in desc) {\n                    obj.__defineSetter__(prop, desc.set);\n                }\n                return obj;\n            };\n            createViewModel = function createViewModel(obj, descs) {\n                for (var prop in descs) {\n                    if (descs.hasOwnProperty(prop)) {\n                        defineProperty(obj, prop, descs[prop]);\n                    }\n                }\n                return obj;\n            };\n        }\n        /* istanbul ignore if*/\n        if (msie$1 < 9) {\n            var VBClassPool = {};\n            window.execScript([// jshint ignore:line\n            'Function parseVB(code)', '\\tExecuteGlobal(code)', 'End Function' //转换一段文本为VB代码\n            ].join('\\n'), 'VBScript');\n\n            var VBMediator = function VBMediator(instance, accessors, name, value) {\n                // jshint ignore:line\n                var accessor = accessors[name];\n                if (arguments.length === 4) {\n                    accessor.set.call(instance, value);\n                } else {\n                    return accessor.get.call(instance);\n                }\n            };\n            createViewModel = function createViewModel(name, accessors, properties) {\n                // jshint ignore:line\n                var buffer = [];\n                buffer.push('\\tPrivate [$vbsetter]', '\\tPublic  [$accessors]', '\\tPublic Default Function [$vbthis](ac' + timeBucket + ', s' + timeBucket + ')', '\\t\\tSet  [$accessors] = ac' + timeBucket + ': set [$vbsetter] = s' + timeBucket, '\\t\\tSet  [$vbthis]    = Me', //链式调用\n                '\\tEnd Function');\n                //添加普通属性,因为VBScript对象不能像JS那样随意增删属性，必须在这里预先定义好\n                var uniq = {\n                    $vbthis: true,\n                    $vbsetter: true,\n                    $accessors: true\n                };\n                for (name in $$skipArray) {\n                    if (!uniq[name]) {\n                        buffer.push('\\tPublic [' + name + ']');\n                        uniq[name] = true;\n                    }\n                }\n                //添加访问器属性 \n                for (name in accessors) {\n                    if (uniq[name]) {\n                        continue;\n                    }\n                    uniq[name] = true;\n                    buffer.push(\n                    //由于不知对方会传入什么,因此set, let都用上\n                    '\\tPublic Property Let [' + name + '](val' + timeBucket + ')', //setter\n                    '\\t\\tCall [$vbsetter](Me, [$accessors], \"' + name + '\", val' + timeBucket + ')', '\\tEnd Property', '\\tPublic Property Set [' + name + '](val' + timeBucket + ')', //setter\n                    '\\t\\tCall [$vbsetter](Me, [$accessors], \"' + name + '\", val' + timeBucket + ')', '\\tEnd Property', '\\tPublic Property Get [' + name + ']', //getter\n                    '\\tOn Error Resume Next', //必须优先使用set语句,否则它会误将数组当字符串返回\n                    '\\t\\tSet[' + name + '] = [$vbsetter](Me, [$accessors],\"' + name + '\")', '\\tIf Err.Number <> 0 Then', '\\t\\t[' + name + '] = [$vbsetter](Me, [$accessors],\"' + name + '\")', '\\tEnd If', '\\tOn Error Goto 0', '\\tEnd Property');\n                }\n\n                for (name in properties) {\n                    if (!uniq[name]) {\n                        uniq[name] = true;\n                        buffer.push('\\tPublic [' + name + ']');\n                    }\n                }\n\n                buffer.push('\\tPublic [hasOwnProperty]');\n                buffer.push('End Class');\n                var body = buffer.join('\\r\\n');\n                var className = VBClassPool[body];\n                if (!className) {\n                    className = avalon.makeHashCode('VBClass');\n                    window.parseVB('Class ' + className + body);\n                    window.parseVB(['Function ' + className + 'Factory(acc, vbm)', //创建实例并传入两个关键的参数\n                    '\\tDim o', '\\tSet o = (New ' + className + ')(acc, vbm)', '\\tSet ' + className + 'Factory = o', 'End Function'].join('\\r\\n'));\n                    VBClassPool[body] = className;\n                }\n                var ret = window[className + 'Factory'](accessors, VBMediator); //得到其产品\n                return ret; //得到其产品\n            };\n        }\n    }\n\n    platform.createViewModel = createViewModel;\n\n    var impDir = avalon.directive('important', {\n        priority: 1,\n        getScope: function getScope(name, scope) {\n            var v = avalon.vmodels[name];\n            if (v) return v;\n            throw 'error! no vmodel called ' + name;\n        },\n        update: function update(node, attrName, $id) {\n            if (!avalon.inBrowser) return;\n            var dom = avalon.vdom(node, 'toDOM');\n            if (dom.nodeType === 1) {\n                dom.removeAttribute(attrName);\n                avalon(dom).removeClass('ms-controller');\n            }\n            var vm = avalon.vmodels[$id];\n            if (vm) {\n                vm.$element = dom;\n                vm.$render = this;\n                vm.$fire('onReady');\n                delete vm.$events.onReady;\n            }\n        }\n    });\n\n    var impCb = impDir.update;\n\n    avalon.directive('controller', {\n        priority: 2,\n        getScope: function getScope(name, scope) {\n            var v = avalon.vmodels[name];\n            if (v) {\n                v.$render = this;\n                if (scope && scope !== v) {\n                    return platform.fuseFactory(scope, v);\n                }\n                return v;\n            }\n            return scope;\n        },\n        update: impCb\n    });\n\n    avalon.directive('skip', {\n        delay: true\n    });\n\n    var arrayWarn = {};\n    var cssDir = avalon.directive('css', {\n        diff: function diff(newVal, oldVal) {\n            if (Object(newVal) === newVal) {\n                newVal = platform.toJson(newVal); //安全的遍历VBscript\n                if (Array.isArray(newVal)) {\n                    //转换成对象\n                    var b = {};\n                    newVal.forEach(function (el) {\n                        el && avalon.shadowCopy(b, el);\n                    });\n                    newVal = b;\n                    if (!arrayWarn[this.type]) {\n                        avalon.warn('ms-' + this.type + '指令的值不建议使用数组形式了！');\n                        arrayWarn[this.type] = 1;\n                    }\n                }\n\n                var hasChange = false;\n                var patch = {};\n                if (!oldVal) {\n                    //如果一开始为空\n                    patch = newVal;\n                    hasChange = true;\n                } else {\n                    if (this.deep) {\n                        var deep = typeof this.deep === 'number' ? this.deep : 6;\n                        for (var i in newVal) {\n                            //diff差异点  \n                            if (!deepEquals(newVal[i], oldVal[i], 4)) {\n                                this.value = newVal;\n                                return true;\n                            }\n                            patch[i] = newVal[i];\n                        }\n                    } else {\n                        for (var _i4 in newVal) {\n                            //diff差异点\n                            if (newVal[_i4] !== oldVal[_i4]) {\n                                hasChange = true;\n                            }\n                            patch[_i4] = newVal[_i4];\n                        }\n                    }\n\n                    for (var _i5 in oldVal) {\n                        if (!(_i5 in patch)) {\n                            hasChange = true;\n                            patch[_i5] = '';\n                        }\n                    }\n                }\n                if (hasChange) {\n                    this.value = patch;\n                    return true;\n                }\n            }\n            return false;\n        },\n        update: function update(vdom, value) {\n\n            var dom = vdom.dom;\n            if (dom && dom.nodeType === 1) {\n                var wrap = avalon(dom);\n                for (var name in value) {\n                    wrap.css(name, value[name]);\n                }\n            }\n        }\n    });\n\n    var cssDiff = cssDir.diff;\n\n    function getEnumerableKeys(obj) {\n        var res = [];\n        for (var key in obj) {\n            res.push(key);\n        }return res;\n    }\n\n    function deepEquals(a, b, level) {\n        if (level === 0) return a === b;\n        if (a === null && b === null) return true;\n        if (a === undefined && b === undefined) return true;\n        var aIsArray = Array.isArray(a);\n        if (aIsArray !== Array.isArray(b)) {\n            return false;\n        }\n        if (aIsArray) {\n            return equalArray(a, b, level);\n        } else if (typeof a === \"object\" && typeof b === \"object\") {\n            return equalObject(a, b, level);\n        }\n        return a === b;\n    }\n\n    function equalArray(a, b, level) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = a.length - 1; i >= 0; i--) {\n            try {\n                if (!deepEquals(a[i], b[i], level - 1)) {\n                    return false;\n                }\n            } catch (noThisPropError) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function equalObject(a, b, level) {\n        if (a === null || b === null) return false;\n        if (getEnumerableKeys(a).length !== getEnumerableKeys(b).length) return false;\n        for (var prop in a) {\n            if (!(prop in b)) return false;\n            try {\n                if (!deepEquals(a[prop], b[prop], level - 1)) {\n                    return false;\n                }\n            } catch (noThisPropError) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * ------------------------------------------------------------\n     * 检测浏览器对CSS动画的支持与API名\n     * ------------------------------------------------------------\n     */\n\n    var checker = {\n        TransitionEvent: 'transitionend',\n        WebKitTransitionEvent: 'webkitTransitionEnd',\n        OTransitionEvent: 'oTransitionEnd',\n        otransitionEvent: 'otransitionEnd'\n    };\n    var css3 = void 0;\n    var tran = void 0;\n    var ani = void 0;\n    var name$2 = void 0;\n    var animationEndEvent = void 0;\n    var transitionEndEvent = void 0;\n    var transition = false;\n    var animation = false;\n    //有的浏览器同时支持私有实现与标准写法，比如webkit支持前两种，Opera支持1、3、4\n    for (name$2 in checker) {\n        if (window$1[name$2]) {\n            tran = checker[name$2];\n            break;\n        }\n        /* istanbul ignore next */\n        try {\n            var a = document.createEvent(name$2);\n            tran = checker[name$2];\n            break;\n        } catch (e) {}\n    }\n    if (typeof tran === 'string') {\n        transition = css3 = true;\n        transitionEndEvent = tran;\n    }\n\n    //animationend有两个可用形态\n    //IE10+, Firefox 16+ & Opera 12.1+: animationend\n    //Chrome/Safari: webkitAnimationEnd\n    //http://blogs.msdn.com/b/davrous/archive/2011/12/06/introduction-to-css3-animat ions.aspx\n    //IE10也可以使用MSAnimationEnd监听，但是回调里的事件 type依然为animationend\n    //  el.addEventListener('MSAnimationEnd', function(e) {\n    //     alert(e.type)// animationend！！！\n    // })\n    checker = {\n        'AnimationEvent': 'animationend',\n        'WebKitAnimationEvent': 'webkitAnimationEnd'\n    };\n    for (name$2 in checker) {\n        if (window$1[name$2]) {\n            ani = checker[name$2];\n            break;\n        }\n    }\n    if (typeof ani === 'string') {\n        animation = css3 = true;\n        animationEndEvent = ani;\n    }\n\n    var effectDir = avalon.directive('effect', {\n        priority: 5,\n        diff: function diff(effect) {\n            var vdom = this.node;\n            if (typeof effect === 'string') {\n                this.value = effect = {\n                    is: effect\n                };\n                avalon.warn('ms-effect的指令值不再支持字符串,必须是一个对象');\n            }\n            this.value = vdom.effect = effect;\n            var ok = cssDiff.call(this, effect, this.oldValue);\n            var me = this;\n            if (ok) {\n                setTimeout(function () {\n                    vdom.animating = true;\n                    effectDir.update.call(me, vdom, vdom.effect);\n                });\n                vdom.animating = false;\n                return true;\n            }\n            return false;\n        },\n\n        update: function update(vdom, change, opts) {\n            var dom = vdom.dom;\n            if (dom && dom.nodeType === 1) {\n                //要求配置对象必须指定is属性，action必须是布尔或enter,leave,move\n                var option = change || opts;\n                var is = option.is;\n\n                var globalOption = avalon.effects[is];\n                if (!globalOption) {\n                    //如果没有定义特效\n                    avalon.warn(is + ' effect is undefined');\n                    return;\n                }\n                var finalOption = {};\n                var action = actionMaps[option.action];\n                if (typeof Effect.prototype[action] !== 'function') {\n                    avalon.warn('action is undefined');\n                    return;\n                }\n                //必须预定义特效\n\n                var effect = new avalon.Effect(dom);\n                avalon.mix(finalOption, globalOption, option, { action: action });\n\n                if (finalOption.queue) {\n                    animationQueue.push(function () {\n                        effect[action](finalOption);\n                    });\n                    callNextAnimation();\n                } else {\n\n                    effect[action](finalOption);\n                }\n                return true;\n            }\n        }\n    });\n\n    var move = 'move';\n    var leave = 'leave';\n    var enter = 'enter';\n    var actionMaps = {\n        'true': enter,\n        'false': leave,\n        enter: enter,\n        leave: leave,\n        move: move,\n        'undefined': enter\n    };\n\n    var animationQueue = [];\n    function callNextAnimation() {\n        var fn = animationQueue[0];\n        if (fn) {\n            fn();\n        }\n    }\n\n    avalon.effects = {};\n    avalon.effect = function (name, opts) {\n        var definition = avalon.effects[name] = opts || {};\n        if (css3 && definition.css !== false) {\n            patchObject(definition, 'enterClass', name + '-enter');\n            patchObject(definition, 'enterActiveClass', definition.enterClass + '-active');\n            patchObject(definition, 'leaveClass', name + '-leave');\n            patchObject(definition, 'leaveActiveClass', definition.leaveClass + '-active');\n        }\n        return definition;\n    };\n\n    function patchObject(obj, name, value) {\n        if (!obj[name]) {\n            obj[name] = value;\n        }\n    }\n\n    var Effect = function Effect(dom) {\n        this.dom = dom;\n    };\n\n    avalon.Effect = Effect;\n\n    Effect.prototype = {\n        enter: createAction('Enter'),\n        leave: createAction('Leave'),\n        move: createAction('Move')\n    };\n\n    function execHooks(options, name, el) {\n        var fns = [].concat(options[name]);\n        for (var i = 0, fn; fn = fns[i++];) {\n            if (typeof fn === 'function') {\n                fn(el);\n            }\n        }\n    }\n    var staggerCache = new Cache(128);\n\n    function createAction(action) {\n        var lower = action.toLowerCase();\n        return function (option) {\n            var dom = this.dom;\n            var elem = avalon(dom);\n            //处理与ms-for指令相关的stagger\n            //========BEGIN=====\n            var staggerTime = isFinite(option.stagger) ? option.stagger * 1000 : 0;\n            if (staggerTime) {\n                if (option.staggerKey) {\n                    var stagger = staggerCache.get(option.staggerKey) || staggerCache.put(option.staggerKey, {\n                        count: 0,\n                        items: 0\n                    });\n                    stagger.count++;\n                    stagger.items++;\n                }\n            }\n            var staggerIndex = stagger && stagger.count || 0;\n            //=======END==========\n            var stopAnimationID;\n            var animationDone = function animationDone(e) {\n                var isOk = e !== false;\n                if (--dom.__ms_effect_ === 0) {\n                    avalon.unbind(dom, transitionEndEvent);\n                    avalon.unbind(dom, animationEndEvent);\n                }\n                clearTimeout(stopAnimationID);\n                var dirWord = isOk ? 'Done' : 'Abort';\n                execHooks(option, 'on' + action + dirWord, dom);\n                if (stagger) {\n                    if (--stagger.items === 0) {\n                        stagger.count = 0;\n                    }\n                }\n                if (option.queue) {\n                    animationQueue.shift();\n                    callNextAnimation();\n                }\n            };\n            //执行开始前的钩子\n            execHooks(option, 'onBefore' + action, dom);\n\n            if (option[lower]) {\n                //使用JS方式执行动画\n                option[lower](dom, function (ok) {\n                    animationDone(ok !== false);\n                });\n            } else if (css3) {\n                //使用CSS3方式执行动画\n                elem.addClass(option[lower + 'Class']);\n                elem.removeClass(getNeedRemoved(option, lower));\n\n                if (!dom.__ms_effect_) {\n                    //绑定动画结束事件\n                    elem.bind(transitionEndEvent, animationDone);\n                    elem.bind(animationEndEvent, animationDone);\n                    dom.__ms_effect_ = 1;\n                } else {\n                    dom.__ms_effect_++;\n                }\n                setTimeout(function () {\n                    //用xxx-active代替xxx类名的方式 触发CSS3动画\n                    var time = avalon.root.offsetWidth === NaN;\n                    elem.addClass(option[lower + 'ActiveClass']);\n                    //计算动画时长\n                    time = getAnimationTime(dom);\n                    if (!time === 0) {\n                        //立即结束动画\n                        animationDone(false);\n                    } else if (!staggerTime) {\n                        //如果动画超出时长还没有调用结束事件,这可能是元素被移除了\n                        //如果强制结束动画\n                        stopAnimationID = setTimeout(function () {\n                            animationDone(false);\n                        }, time + 32);\n                    }\n                }, 17 + staggerTime * staggerIndex); // = 1000/60\n            }\n        };\n    }\n\n    avalon.applyEffect = function (dom, vdom, opts) {\n        var cb = opts.cb;\n        var curEffect = vdom.effect;\n        if (curEffect && dom && dom.nodeType === 1) {\n            var hook = opts.hook;\n            var old = curEffect[hook];\n            if (cb) {\n                if (Array.isArray(old)) {\n                    old.push(cb);\n                } else if (old) {\n                    curEffect[hook] = [old, cb];\n                } else {\n                    curEffect[hook] = [cb];\n                }\n            }\n            getAction(opts);\n            avalon.directives.effect.update(vdom, curEffect, avalon.shadowCopy({}, opts));\n        } else if (cb) {\n            cb(dom);\n        }\n    };\n    /**\n     * 获取方向\n     */\n    function getAction(opts) {\n        if (!opts.action) {\n            return opts.action = opts.hook.replace(/^on/, '').replace(/Done$/, '').toLowerCase();\n        }\n    }\n    /**\n     * 需要移除的类名\n     */\n    function getNeedRemoved(options, name) {\n        var name = name === 'leave' ? 'enter' : 'leave';\n        return Array(name + 'Class', name + 'ActiveClass').map(function (cls) {\n            return options[cls];\n        }).join(' ');\n    }\n    /**\n     * 计算动画长度\n     */\n    var transitionDuration = avalon.cssName('transition-duration');\n    var animationDuration = avalon.cssName('animation-duration');\n    var rsecond = /\\d+s$/;\n    function toMillisecond(str) {\n        var ratio = rsecond.test(str) ? 1000 : 1;\n        return parseFloat(str) * ratio;\n    }\n\n    function getAnimationTime(dom) {\n        var computedStyles = window$1.getComputedStyle(dom, null);\n        var tranDuration = computedStyles[transitionDuration];\n        var animDuration = computedStyles[animationDuration];\n        return toMillisecond(tranDuration) || toMillisecond(animDuration);\n    }\n    /**\n     * \n    <!DOCTYPE html>\n    <html>\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <script src=\"dist/avalon.js\"></script>\n            <script>\n                avalon.effect('animate')\n                var vm = avalon.define({\n                    $id: 'ani',\n                    a: true\n                })\n            </script>\n            <style>\n                .animate-enter, .animate-leave{\n                    width:100px;\n                    height:100px;\n                    background: #29b6f6;\n                    transition:all 2s;\n                    -moz-transition: all 2s; \n                    -webkit-transition: all 2s;\n                    -o-transition:all 2s;\n                }  \n                .animate-enter-active, .animate-leave{\n                    width:300px;\n                    height:300px;\n                }\n                .animate-leave-active{\n                    width:100px;\n                    height:100px;\n                }\n            </style>\n        </head>\n        <body>\n            <div :controller='ani' >\n                <p><input type='button' value='click' :click='@a =!@a'></p>\n                <div :effect=\"{is:'animate',action:@a}\"></div>\n            </div>\n    </body>\n    </html>\n     * \n     */\n\n    var none = 'none';\n    function parseDisplay(elem, val) {\n        //用于取得此类标签的默认display值\n        var doc = elem.ownerDocument;\n        var nodeName = elem.nodeName;\n        var key = '_' + nodeName;\n        if (!parseDisplay[key]) {\n            var temp = doc.body.appendChild(doc.createElement(nodeName));\n            val = avalon.css(temp, 'display');\n            doc.body.removeChild(temp);\n            if (val === none) {\n                val = 'block';\n            }\n            parseDisplay[key] = val;\n        }\n        return parseDisplay[key];\n    }\n\n    avalon.parseDisplay = parseDisplay;\n    avalon.directive('visible', {\n        diff: function diff(newVal, oldVal) {\n            var n = !!newVal;\n            if (oldVal === void 0 || n !== oldVal) {\n                this.value = n;\n                return true;\n            }\n        },\n        ready: true,\n        update: function update(vdom, show) {\n            var dom = vdom.dom;\n            if (dom && dom.nodeType === 1) {\n                var display = dom.style.display;\n                var value;\n                if (show) {\n                    if (display === none) {\n                        value = vdom.displayValue;\n                        if (!value) {\n                            dom.style.display = '';\n                            if (dom.style.cssText === '') {\n                                dom.removeAttribute('style');\n                            }\n                        }\n                    }\n                    if (dom.style.display === '' && avalon(dom).css('display') === none &&\n                    // fix firefox BUG,必须挂到页面上\n                    avalon.contains(dom.ownerDocument, dom)) {\n                        value = parseDisplay(dom);\n                    }\n                } else {\n\n                    if (display !== none) {\n                        value = none;\n                        vdom.displayValue = display;\n                    }\n                }\n                var cb = function cb() {\n                    if (value !== void 0) {\n                        dom.style.display = value;\n                    }\n                };\n\n                avalon.applyEffect(dom, vdom, {\n                    hook: show ? 'onEnterDone' : 'onLeaveDone',\n                    cb: cb\n                });\n            }\n        }\n    });\n\n    avalon.directive('text', {\n        delay: true,\n        init: function init() {\n\n            var node = this.node;\n            if (node.isVoidTag) {\n                avalon.error('自闭合元素不能使用ms-text');\n            }\n            var child = { nodeName: '#text', nodeValue: this.getValue() };\n            node.children.splice(0, node.children.length, child);\n            if (inBrowser) {\n                avalon.clearHTML(node.dom);\n                node.dom.appendChild(avalon.vdom(child, 'toDOM'));\n            }\n            this.node = child;\n            var type = 'expr';\n            this.type = this.name = type;\n            var directive$$1 = avalon.directives[type];\n            var me = this;\n            this.callback = function (value) {\n                directive$$1.update.call(me, me.node, value);\n            };\n        }\n    });\n\n    avalon.directive('expr', {\n        update: function update(vdom, value) {\n            value = value == null || value === '' ? '\\u200B' : value;\n            vdom.nodeValue = value;\n            //https://github.com/RubyLouvre/avalon/issues/1834\n            if (vdom.dom) vdom.dom.data = value;\n        }\n    });\n\n    avalon.directive('attr', {\n        diff: cssDiff,\n        update: function update(vdom, value) {\n            var props = vdom.props;\n            for (var i in value) {\n                if (!!value[i] === false) {\n                    delete props[i];\n                } else {\n                    props[i] = value[i];\n                }\n            }\n            var dom = vdom.dom;\n            if (dom && dom.nodeType === 1) {\n                updateAttrs(dom, value);\n            }\n        }\n    });\n\n    avalon.directive('html', {\n\n        update: function update(vdom, value) {\n            this.beforeDispose();\n\n            this.innerRender = avalon.scan('<div class=\"ms-html-container\">' + value + '</div>', this.vm, function () {\n                var oldRoot = this.root;\n                if (vdom.children) vdom.children.length = 0;\n                vdom.children = oldRoot.children;\n                this.root = vdom;\n                if (vdom.dom) avalon.clearHTML(vdom.dom);\n            });\n        },\n        beforeDispose: function beforeDispose() {\n            if (this.innerRender) {\n                this.innerRender.dispose();\n            }\n        },\n        delay: true\n    });\n\n    avalon.directive('if', {\n        delay: true,\n        priority: 5,\n        init: function init() {\n            this.placeholder = createAnchor('if');\n            var props = this.node.props;\n            delete props['ms-if'];\n            delete props[':if'];\n            this.fragment = avalon.vdom(this.node, 'toHTML');\n        },\n        diff: function diff(newVal, oldVal) {\n            var n = !!newVal;\n            if (oldVal === void 0 || n !== oldVal) {\n                this.value = n;\n                return true;\n            }\n        },\n        update: function update(vdom, value) {\n            if (this.isShow === void 0 && value) {\n                continueScan(this, vdom);\n                return;\n            }\n            this.isShow = value;\n            var placeholder = this.placeholder;\n\n            if (value) {\n                var p = placeholder.parentNode;\n                continueScan(this, vdom);\n                p && p.replaceChild(vdom.dom, placeholder);\n            } else {\n                //移除DOM\n                this.beforeDispose();\n                vdom.nodeValue = 'if';\n                vdom.nodeName = '#comment';\n                delete vdom.children;\n                var dom = vdom.dom;\n                var p = dom && dom.parentNode;\n                vdom.dom = placeholder;\n                if (p) {\n                    p.replaceChild(placeholder, dom);\n                }\n            }\n        },\n        beforeDispose: function beforeDispose() {\n            if (this.innerRender) {\n                this.innerRender.dispose();\n            }\n        }\n    });\n\n    function continueScan(instance, vdom) {\n        var innerRender = instance.innerRender = avalon.scan(instance.fragment, instance.vm);\n        avalon.shadowCopy(vdom, innerRender.root);\n        delete vdom.nodeValue;\n    }\n\n    avalon.directive('on', {\n        beforeInit: function beforeInit() {\n            this.getter = avalon.noop;\n        },\n        init: function init() {\n            var vdom = this.node;\n            var underline = this.name.replace('ms-on-', 'e').replace('-', '_');\n            var uuid = underline + '_' + this.expr.replace(/\\s/g, '').replace(/[^$a-z]/ig, function (e) {\n                return e.charCodeAt(0);\n            });\n            var fn = avalon.eventListeners[uuid];\n            if (!fn) {\n                var arr = addScope(this.expr);\n                var body = arr[0],\n                    filters = arr[1];\n                body = makeHandle(body);\n\n                if (filters) {\n                    filters = filters.replace(/__value__/g, '$event');\n                    filters += '\\nif($event.$return){\\n\\treturn;\\n}';\n                }\n                var ret = ['try{', '\\tvar __vmodel__ = this;', '\\t' + filters, '\\treturn ' + body, '}catch(e){avalon.log(e, \"in on dir\")}'].filter(function (el) {\n                    return (/\\S/.test(el)\n                    );\n                });\n                fn = new Function('$event', ret.join('\\n'));\n                fn.uuid = uuid;\n                avalon.eventListeners[uuid] = fn;\n            }\n\n            var dom = avalon.vdom(vdom, 'toDOM');\n            dom._ms_context_ = this.vm;\n\n            this.eventType = this.param.replace(/\\-(\\d)$/, '');\n            delete this.param;\n            avalon(dom).bind(this.eventType, fn);\n        },\n\n        beforeDispose: function beforeDispose() {\n            avalon(this.node.dom).unbind(this.eventType);\n        }\n    });\n\n    function lookupOption(vdom, values) {\n        vdom.children && vdom.children.forEach(function (el) {\n            if (el.nodeName === 'option') {\n                setOption(el, values);\n            } else {\n                lookupOption(el, values);\n            }\n        });\n    }\n\n    function setOption(vdom, values) {\n        var props = vdom.props;\n        if (!('disabled' in props)) {\n            var value = getOptionValue(vdom, props);\n            value = String(value || '').trim();\n            if (typeof values === 'string') {\n                props.selected = value === values;\n            } else {\n                props.selected = values.indexOf(value) !== -1;\n            }\n\n            if (vdom.dom) {\n                vdom.dom.selected = props.selected;\n                var v = vdom.dom.selected; //必须加上这个,防止移出节点selected失效\n            }\n        }\n    }\n\n    function getOptionValue(vdom, props) {\n        if (props && 'value' in props) {\n            return props.value + '';\n        }\n        var arr = [];\n        vdom.children.forEach(function (el) {\n            if (el.nodeName === '#text') {\n                arr.push(el.nodeValue);\n            } else if (el.nodeName === '#document-fragment') {\n                arr.push(getOptionValue(el));\n            }\n        });\n        return arr.join('');\n    }\n\n    function getSelectedValue(vdom, arr) {\n        vdom.children.forEach(function (el) {\n            if (el.nodeName === 'option') {\n                if (el.props.selected === true) arr.push(getOptionValue(el, el.props));\n            } else if (el.children) {\n                getSelectedValue(el, arr);\n            }\n        });\n        return arr;\n    }\n\n    var updateDataActions = {\n        input: function input(prop) {\n            //处理单个value值处理\n            var field = this;\n            prop = prop || 'value';\n            var dom = field.dom;\n            var rawValue = dom[prop];\n            var parsedValue = field.parseValue(rawValue);\n\n            //有时候parse后一致,vm不会改变,但input里面的值\n            field.value = rawValue;\n            field.setValue(parsedValue);\n            duplexCb(field);\n            var pos = field.pos;\n            /* istanbul ignore if */\n            if (dom.caret) {\n                field.setCaret(dom, pos);\n            }\n            //vm.aaa = '1234567890'\n            //处理 <input ms-duplex='@aaa|limitBy(8)'/>{{@aaa}} 这种格式化同步不一致的情况 \n        },\n        radio: function radio() {\n            var field = this;\n            if (field.isChecked) {\n                var val = !field.value;\n                field.setValue(val);\n                duplexCb(field);\n            } else {\n                updateDataActions.input.call(field);\n                field.value = NaN;\n            }\n        },\n        checkbox: function checkbox() {\n            var field = this;\n            var array = field.value;\n            if (!Array.isArray(array)) {\n                avalon.warn('ms-duplex应用于checkbox上要对应一个数组');\n                array = [array];\n            }\n            var method = field.dom.checked ? 'ensure' : 'remove';\n            if (array[method]) {\n                var val = field.parseValue(field.dom.value);\n                array[method](val);\n                duplexCb(field);\n            }\n            this.__test__ = array;\n        },\n        select: function select() {\n            var field = this;\n            var val = avalon(field.dom).val(); //字符串或字符串数组\n            if (val + '' !== this.value + '') {\n                if (Array.isArray(val)) {\n                    //转换布尔数组或其他\n                    val = val.map(function (v) {\n                        return field.parseValue(v);\n                    });\n                } else {\n                    val = field.parseValue(val);\n                }\n                field.setValue(val);\n                duplexCb(field);\n            }\n        },\n        contenteditable: function contenteditable() {\n            updateDataActions.input.call(this, 'innerHTML');\n        }\n    };\n\n    function duplexCb(field) {\n        if (field.userCb) {\n            field.userCb.call(field.vm, {\n                type: 'changed',\n                target: field.dom\n            });\n        }\n    }\n\n    function updateDataHandle(event) {\n        var elem = this;\n        var field = elem._ms_duplex_;\n        if (elem.composing) {\n            //防止onpropertychange引发爆栈\n            return;\n        }\n        if (elem.value === field.value) {\n            return;\n        }\n        /* istanbul ignore if*/\n        if (elem.caret) {\n            try {\n                var pos = field.getCaret(elem);\n                field.pos = pos;\n            } catch (e) {}\n        }\n        /* istanbul ignore if*/\n        if (field.debounceTime > 4) {\n            var timestamp = new Date();\n            var left = timestamp - field.time || 0;\n            field.time = timestamp;\n            /* istanbul ignore if*/\n            if (left >= field.debounceTime) {\n                updateDataActions[field.dtype].call(field);\n                /* istanbul ignore else*/\n            } else {\n                clearTimeout(field.debounceID);\n                field.debounceID = setTimeout(function () {\n                    updateDataActions[field.dtype].call(field);\n                }, left);\n            }\n        } else if (field.isChanged) {\n            setTimeout(function () {\n                //https://github.com/RubyLouvre/avalon/issues/1908\n                updateDataActions[field.dtype].call(field);\n            }, 4);\n        } else {\n            updateDataActions[field.dtype].call(field);\n        }\n    }\n\n    var rchangeFilter = /\\|\\s*change\\b/;\n    var rdebounceFilter = /\\|\\s*debounce(?:\\(([^)]+)\\))?/;\n    function duplexBeforeInit() {\n        var expr = this.expr;\n        if (rchangeFilter.test(expr)) {\n            this.isChanged = true;\n            expr = expr.replace(rchangeFilter, '');\n        }\n        var match = expr.match(rdebounceFilter);\n        if (match) {\n            expr = expr.replace(rdebounceFilter, '');\n            if (!this.isChanged) {\n                this.debounceTime = parseInt(match[1], 10) || 300;\n            }\n        }\n        this.expr = expr;\n    }\n    function duplexInit() {\n        var expr = this.expr;\n        var node = this.node;\n        var etype = node.props.type;\n        this.parseValue = parseValue;\n        //处理数据转换器\n        var parsers = this.param,\n            dtype;\n        var isChecked = false;\n        parsers = parsers ? parsers.split('-').map(function (a) {\n            if (a === 'checked') {\n                isChecked = true;\n            }\n            return a;\n        }) : [];\n        node.duplex = this;\n        if (rcheckedType.test(etype) && isChecked) {\n            //如果是radio, checkbox,判定用户使用了checked格式函数没有\n            parsers = [];\n            dtype = 'radio';\n            this.isChecked = isChecked;\n        }\n        this.parsers = parsers;\n        if (!/input|textarea|select/.test(node.nodeName)) {\n            if ('contenteditable' in node.props) {\n                dtype = 'contenteditable';\n            }\n        } else if (!dtype) {\n            dtype = node.nodeName === 'select' ? 'select' : etype === 'checkbox' ? 'checkbox' : etype === 'radio' ? 'radio' : 'input';\n        }\n        this.dtype = dtype;\n\n        //判定是否使用了 change debounce 过滤器\n        // this.isChecked = /boolean/.test(parsers)\n        if (dtype !== 'input' && dtype !== 'contenteditable') {\n            delete this.isChanged;\n            delete this.debounceTime;\n        } else if (!this.isChecked) {\n            this.isString = true;\n        }\n\n        var cb = node.props['data-duplex-changed'];\n        if (cb) {\n            var arr = addScope(cb, 'xx');\n            var body = makeHandle(arr[0]);\n            this.userCb = new Function('$event', 'var __vmodel__ = this\\nreturn ' + body);\n        }\n    }\n    function duplexDiff(newVal, oldVal) {\n        if (Array.isArray(newVal)) {\n            if (newVal + '' !== this.compareVal) {\n                this.compareVal = newVal + '';\n                return true;\n            }\n        } else {\n            newVal = this.parseValue(newVal);\n            if (!this.isChecked) {\n                this.value = newVal += '';\n            }\n            if (newVal !== this.compareVal) {\n                this.compareVal = newVal;\n                return true;\n            }\n        }\n    }\n\n    function duplexBind(vdom, addEvent) {\n        var dom = vdom.dom;\n        this.dom = dom;\n        this.vdom = vdom;\n        this.duplexCb = updateDataHandle;\n        dom._ms_duplex_ = this;\n        //绑定事件\n        addEvent(dom, this);\n    }\n\n    var valueHijack = true;\n    try {\n        //#272 IE9-IE11, firefox\n        var setters = {};\n        var aproto = HTMLInputElement.prototype;\n        var bproto = HTMLTextAreaElement.prototype;\n        var newSetter = function newSetter(value) {\n            // jshint ignore:line\n            setters[this.tagName].call(this, value);\n            var data = this._ms_duplex_;\n            if (!this.caret && data && data.isString) {\n                data.duplexCb.call(this, { type: 'setter' });\n            }\n        };\n        var inputProto = HTMLInputElement.prototype;\n        Object.getOwnPropertyNames(inputProto); //故意引发IE6-8等浏览器报错\n        setters['INPUT'] = Object.getOwnPropertyDescriptor(aproto, 'value').set;\n\n        Object.defineProperty(aproto, 'value', {\n            set: newSetter\n        });\n        setters['TEXTAREA'] = Object.getOwnPropertyDescriptor(bproto, 'value').set;\n        Object.defineProperty(bproto, 'value', {\n            set: newSetter\n        });\n        valueHijack = false;\n    } catch (e) {\n        //在chrome 43中 ms-duplex终于不需要使用定时器实现双向绑定了\n        // http://updates.html5rocks.com/2015/04/DOM-attributes-now-on-the-prototype\n        // https://docs.google.com/document/d/1jwA8mtClwxI-QJuHT7872Z0pxpZz8PBkf2bGAbsUtqs/edit?pli=1\n    }\n\n    function parseValue(val) {\n        for (var i = 0, k; k = this.parsers[i++];) {\n            var fn = avalon.parsers[k];\n            if (fn) {\n                val = fn.call(this, val);\n            }\n        }\n        return val;\n    }\n\n    var updateView = {\n        input: function input() {\n            //处理单个value值处理\n            var vdom = this.node;\n            var value = this.value + '';\n            vdom.dom.value = vdom.props.value = value;\n        },\n        updateChecked: function updateChecked(vdom, checked) {\n            if (vdom.dom) {\n                vdom.dom.defaultChecked = vdom.dom.checked = checked;\n            }\n        },\n        radio: function radio() {\n            //处理单个checked属性\n            var node = this.node;\n            var nodeValue = node.props.value;\n            var checked;\n            if (this.isChecked) {\n                checked = !!this.value;\n            } else {\n                checked = this.value + '' === nodeValue;\n            }\n            node.props.checked = checked;\n            updateView.updateChecked(node, checked);\n        },\n        checkbox: function checkbox() {\n            //处理多个checked属性\n            var node = this.node;\n            var props = node.props;\n            var value = props.value + '';\n            var values = [].concat(this.value);\n            var checked = values.some(function (el) {\n                return el + '' === value;\n            });\n\n            props.defaultChecked = props.checked = checked;\n            updateView.updateChecked(node, checked);\n        },\n        select: function select() {\n            //处理子级的selected属性\n            var a = Array.isArray(this.value) ? this.value.map(String) : this.value + '';\n            lookupOption(this.node, a);\n        },\n        contenteditable: function contenteditable() {\n            //处理单个innerHTML \n\n            var vnodes = fromString(this.value);\n            var fragment = createFragment();\n            for (var i = 0, el; el = vnodes[i++];) {\n                var child = avalon.vdom(el, 'toDOM');\n                fragment.appendChild(child);\n            }\n            avalon.clearHTML(this.dom).appendChild(fragment);\n            var list = this.node.children;\n            list.length = 0;\n            Array.prototype.push.apply(list, vnodes);\n\n            this.duplexCb.call(this.dom);\n        }\n    };\n\n    var rforAs = /\\s+as\\s+([$\\w]+)/;\n    var rident = /^[$a-zA-Z_][$a-zA-Z0-9_]*$/;\n    var rinvalid = /^(null|undefined|NaN|window|this|\\$index|\\$id)$/;\n    var rargs = /[$\\w_]+/g;\n    avalon.directive('for', {\n        delay: true,\n        priority: 3,\n        beforeInit: function beforeInit() {\n            var str = this.expr,\n                asName;\n            str = str.replace(rforAs, function (a, b) {\n                /* istanbul ignore if */\n                if (!rident.test(b) || rinvalid.test(b)) {\n                    avalon.error('alias ' + b + ' is invalid --- must be a valid JS identifier which is not a reserved name.');\n                } else {\n                    asName = b;\n                }\n                return '';\n            });\n\n            var arr = str.split(' in ');\n            var kv = arr[0].match(rargs);\n            if (kv.length === 1) {\n                //确保avalon._each的回调有三个参数\n                kv.unshift('$key');\n            }\n            this.expr = arr[1];\n            this.keyName = kv[0];\n            this.valName = kv[1];\n            this.signature = avalon.makeHashCode('for');\n            if (asName) {\n                this.asName = asName;\n            }\n\n            delete this.param;\n        },\n        init: function init() {\n            var cb = this.userCb;\n            if (typeof cb === 'string' && cb) {\n                var arr = addScope(cb, 'for');\n                var body = makeHandle(arr[0]);\n                this.userCb = new Function('$event', 'var __vmodel__ = this\\nreturn ' + body);\n            }\n            this.node.forDir = this; //暴露给component/index.js中的resetParentChildren方法使用\n            this.fragment = ['<div>', this.fragment, '<!--', this.signature, '--></div>'].join('');\n            this.cache = {};\n        },\n        diff: function diff(newVal, oldVal) {\n            /* istanbul ignore if */\n            if (this.updating) {\n                return;\n            }\n            this.updating = true;\n            var traceIds = createFragments(this, newVal);\n\n            if (this.oldTrackIds === void 0) return true;\n\n            if (this.oldTrackIds !== traceIds) {\n                this.oldTrackIds = traceIds;\n                return true;\n            }\n        },\n        update: function update() {\n\n            if (!this.preFragments) {\n                this.fragments = this.fragments || [];\n                mountList(this);\n            } else {\n                diffList(this);\n                updateList(this);\n            }\n\n            if (this.userCb) {\n                var me = this;\n                setTimeout(function () {\n                    me.userCb.call(me.vm, {\n                        type: 'rendered',\n                        target: me.begin.dom,\n                        signature: me.signature\n                    });\n                }, 0);\n            }\n            delete this.updating;\n        },\n        beforeDispose: function beforeDispose() {\n            this.fragments.forEach(function (el) {\n                el.dispose();\n            });\n        }\n    });\n\n    function getTraceKey(item) {\n        var type = typeof item;\n        return item && type === 'object' ? item.$hashcode : type + ':' + item;\n    }\n\n    //创建一组fragment的虚拟DOM\n    function createFragments(instance, obj) {\n        if (isObject(obj)) {\n            var array = Array.isArray(obj);\n            var ids = [];\n            var fragments = [],\n                i = 0;\n\n            instance.isArray = array;\n            if (instance.fragments) {\n                instance.preFragments = instance.fragments;\n                avalon.each(obj, function (key, value) {\n                    var k = array ? getTraceKey(value) : key;\n\n                    fragments.push({\n                        key: k,\n                        val: value,\n                        index: i++\n                    });\n                    ids.push(k);\n                });\n                instance.fragments = fragments;\n            } else {\n                avalon.each(obj, function (key, value) {\n                    if (!(key in $$skipArray)) {\n                        var k = array ? getTraceKey(value) : key;\n                        fragments.push(new VFragment([], k, value, i++));\n                        ids.push(k);\n                    }\n                });\n                instance.fragments = fragments;\n            }\n            return ids.join(';;');\n        } else {\n            return NaN;\n        }\n    }\n\n    function mountList(instance) {\n        var args = instance.fragments.map(function (fragment, index) {\n            FragmentDecorator(fragment, instance, index);\n            saveInCache(instance.cache, fragment);\n            return fragment;\n        });\n        var list = instance.parentChildren;\n        var i = list.indexOf(instance.begin);\n        list.splice.apply(list, [i + 1, 0].concat(args));\n    }\n\n    function diffList(instance) {\n        var cache = instance.cache;\n        var newCache = {};\n        var fuzzy = [];\n        var list = instance.preFragments;\n\n        list.forEach(function (el) {\n            el._dispose = true;\n        });\n\n        instance.fragments.forEach(function (c, index) {\n            var fragment = isInCache(cache, c.key);\n            //取出之前的文档碎片\n            if (fragment) {\n                delete fragment._dispose;\n                fragment.oldIndex = fragment.index;\n                fragment.index = index; // 相当于 c.index\n\n                resetVM(fragment.vm, instance.keyName);\n                fragment.vm[instance.valName] = c.val;\n                fragment.vm[instance.keyName] = instance.isArray ? index : fragment.key;\n                saveInCache(newCache, fragment);\n            } else {\n                //如果找不到就进行模糊搜索\n                fuzzy.push(c);\n            }\n        });\n        fuzzy.forEach(function (c) {\n            var fragment = fuzzyMatchCache(cache, c.key);\n            if (fragment) {\n                //重复利用\n                fragment.oldIndex = fragment.index;\n                fragment.key = c.key;\n                var val = fragment.val = c.val;\n                var index = fragment.index = c.index;\n\n                fragment.vm[instance.valName] = val;\n                fragment.vm[instance.keyName] = instance.isArray ? index : fragment.key;\n                delete fragment._dispose;\n            } else {\n\n                c = new VFragment([], c.key, c.val, c.index);\n                fragment = FragmentDecorator(c, instance, c.index);\n                list.push(fragment);\n            }\n            saveInCache(newCache, fragment);\n        });\n\n        instance.fragments = list;\n        list.sort(function (a, b) {\n            return a.index - b.index;\n        });\n        instance.cache = newCache;\n    }\n\n    function resetVM(vm, a, b) {\n        if (avalon.config.inProxyMode) {\n            vm.$accessors[a].value = NaN;\n        } else {\n            vm.$accessors[a].set(NaN);\n        }\n    }\n\n    function updateList(instance) {\n        var before = instance.begin.dom;\n        var parent = before.parentNode;\n        var list = instance.fragments;\n        var end = instance.end.dom;\n\n        for (var i = 0, item; item = list[i]; i++) {\n            if (item._dispose) {\n                list.splice(i, 1);\n                i--;\n                item.dispose();\n                continue;\n            }\n            if (item.oldIndex !== item.index) {\n                var f = item.toFragment();\n                var isEnd = before.nextSibling === null;\n                parent.insertBefore(f, before.nextSibling);\n                if (isEnd && !parent.contains(end)) {\n                    parent.insertBefore(end, before.nextSibling);\n                }\n            }\n            before = item.split;\n        }\n        var ch = instance.parentChildren;\n        var startIndex = ch.indexOf(instance.begin);\n        var endIndex = ch.indexOf(instance.end);\n\n        list.splice.apply(ch, [startIndex + 1, endIndex - startIndex].concat(list));\n        if (parent.nodeName === 'SELECT' && parent._ms_duplex_) {\n            updateView['select'].call(parent._ms_duplex_);\n        }\n    }\n\n    /**\n     * \n     * @param {type} fragment\n     * @param {type} this\n     * @param {type} index\n     * @returns { key, val, index, oldIndex, this, dom, split, vm}\n     */\n    function FragmentDecorator(fragment, instance, index) {\n        var data = {};\n        data[instance.keyName] = instance.isArray ? index : fragment.key;\n        data[instance.valName] = fragment.val;\n        if (instance.asName) {\n            data[instance.asName] = instance.value;\n        }\n        var vm = fragment.vm = platform.itemFactory(instance.vm, {\n            data: data\n        });\n        if (instance.isArray) {\n            vm.$watch(instance.valName, function (a) {\n                if (instance.value && instance.value.set) {\n                    instance.value.set(vm[instance.keyName], a);\n                }\n            });\n        } else {\n            vm.$watch(instance.valName, function (a) {\n                instance.value[fragment.key] = a;\n            });\n        }\n\n        fragment.index = index;\n        fragment.innerRender = avalon.scan(instance.fragment, vm, function () {\n            var oldRoot = this.root;\n            ap.push.apply(fragment.children, oldRoot.children);\n            this.root = fragment;\n        });\n        return fragment;\n    }\n    // 新位置: 旧位置\n    function isInCache(cache, id) {\n        var c = cache[id];\n        if (c) {\n            var arr = c.arr;\n            /* istanbul ignore if*/\n            if (arr) {\n                var r = arr.pop();\n                if (!arr.length) {\n                    c.arr = 0;\n                }\n                return r;\n            }\n            delete cache[id];\n            return c;\n        }\n    }\n    //[1,1,1] number1 number1_ number1__\n    function saveInCache(cache, component) {\n        var trackId = component.key;\n        if (!cache[trackId]) {\n            cache[trackId] = component;\n        } else {\n            var c = cache[trackId];\n            var arr = c.arr || (c.arr = []);\n            arr.push(component);\n        }\n    }\n\n    function fuzzyMatchCache(cache) {\n        var key;\n        for (var id in cache) {\n            var key = id;\n            break;\n        }\n        if (key) {\n            return isInCache(cache, key);\n        }\n    }\n\n    //根据VM的属性值或表达式的值切换类名，ms-class='xxx yyy zzz:flag'\n    //http://www.cnblogs.com/rubylouvre/archive/2012/12/17/2818540.html\n    function classNames() {\n        var classes = [];\n        for (var i = 0; i < arguments.length; i++) {\n            var arg = arguments[i];\n            var argType = typeof arg;\n            if (argType === 'string' || argType === 'number' || arg === true) {\n                classes.push(arg);\n            } else if (Array.isArray(arg)) {\n                classes.push(classNames.apply(null, arg));\n            } else if (argType === 'object') {\n                for (var key in arg) {\n                    if (arg.hasOwnProperty(key) && arg[key]) {\n                        classes.push(key);\n                    }\n                }\n            }\n        }\n\n        return classes.join(' ');\n    }\n\n    avalon.directive('class', {\n        diff: function diff(newVal, oldVal) {\n            var type = this.type;\n            var vdom = this.node;\n            var classEvent = vdom.classEvent || {};\n            if (type === 'hover') {\n                //在移出移入时切换类名\n                classEvent.mouseenter = activateClass;\n                classEvent.mouseleave = abandonClass;\n            } else if (type === 'active') {\n                //在获得焦点时切换类名\n                classEvent.tabIndex = vdom.props.tabindex || -1;\n                classEvent.mousedown = activateClass;\n                classEvent.mouseup = abandonClass;\n                classEvent.mouseleave = abandonClass;\n            }\n            vdom.classEvent = classEvent;\n\n            var className = classNames(newVal);\n\n            if (typeof oldVal === void 0 || oldVal !== className) {\n                this.value = className;\n\n                vdom['change-' + type] = className;\n                return true;\n            }\n        },\n        update: function update(vdom, value) {\n            var dom = vdom.dom;\n            if (dom && dom.nodeType == 1) {\n\n                var dirType = this.type;\n                var change = 'change-' + dirType;\n                var classEvent = vdom.classEvent;\n                if (classEvent) {\n                    for (var i in classEvent) {\n                        if (i === 'tabIndex') {\n                            dom[i] = classEvent[i];\n                        } else {\n                            avalon.bind(dom, i, classEvent[i]);\n                        }\n                    }\n                    vdom.classEvent = {};\n                }\n                var names = ['class', 'hover', 'active'];\n                names.forEach(function (type) {\n                    if (dirType !== type) return;\n                    if (type === 'class') {\n                        dom && setClass(dom, value);\n                    } else {\n                        var oldClass = dom.getAttribute(change);\n                        if (oldClass) {\n                            avalon(dom).removeClass(oldClass);\n                        }\n                        var name = 'change-' + type;\n                        dom.setAttribute(name, value);\n                    }\n                });\n            }\n        }\n    });\n\n    directives.active = directives.hover = directives['class'];\n\n    var classMap = {\n        mouseenter: 'change-hover',\n        mouseleave: 'change-hover',\n        mousedown: 'change-active',\n        mouseup: 'change-active'\n    };\n\n    function activateClass(e) {\n        var elem = e.target;\n        avalon(elem).addClass(elem.getAttribute(classMap[e.type]) || '');\n    }\n\n    function abandonClass(e) {\n        var elem = e.target;\n        var name = classMap[e.type];\n        avalon(elem).removeClass(elem.getAttribute(name) || '');\n        if (name !== 'change-active') {\n            avalon(elem).removeClass(elem.getAttribute('change-active') || '');\n        }\n    }\n\n    function setClass(dom, neo) {\n        var old = dom.getAttribute('change-class');\n        if (old !== neo) {\n            avalon(dom).removeClass(old).addClass(neo);\n            dom.setAttribute('change-class', neo);\n        }\n    }\n\n    getLongID(activateClass);\n    getLongID(abandonClass);\n\n    /* \n     * 通过绑定事件同步vmodel\n     * 总共有三种方式同步视图\n     * 1. 各种事件 input, change, click, propertychange, keydown...\n     * 2. value属性重写\n     * 3. 定时器轮询\n     */\n\n    function updateDataEvents(dom, data) {\n        var events = {};\n        //添加需要监听的事件\n        switch (data.dtype) {\n            case 'radio':\n            case 'checkbox':\n                events.click = updateDataHandle;\n                break;\n            case 'select':\n                events.change = updateDataHandle;\n                break;\n            case 'contenteditable':\n                /* istanbul ignore if */\n                if (data.isChanged) {\n                    events.blur = updateDataHandle;\n                    /* istanbul ignore else */\n                } else {\n                    /* istanbul ignore if*/\n\n                    if (avalon.modern) {\n                        if (window$1.webkitURL) {\n                            // http://code.metager.de/source/xref/WebKit/LayoutTests/fast/events/\n                            // https://bugs.webkit.org/show_bug.cgi?id=110742\n                            events.webkitEditableContentChanged = updateDataHandle;\n                        } else if (window$1.MutationEvent) {\n                            events.DOMCharacterDataModified = updateDataHandle;\n                        }\n                        events.input = updateDataHandle;\n                        /* istanbul ignore else */\n                    } else {\n                        events.keydown = updateModelKeyDown;\n                        events.paste = updateModelDelay;\n                        events.cut = updateModelDelay;\n                        events.focus = closeComposition;\n                        events.blur = openComposition;\n                    }\n                }\n                break;\n            case 'input':\n                /* istanbul ignore if */\n                if (data.isChanged) {\n                    events.change = updateDataHandle;\n                    /* istanbul ignore else */\n                } else {\n                    //http://www.cnblogs.com/rubylouvre/archive/2013/02/17/2914604.html\n                    //http://www.matts411.com/post/internet-explorer-9-oninput/\n                    if (msie$1 < 10) {\n                        //IE6-8的propertychange有问题,第一次用JS修改值时不会触发,而且你是全部清空value也不会触发\n                        //IE9的propertychange不支持自动完成,退格,删除,复制,贴粘,剪切或点击右边的小X的清空操作\n                        events.propertychange = updateModelHack;\n                        events.paste = updateModelDelay;\n                        events.cut = updateModelDelay;\n                        //IE9在第一次删除字符时不会触发oninput\n                        events.keyup = updateModelKeyDown;\n                    } else {\n                        events.input = updateDataHandle;\n                        events.compositionstart = openComposition;\n                        //微软拼音输入法的问题需要在compositionend事件中处理\n                        events.compositionend = closeComposition;\n                        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\n                        //处理低版本的标准浏览器,通过Int8Array进行区分\n                        if (!/\\[native code\\]/.test(window$1.Int8Array)) {\n                            events.keydown = updateModelKeyDown; //safari < 5 opera < 11\n                            events.paste = updateModelDelay; //safari < 5\n                            events.cut = updateModelDelay; //safari < 5 \n                            if (window$1.netscape) {\n                                // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                                events.DOMAutoComplete = updateDataHandle;\n                            }\n                        }\n                    }\n                }\n                break;\n        }\n\n        if (/password|text/.test(dom.type)) {\n            events.focus = openCaret; //判定是否使用光标修正功能 \n            events.blur = closeCaret;\n            data.getCaret = getCaret;\n            data.setCaret = setCaret;\n        }\n\n        for (var name in events) {\n            avalon.bind(dom, name, events[name]);\n        }\n    }\n\n    function updateModelHack(e) {\n        if (e.propertyName === 'value') {\n            updateDataHandle.call(this, e);\n        }\n    }\n\n    function updateModelDelay(e) {\n        var elem = this;\n        setTimeout(function () {\n            updateDataHandle.call(elem, e);\n        }, 0);\n    }\n\n    function openCaret() {\n        this.caret = true;\n    }\n    /* istanbul ignore next */\n    function closeCaret() {\n        this.caret = false;\n    }\n    /* istanbul ignore next */\n    function openComposition() {\n        this.composing = true;\n    }\n    /* istanbul ignore next */\n    function closeComposition(e) {\n        this.composing = false;\n        updateModelDelay.call(this, e);\n    }\n    /* istanbul ignore next */\n    function updateModelKeyDown(e) {\n        var key = e.keyCode;\n        // ignore\n        //    command            modifiers                   arrows\n        if (key === 91 || 15 < key && key < 19 || 37 <= key && key <= 40) return;\n        updateDataHandle.call(this, e);\n    }\n\n    getShortID(openCaret);\n    getShortID(closeCaret);\n    getShortID(openComposition);\n    getShortID(closeComposition);\n    getShortID(updateDataHandle);\n    getShortID(updateModelHack);\n    getShortID(updateModelDelay);\n    getShortID(updateModelKeyDown);\n\n    //IE6-8要处理光标时需要异步\n    var mayBeAsync = function mayBeAsync(fn) {\n        setTimeout(fn, 0);\n    };\n    /* istanbul ignore next */\n    function setCaret(target, cursorPosition) {\n        var range$$1;\n        if (target.createTextRange) {\n            mayBeAsync(function () {\n                target.focus();\n                range$$1 = target.createTextRange();\n                range$$1.collapse(true);\n                range$$1.moveEnd('character', cursorPosition);\n                range$$1.moveStart('character', cursorPosition);\n                range$$1.select();\n            });\n        } else {\n            target.focus();\n            if (target.selectionStart !== undefined) {\n                target.setSelectionRange(cursorPosition, cursorPosition);\n            }\n        }\n    }\n    /* istanbul ignore next*/\n    function getCaret(target) {\n        var start = 0;\n        var normalizedValue;\n        var range$$1;\n        var textInputRange;\n        var len;\n        var endRange;\n\n        if (target.selectionStart + target.selectionEnd > -1) {\n            start = target.selectionStart;\n        } else {\n            range$$1 = document$1.selection.createRange();\n\n            if (range$$1 && range$$1.parentElement() === target) {\n                len = target.value.length;\n                normalizedValue = target.value.replace(/\\r\\n/g, '\\n');\n\n                textInputRange = target.createTextRange();\n                textInputRange.moveToBookmark(range$$1.getBookmark());\n\n                endRange = target.createTextRange();\n                endRange.collapse(false);\n\n                if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {\n                    start = len;\n                } else {\n                    start = -textInputRange.moveStart('character', -len);\n                    start += normalizedValue.slice(0, start).split('\\n').length - 1;\n                }\n            }\n        }\n\n        return start;\n    }\n\n    avalon.directive('duplex', {\n        priority: 9999999,\n        beforeInit: duplexBeforeInit,\n        init: duplexInit,\n        diff: duplexDiff,\n        update: function update(vdom, value) {\n            if (!this.dom) {\n                duplexBind.call(this, vdom, updateDataEvents);\n            }\n            //如果不支持input.value的Object.defineProperty的属性支持,\n            //需要通过轮询同步, chrome 42及以下版本需要这个hack\n            pollValue.call(this, avalon.msie, valueHijack);\n            //更新视图\n\n            updateView[this.dtype].call(this);\n        }\n    });\n\n    function pollValue(isIE, valueHijack$$1) {\n        var dom = this.dom;\n        if (this.isString && valueHijack$$1 && !isIE && !dom.valueHijack) {\n            dom.valueHijack = updateDataHandle;\n            var intervalID = setInterval(function () {\n                if (!avalon.contains(avalon.root, dom)) {\n                    clearInterval(intervalID);\n                } else {\n                    dom.valueHijack({ type: 'poll' });\n                }\n            }, 30);\n            return intervalID;\n        }\n    }\n    avalon.__pollValue = pollValue; //export to test\n    /* istanbul ignore if */\n    if (avalon.msie < 8) {\n        var oldUpdate = updateView.updateChecked;\n        updateView.updateChecked = function (vdom, checked) {\n            var dom = vdom.dom;\n            if (dom) {\n                setTimeout(function () {\n                    oldUpdate(vdom, checked);\n                    dom.firstCheckedIt = 1;\n                }, dom.firstCheckedIt ? 31 : 16);\n                //IE6,7 checkbox, radio是使用defaultChecked控制选中状态，\n                //并且要先设置defaultChecked后设置checked\n                //并且必须设置延迟(因为必须插入DOM树才生效)\n            }\n        };\n    }\n\n    avalon.directive('rules', {\n        diff: function diff(rules) {\n            if (isObject(rules)) {\n                var vdom = this.node;\n                vdom.rules = platform.toJson(rules);\n                return true;\n            }\n        }\n    });\n    function isRegExp(value) {\n        return avalon.type(value) === 'regexp';\n    }\n    var rmail = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/i;\n    var rurl = /^(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\n    function isCorrectDate(value) {\n        if (typeof value === \"string\" && value) {\n            //是字符串但不能是空字符\n            var arr = value.split(\"-\"); //可以被-切成3份，并且第1个是4个字符\n            if (arr.length === 3 && arr[0].length === 4) {\n                var year = ~~arr[0]; //全部转换为非负整数\n                var month = ~~arr[1] - 1;\n                var date = ~~arr[2];\n                var d = new Date(year, month, date);\n                return d.getFullYear() === year && d.getMonth() === month && d.getDate() === date;\n            }\n        }\n        return false;\n    }\n    //https://github.com/adform/validator.js/blob/master/validator.js\n    avalon.shadowCopy(avalon.validators, {\n        pattern: {\n            message: '必须匹配{{pattern}}这样的格式',\n            get: function get(value, field, next) {\n                var elem = field.dom;\n                var data = field.data;\n                if (!isRegExp(data.pattern)) {\n                    var h5pattern = elem.getAttribute(\"pattern\");\n                    data.pattern = new RegExp('^(?:' + h5pattern + ')$');\n                }\n                next(data.pattern.test(value));\n                return value;\n            }\n        },\n        digits: {\n            message: '必须整数',\n            get: function get(value, field, next) {\n                //整数\n                next(/^\\-?\\d+$/.test(value));\n                return value;\n            }\n        },\n        number: {\n            message: '必须数字',\n            get: function get(value, field, next) {\n                //数值\n                next(!!value && isFinite(value)); // isFinite('') --> true\n                return value;\n            }\n        },\n        norequired: {\n            message: '',\n            get: function get(value, field, next) {\n                next(true);\n                return value;\n            }\n        },\n        required: {\n            message: '必须填写',\n            get: function get(value, field, next) {\n                next(value !== '');\n                return value;\n            }\n        },\n        equalto: {\n            message: '密码输入不一致',\n            get: function get(value, field, next) {\n                var id = String(field.data.equalto);\n                var other = avalon(document.getElementById(id)).val() || \"\";\n                next(value === other);\n                return value;\n            }\n        },\n        date: {\n            message: '日期格式不正确',\n            get: function get(value, field, next) {\n                var data = field.data;\n                if (isRegExp(data.date)) {\n                    next(data.date.test(value));\n                } else {\n                    next(isCorrectDate(value));\n                }\n                return value;\n            }\n        },\n        url: {\n            message: 'URL格式不正确',\n            get: function get(value, field, next) {\n                next(rurl.test(value));\n                return value;\n            }\n        },\n        email: {\n            message: 'email格式不正确',\n            get: function get(value, field, next) {\n                next(rmail.test(value));\n                return value;\n            }\n        },\n        minlength: {\n            message: '最少输入{{minlength}}个字',\n            get: function get(value, field, next) {\n                var num = parseInt(field.data.minlength, 10);\n                next(value.length >= num);\n                return value;\n            }\n        },\n        maxlength: {\n            message: '最多输入{{maxlength}}个字',\n            get: function get(value, field, next) {\n                var num = parseInt(field.data.maxlength, 10);\n                next(value.length <= num);\n                return value;\n            }\n        },\n        min: {\n            message: '输入值不能小于{{min}}',\n            get: function get(value, field, next) {\n                var num = parseInt(field.data.min, 10);\n                next(parseFloat(value) >= num);\n                return value;\n            }\n        },\n        max: {\n            message: '输入值不能大于{{max}}',\n            get: function get(value, field, next) {\n                var num = parseInt(field.data.max, 10);\n                next(parseFloat(value) <= num);\n                return value;\n            }\n        },\n        chs: {\n            message: '必须是中文字符',\n            get: function get(value, field, next) {\n                next(/^[\\u4e00-\\u9fa5]+$/.test(value));\n                return value;\n            }\n        }\n    });\n\n    var valiDir = avalon.directive('validate', {\n        diff: function diff(validator) {\n            var vdom = this.node;\n            if (vdom.validator) {\n                return;\n            }\n            if (isObject(validator)) {\n                //注意，这个Form标签的虚拟DOM有两个验证对象\n                //一个是vmValidator，它是用户VM上的那个原始子对象，也是一个VM\n                //一个是validator，它是vmValidator.$model， 这是为了防止IE6－8添加子属性时添加的hack\n                //也可以称之为safeValidate\n                vdom.validator = validator;\n                validator = platform.toJson(validator);\n                validator.vdom = vdom;\n                validator.dom = vdom.dom;\n\n                for (var name in valiDir.defaults) {\n                    if (!validator.hasOwnProperty(name)) {\n                        validator[name] = valiDir.defaults[name];\n                    }\n                }\n                validator.fields = validator.fields || [];\n                vdom.vmValidator = validator;\n                return true;\n            }\n        },\n        update: function update(vdom) {\n\n            var vmValidator = vdom.vmValidator;\n            var validator = vdom.validator;\n            var dom = vdom.dom;\n            dom._ms_validate_ = vmValidator;\n\n            collectFeild(vdom.children, vmValidator.fields, vmValidator);\n            var type = window.netscape ? 'keypress' : 'focusin';\n            avalon.bind(document, type, findValidator);\n            //为了方便用户手动执行验证，我们需要为原始vmValidate上添加一个onManual方法\n            function onManual() {\n                var v = this;\n                v && valiDir.validateAll.call(v, v.onValidateAll);\n            }\n\n            try {\n                var fn = vmValidator.onManual = onManual.bind(vmValidator);\n                validator.onManual = fn;\n            } catch (e) {\n                avalon.warn('要想使用onManual方法，必须在validate对象预定义一个空的onManual函数');\n            }\n            delete vdom.vmValidator;\n\n            dom.setAttribute('novalidate', 'novalidate');\n\n            /* istanbul ignore if */\n            if (vmValidator.validateAllInSubmit) {\n                avalon.bind(dom, 'submit', validateAllInSubmitFn);\n            }\n        },\n        validateAll: function validateAll(callback) {\n            var validator = this;\n            var vdom = this.vdom;\n            var fields = validator.fields = [];\n            collectFeild(vdom.children, fields, validator);\n            var fn = typeof callback === 'function' ? callback : validator.onValidateAll;\n            var promises = validator.fields.filter(function (field) {\n                var el = field.dom;\n                return el && !el.disabled && validator.dom.contains(el);\n            }).map(function (field) {\n                return valiDir.validate(field, true);\n            });\n            var uniq = {};\n            return Promise.all(promises).then(function (array) {\n                var reasons = array.concat.apply([], array);\n                if (validator.deduplicateInValidateAll) {\n                    reasons = reasons.filter(function (reason) {\n                        var el = reason.element;\n                        var uuid = el.uniqueID || (el.uniqueID = setTimeout('1'));\n                        if (uniq[uuid]) {\n                            return false;\n                        } else {\n                            return uniq[uuid] = true;\n                        }\n                    });\n                }\n                fn.call(vdom.dom, reasons); //这里只放置未通过验证的组件\n            });\n        },\n\n        validate: function validate(field, isValidateAll, event) {\n\n            var promises = [];\n            var value = field.value;\n            var elem = field.dom;\n            /* istanbul ignore if */\n            if (typeof Promise !== 'function') {\n                //avalon-promise不支持phantomjs\n                avalon.warn('浏览器不支持原生Promise,请下载并<script src=url>引入\\nhttps://github.com/RubyLouvre/avalon/blob/master/test/promise.js');\n            }\n            /* istanbul ignore if */\n            if (elem.disabled) return;\n            var rules = field.vdom.rules;\n            var ngs = [],\n                isOk = true;\n            if (!(rules.norequired && value === '')) {\n                for (var ruleName in rules) {\n                    var ruleValue = rules[ruleName];\n                    if (ruleValue === false) continue;\n                    var hook = avalon.validators[ruleName];\n                    var resolve;\n                    promises.push(new Promise(function (a, b) {\n                        resolve = a;\n                    }));\n                    var next = function next(a) {\n                        var reason = {\n                            element: elem,\n                            data: field.data,\n                            message: elem.getAttribute('data-' + ruleName + '-message') || elem.getAttribute('data-message') || hook.message,\n                            validateRule: ruleName,\n                            getMessage: getMessage\n                        };\n                        if (a) {\n                            resolve(true);\n                        } else {\n                            isOk = false;\n                            ngs.push(reason);\n                            resolve(false);\n                        }\n                    };\n                    field.data = {};\n                    field.data[ruleName] = ruleValue;\n                    hook.get(value, field, next);\n                }\n            }\n\n            //如果promises不为空，说明经过验证拦截器\n            return Promise.all(promises).then(function (array) {\n                if (!isValidateAll) {\n                    var validator = field.validator;\n                    if (isOk) {\n                        validator.onSuccess.call(elem, [{\n                            data: field.data,\n                            element: elem\n                        }], event);\n                    } else {\n                        validator.onError.call(elem, ngs, event);\n                    }\n                    validator.onComplete.call(elem, ngs, event);\n                }\n                return ngs;\n            });\n        }\n    });\n\n    //https://github.com/RubyLouvre/avalon/issues/1977\n    function getValidate(dom) {\n        while (dom.tagName !== 'FORM') {\n            dom = dom.parentNode;\n        }\n        return dom._ms_validate_;\n    }\n\n    function validateAllInSubmitFn(e) {\n        e.preventDefault();\n        var v = getValidate(e.target);\n        if (v && v.onManual) {\n            v.onManual();\n        }\n    }\n\n    function collectFeild(nodes, fields, validator) {\n        for (var i = 0, vdom; vdom = nodes[i++];) {\n            var duplex = vdom.rules && vdom.duplex;\n            if (duplex) {\n                fields.push(duplex);\n                bindValidateEvent(duplex, validator);\n            } else if (vdom.children) {\n                collectFeild(vdom.children, fields, validator);\n            } else if (Array.isArray(vdom)) {\n                collectFeild(vdom, fields, validator);\n            }\n        }\n    }\n\n    function findValidator(e) {\n        var dom = e.target;\n        var duplex = dom._ms_duplex_;\n        var vdom = (duplex || {}).vdom;\n        if (duplex && vdom.rules && !duplex.validator) {\n            var msValidator = getValidate(dom);\n            if (msValidator && avalon.Array.ensure(msValidator.fields, duplex)) {\n                bindValidateEvent(duplex, msValidator);\n            }\n        }\n    }\n\n    function singleValidate(e) {\n        var dom = e.target;\n        var duplex = dom._ms_duplex_;\n        var msValidator = getValidate(e.target);\n        msValidator && msValidator.validate(duplex, 0, e);\n    }\n\n    function bindValidateEvent(field, validator) {\n\n        var node = field.dom;\n        if (field.validator) {\n            return;\n        }\n        field.validator = validator;\n        /* istanbul ignore if */\n        if (validator.validateInKeyup && !field.isChanged && !field.debounceTime) {\n            avalon.bind(node, 'keyup', singleValidate);\n        }\n        /* istanbul ignore if */\n        if (validator.validateInBlur) {\n            avalon.bind(node, 'blur', singleValidate);\n        }\n        /* istanbul ignore if */\n        if (validator.resetInFocus) {\n            avalon.bind(node, 'focus', function (e) {\n                var dom = e.target;\n                var field = dom._ms_duplex_;\n                var validator = getValidate(e.target);\n                validator && validator.onReset.call(dom, e, field);\n            });\n        }\n    }\n    var rformat = /\\\\?{{([^{}]+)\\}}/gm;\n\n    function getMessage() {\n        var data = this.data || {};\n        return this.message.replace(rformat, function (_, name) {\n            return data[name] == null ? '' : data[name];\n        });\n    }\n    valiDir.defaults = {\n        validate: valiDir.validate,\n        onError: avalon.noop,\n        onSuccess: avalon.noop,\n        onComplete: avalon.noop,\n        onManual: avalon.noop,\n        onReset: avalon.noop,\n        onValidateAll: avalon.noop,\n        validateInBlur: true, //@config {Boolean} true，在blur事件中进行验证,触发onSuccess, onError, onComplete回调\n        validateInKeyup: true, //@config {Boolean} true，在keyup事件中进行验证,触发onSuccess, onError, onComplete回调\n        validateAllInSubmit: true, //@config {Boolean} true，在submit事件中执行onValidateAll回调\n        resetInFocus: true, //@config {Boolean} true，在focus事件中执行onReset回调,\n        deduplicateInValidateAll: false //@config {Boolean} false，在validateAll回调中对reason数组根据元素节点进行去重\n    };\n\n    /**\n     * 一个directive装饰器\n     * @returns {directive}\n     */\n    // DirectiveDecorator(scope, binding, vdom, this)\n    // Decorator(vm, options, callback)\n    function Directive(vm, binding, vdom, render) {\n        var type = binding.type;\n        var decorator = avalon.directives[type];\n        if (inBrowser) {\n            var dom = avalon.vdom(vdom, 'toDOM');\n            if (dom.nodeType === 1) {\n                dom.removeAttribute(binding.attrName);\n            }\n            vdom.dom = dom;\n        }\n        var callback = decorator.update ? function (value) {\n            if (!render.mount && /css|visible|duplex/.test(type)) {\n                render.callbacks.push(function () {\n                    decorator.update.call(directive$$1, directive$$1.node, value);\n                });\n            } else {\n                decorator.update.call(directive$$1, directive$$1.node, value);\n            }\n        } : avalon.noop;\n        for (var key in decorator) {\n            binding[key] = decorator[key];\n        }\n        binding.node = vdom;\n        var directive$$1 = new Action(vm, binding, callback);\n        if (directive$$1.init) {\n            //这里可能会重写node, callback, type, name\n            directive$$1.init();\n        }\n        directive$$1.update();\n        return directive$$1;\n    }\n\n    var eventMap = avalon.oneObject('animationend,blur,change,input,' + 'click,dblclick,focus,keydown,keypress,keyup,mousedown,mouseenter,' + 'mouseleave,mousemove,mouseout,mouseover,mouseup,scan,scroll,submit', 'on');\n    function parseAttributes(dirs, tuple) {\n        var node = tuple[0],\n            uniq = {},\n            bindings = [];\n        var hasIf = false;\n        for (var name in dirs) {\n            var value = dirs[name];\n            var arr = name.split('-');\n            // ms-click\n            if (name in node.props) {\n                var attrName = name;\n            } else {\n                attrName = ':' + name.slice(3);\n            }\n            if (eventMap[arr[1]]) {\n                arr.splice(1, 0, 'on');\n            }\n            //ms-on-click\n            if (arr[1] === 'on') {\n                arr[3] = parseFloat(arr[3]) || 0;\n            }\n\n            var type = arr[1];\n            if (type === 'controller' || type === 'important') continue;\n            if (directives[type]) {\n\n                var binding = {\n                    type: type,\n                    param: arr[2],\n                    attrName: attrName,\n                    name: arr.join('-'),\n                    expr: value,\n                    priority: directives[type].priority || type.charCodeAt(0) * 100\n                };\n                if (type === 'if') {\n                    hasIf = true;\n                }\n                if (type === 'on') {\n                    binding.priority += arr[3];\n                }\n                if (!uniq[binding.name]) {\n                    uniq[binding.name] = value;\n                    bindings.push(binding);\n                    if (type === 'for') {\n                        return [avalon.mix(binding, tuple[3])];\n                    }\n                }\n            }\n        }\n        bindings.sort(byPriority);\n\n        if (hasIf) {\n            var ret = [];\n            for (var i = 0, el; el = bindings[i++];) {\n                ret.push(el);\n                if (el.type === 'if') {\n                    return ret;\n                }\n            }\n        }\n        return bindings;\n    }\n    function byPriority(a, b) {\n        return a.priority - b.priority;\n    }\n\n    var rimprovePriority = /[+-\\?]/;\n    var rinnerValue = /__value__\\)$/;\n    function parseInterpolate(dir) {\n        var rlineSp = /\\n\\r?/g;\n        var str = dir.nodeValue.trim().replace(rlineSp, '');\n        var tokens = [];\n        do {\n            //aaa{{@bbb}}ccc\n            var index = str.indexOf(config.openTag);\n            index = index === -1 ? str.length : index;\n            var value = str.slice(0, index);\n            if (/\\S/.test(value)) {\n                tokens.push(avalon.quote(avalon._decode(value)));\n            }\n            str = str.slice(index + config.openTag.length);\n            if (str) {\n                index = str.indexOf(config.closeTag);\n                var value = str.slice(0, index);\n                var expr = avalon.unescapeHTML(value);\n                if (/\\|\\s*\\w/.test(expr)) {\n                    //如果存在过滤器，优化干掉\n                    var arr = addScope(expr, 'expr');\n                    if (arr[1]) {\n                        expr = arr[1].replace(rinnerValue, arr[0] + ')');\n                    }\n                }\n                if (rimprovePriority) {\n                    expr = '(' + expr + ')';\n                }\n                tokens.push(expr);\n\n                str = str.slice(index + config.closeTag.length);\n            }\n        } while (str.length);\n        return [{\n            expr: tokens.join('+'),\n            name: 'expr',\n            type: 'expr'\n        }];\n    }\n\n    function getChildren(arr) {\n        var count = 0;\n        for (var i = 0, el; el = arr[i++];) {\n            if (el.nodeName === '#document-fragment') {\n                count += getChildren(el.children);\n            } else {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    function groupTree(parent, children) {\n        children && children.forEach(function (vdom) {\n            if (!vdom) return;\n            var vlength = vdom.children && getChildren(vdom.children);\n            if (vdom.nodeName === '#document-fragment') {\n                var dom = createFragment();\n            } else {\n                dom = avalon.vdom(vdom, 'toDOM');\n                var domlength = dom.childNodes && dom.childNodes.length;\n                if (domlength && vlength && domlength > vlength) {\n                    if (!appendChildMayThrowError[dom.nodeName]) {\n                        avalon.clearHTML(dom);\n                    }\n                }\n            }\n            if (vlength) {\n                groupTree(dom, vdom.children);\n                if (vdom.nodeName === 'select') {\n                    var values = [];\n                    getSelectedValue(vdom, values);\n                    lookupOption(vdom, values);\n                }\n            }\n            //高级版本可以尝试 querySelectorAll\n\n            try {\n                if (!appendChildMayThrowError[parent.nodeName]) {\n                    parent.appendChild(dom);\n                }\n            } catch (e) {}\n        });\n    }\n\n    function dumpTree(elem) {\n        if (elem) {\n            var firstChild;\n            while (firstChild = elem.firstChild) {\n                if (firstChild.nodeType === 1) {\n                    dumpTree(firstChild);\n                }\n                elem.removeChild(firstChild);\n            }\n        }\n    }\n\n    function getRange(childNodes, node) {\n        var i = childNodes.indexOf(node) + 1;\n        var deep = 1,\n            nodes = [],\n            end;\n        nodes.start = i;\n        while (node = childNodes[i++]) {\n            nodes.push(node);\n            if (node.nodeName === '#comment') {\n                if (startWith(node.nodeValue, 'ms-for:')) {\n                    deep++;\n                } else if (node.nodeValue === 'ms-for-end:') {\n                    deep--;\n                    if (deep === 0) {\n                        end = node;\n                        nodes.pop();\n                        break;\n                    }\n                }\n            }\n        }\n        nodes.end = end;\n        return nodes;\n    }\n\n    function startWith(long, short) {\n        return long.indexOf(short) === 0;\n    }\n\n    var appendChildMayThrowError = {\n        '#text': 1,\n        '#comment': 1,\n        script: 1,\n        style: 1,\n        noscript: 1\n    };\n\n    /**\n     * 生成一个渲染器,并作为它第一个遇到的ms-controller对应的VM的$render属性\n     * @param {String|DOM} node\n     * @param {ViewModel|Undefined} vm\n     * @param {Function|Undefined} beforeReady\n     * @returns {Render}\n     */\n    avalon.scan = function (node, vm, beforeReady) {\n        return new Render(node, vm, beforeReady || avalon.noop);\n    };\n\n    /**\n     * avalon.scan 的内部实现\n     */\n    function Render(node, vm, beforeReady) {\n        this.root = node; //如果传入的字符串,确保只有一个标签作为根节点\n        this.vm = vm;\n        this.beforeReady = beforeReady;\n        this.bindings = []; //收集待加工的绑定属性\n        this.callbacks = [];\n        this.directives = [];\n        this.init();\n    }\n\n    Render.prototype = {\n        /**\n         * 开始扫描指定区域\n         * 收集绑定属性\n         * 生成指令并建立与VM的关联\n         */\n        init: function init() {\n            var vnodes;\n            if (this.root && this.root.nodeType > 0) {\n                vnodes = fromDOM(this.root); //转换虚拟DOM\n                //将扫描区域的每一个节点与其父节点分离,更少指令对DOM操作时,对首屏输出造成的频繁重绘\n                dumpTree(this.root);\n            } else if (typeof this.root === 'string') {\n                vnodes = fromString(this.root); //转换虚拟DOM\n            } else {\n                return avalon.warn('avalon.scan first argument must element or HTML string');\n            }\n\n            this.root = vnodes[0];\n            this.vnodes = vnodes;\n            this.scanChildren(vnodes, this.vm, true);\n        },\n        scanChildren: function scanChildren(children, scope, isRoot) {\n            for (var i = 0; i < children.length; i++) {\n                var vdom = children[i];\n                switch (vdom.nodeName) {\n                    case '#text':\n                        scope && this.scanText(vdom, scope);\n                        break;\n                    case '#comment':\n                        scope && this.scanComment(vdom, scope, children);\n                        break;\n                    case '#document-fragment':\n                        this.scanChildren(vdom.children, scope, false);\n                        break;\n                    default:\n                        this.scanTag(vdom, scope, children, false);\n                        break;\n                }\n            }\n            if (isRoot) {\n                this.complete();\n            }\n        },\n\n\n        /**\n         * 从文本节点获取指令\n         * @param {type} vdom \n         * @param {type} scope\n         * @returns {undefined}\n         */\n        scanText: function scanText(vdom, scope) {\n            if (config.rexpr.test(vdom.nodeValue)) {\n                this.bindings.push([vdom, scope, {\n                    nodeValue: vdom.nodeValue\n                }]);\n            }\n        },\n\n\n        /**\n         * 从注释节点获取指令\n         * @param {type} vdom \n         * @param {type} scope\n         * @param {type} parentChildren\n         * @returns {undefined}\n         */\n        scanComment: function scanComment(vdom, scope, parentChildren) {\n            if (startWith(vdom.nodeValue, 'ms-for:')) {\n                this.getForBinding(vdom, scope, parentChildren);\n            }\n        },\n\n\n        /**\n         * 从元素节点的nodeName与属性中获取指令\n         * @param {type} vdom \n         * @param {type} scope\n         * @param {type} parentChildren\n         * @param {type} isRoot 用于执行complete方法\n         * @returns {undefined}\n         */\n        scanTag: function scanTag(vdom, scope, parentChildren, isRoot) {\n            var dirs = {},\n                attrs = vdom.props,\n                hasDir,\n                hasFor;\n            for (var attr in attrs) {\n                var value = attrs[attr];\n                var oldName = attr;\n                if (attr.charAt(0) === ':') {\n                    attr = 'ms-' + attr.slice(1);\n                }\n                if (startWith(attr, 'ms-')) {\n                    dirs[attr] = value;\n                    var type = attr.match(/\\w+/g)[1];\n                    type = eventMap[type] || type;\n                    if (!directives[type]) {\n                        avalon.warn(attr + ' has not registered!');\n                    }\n                    hasDir = true;\n                }\n                if (attr === 'ms-for') {\n                    hasFor = value;\n                    delete attrs[oldName];\n                }\n            }\n            var $id = dirs['ms-important'] || dirs['ms-controller'];\n            if ($id) {\n                /**\n                 * 后端渲染\n                 * serverTemplates后端给avalon添加的对象,里面都是模板,\n                 * 将原来后端渲染好的区域再还原成原始样子,再被扫描\n                 */\n                var templateCaches = avalon.serverTemplates;\n                var temp = templateCaches && templateCaches[$id];\n                if (temp) {\n                    avalon.log('前端再次渲染后端传过来的模板');\n                    var node = fromString(temp)[0];\n                    for (var i in node) {\n                        vdom[i] = node[i];\n                    }\n                    delete templateCaches[$id];\n                    this.scanTag(vdom, scope, parentChildren, isRoot);\n                    return;\n                }\n                //推算出指令类型\n                var type = dirs['ms-important'] === $id ? 'important' : 'controller';\n                //推算出用户定义时属性名,是使用ms-属性还是:属性\n                var attrName = 'ms-' + type in attrs ? 'ms-' + type : ':' + type;\n\n                if (inBrowser) {\n                    delete attrs[attrName];\n                }\n                var dir = directives[type];\n                scope = dir.getScope.call(this, $id, scope);\n                if (!scope) {\n                    return;\n                } else {\n                    var clazz = attrs['class'];\n                    if (clazz) {\n                        attrs['class'] = (' ' + clazz + ' ').replace(' ms-controller ', '').trim();\n                    }\n                }\n                var render = this;\n                scope.$render = render;\n                this.callbacks.push(function () {\n                    //用于删除ms-controller\n                    dir.update.call(render, vdom, attrName, $id);\n                });\n            }\n            if (hasFor) {\n                if (vdom.dom) {\n                    vdom.dom.removeAttribute(oldName);\n                }\n                return this.getForBindingByElement(vdom, scope, parentChildren, hasFor);\n            }\n\n            if (/^ms\\-/.test(vdom.nodeName)) {\n                attrs.is = vdom.nodeName;\n            }\n\n            if (attrs['is']) {\n                if (!dirs['ms-widget']) {\n                    dirs['ms-widget'] = '{}';\n                }\n                hasDir = true;\n            }\n            if (hasDir) {\n                this.bindings.push([vdom, scope, dirs]);\n            }\n            var children = vdom.children;\n            //如果存在子节点,并且不是容器元素(script, stype, textarea, xmp...)\n            if (!orphanTag[vdom.nodeName] && children && children.length && !delayCompileNodes(dirs)) {\n                this.scanChildren(children, scope, false);\n            }\n        },\n\n\n        /**\n         * 将绑定属性转换为指令\n         * 执行各种回调与优化指令\n         * @returns {undefined}\n         */\n        complete: function complete() {\n            this.yieldDirectives();\n            this.beforeReady();\n            if (inBrowser) {\n                var root$$1 = this.root;\n                if (inBrowser) {\n                    var rootDom = avalon.vdom(root$$1, 'toDOM');\n                    groupTree(rootDom, root$$1.children);\n                }\n            }\n\n            this.mount = true;\n            var fn;\n            while (fn = this.callbacks.pop()) {\n                fn();\n            }\n            this.optimizeDirectives();\n        },\n\n\n        /**\n         * 将收集到的绑定属性进行深加工,最后转换指令\n         * @returns {Array<tuple>}\n         */\n        yieldDirectives: function yieldDirectives() {\n            var tuple;\n            while (tuple = this.bindings.shift()) {\n                var vdom = tuple[0],\n                    scope = tuple[1],\n                    dirs = tuple[2],\n                    bindings = [];\n                if ('nodeValue' in dirs) {\n                    bindings = parseInterpolate(dirs);\n                } else if (!('ms-skip' in dirs)) {\n                    bindings = parseAttributes(dirs, tuple);\n                }\n                for (var i = 0, binding; binding = bindings[i++];) {\n                    var dir = directives[binding.type];\n                    if (!inBrowser && /on|duplex|active|hover/.test(binding.type)) {\n                        continue;\n                    }\n                    if (dir.beforeInit) {\n                        dir.beforeInit.call(binding);\n                    }\n\n                    var directive$$1 = new Directive(scope, binding, vdom, this);\n                    this.directives.push(directive$$1);\n                }\n            }\n        },\n\n\n        /**\n         * 修改指令的update与callback方法,让它们以后执行时更加高效\n         * @returns {undefined}\n         */\n        optimizeDirectives: function optimizeDirectives() {\n            for (var i = 0, el; el = this.directives[i++];) {\n                el.callback = directives[el.type].update;\n                el.update = newUpdate;\n                el._isScheduled = false;\n            }\n        },\n\n        update: function update() {\n            for (var i = 0, el; el = this.directives[i++];) {\n                el.update();\n            }\n        },\n\n        /**\n         * 销毁所有指令\n         * @returns {undefined}\n         */\n        dispose: function dispose() {\n            var list = this.directives || [];\n            for (var i = 0, el; el = list[i++];) {\n                el.dispose();\n            }\n            //防止其他地方的this.innerRender && this.innerRender.dispose报错\n            for (var _i6 in this) {\n                if (_i6 !== 'dispose') delete this[_i6];\n            }\n        },\n\n\n        /**\n         * 将循环区域转换为for指令\n         * @param {type} begin 注释节点\n         * @param {type} scope\n         * @param {type} parentChildren\n         * @param {type} userCb 循环结束回调\n         * @returns {undefined}\n         */\n        getForBinding: function getForBinding(begin, scope, parentChildren, userCb) {\n            var expr = begin.nodeValue.replace('ms-for:', '').trim();\n            begin.nodeValue = 'ms-for:' + expr;\n            var nodes = getRange(parentChildren, begin);\n            var end = nodes.end;\n            var fragment = avalon.vdom(nodes, 'toHTML');\n            parentChildren.splice(nodes.start, nodes.length);\n            begin.props = {};\n            this.bindings.push([begin, scope, {\n                'ms-for': expr\n            }, {\n                begin: begin,\n                end: end,\n                expr: expr,\n                userCb: userCb,\n                fragment: fragment,\n                parentChildren: parentChildren\n            }]);\n        },\n\n\n        /**\n         * 在带ms-for元素节点旁添加两个注释节点,组成循环区域\n         * @param {type} vdom\n         * @param {type} scope\n         * @param {type} parentChildren\n         * @param {type} expr\n         * @returns {undefined}\n         */\n        getForBindingByElement: function getForBindingByElement(vdom, scope, parentChildren, expr) {\n            var index = parentChildren.indexOf(vdom); //原来带ms-for的元素节点\n            var props = vdom.props;\n            var begin = {\n                nodeName: '#comment',\n                nodeValue: 'ms-for:' + expr\n            };\n            if (props.slot) {\n                begin.slot = props.slot;\n                delete props.slot;\n            }\n            var end = {\n                nodeName: '#comment',\n                nodeValue: 'ms-for-end:'\n            };\n            parentChildren.splice(index, 1, begin, vdom, end);\n            this.getForBinding(begin, scope, parentChildren, props['data-for-rendered']);\n        }\n    };\n    var viewID;\n\n    function newUpdate() {\n        var oldVal = this.beforeUpdate();\n        var newVal = this.value = this.get();\n        if (this.callback && this.diff(newVal, oldVal)) {\n            this.callback(this.node, this.value);\n            var vm = this.vm;\n            var $render = vm.$render;\n            var list = vm.$events['onViewChange'];\n            /* istanbul ignore if */\n            if (list && $render && $render.root && !avalon.viewChanging) {\n                if (viewID) {\n                    clearTimeout(viewID);\n                    viewID = null;\n                }\n                viewID = setTimeout(function () {\n                    list.forEach(function (el) {\n                        el.callback.call(vm, {\n                            type: 'viewchange',\n                            target: $render.root,\n                            vmodel: vm\n                        });\n                    });\n                });\n            }\n        }\n        this._isScheduled = false;\n    }\n\n    var events = 'onInit,onReady,onViewChange,onDispose,onEnter,onLeave';\n    var componentEvents = avalon.oneObject(events);\n\n    function toObject(value) {\n        var value = platform.toJson(value);\n        if (Array.isArray(value)) {\n            var v = {};\n            value.forEach(function (el) {\n                el && avalon.shadowCopy(v, el);\n            });\n            return v;\n        }\n        return value;\n    }\n    var componentQueue = [];\n    avalon.directive('widget', {\n        delay: true,\n        priority: 4,\n        deep: true,\n        init: function init() {\n            //cached属性必须定义在组件容器里面,不是template中\n            var vdom = this.node;\n            this.cacheVm = !!vdom.props.cached;\n            if (vdom.dom && vdom.nodeName === '#comment') {\n                var comment = vdom.dom;\n            }\n            var oldValue = this.getValue();\n            var value = toObject(oldValue);\n            //外部VM与内部VM\n            // ＝＝＝创建组件的VM＝＝BEGIN＝＝＝\n            var is = vdom.props.is || value.is;\n            this.is = is;\n            var component = avalon.components[is];\n            //外部传入的总大于内部\n            if (!('fragment' in this)) {\n                if (!vdom.isVoidTag) {\n                    //提取组件容器内部的东西作为模板\n                    var text = vdom.children[0];\n                    if (text && text.nodeValue) {\n                        this.fragment = text.nodeValue;\n                    } else {\n                        this.fragment = avalon.vdom(vdom.children, 'toHTML');\n                    }\n                } else {\n                    this.fragment = false;\n                }\n            }\n            //如果组件还没有注册，那么将原元素变成一个占位用的注释节点\n            if (!component) {\n                this.readyState = 0;\n                vdom.nodeName = '#comment';\n                vdom.nodeValue = 'unresolved component placeholder';\n                delete vdom.dom;\n                avalon.Array.ensure(componentQueue, this);\n                return;\n            }\n\n            //如果是非空元素，比如说xmp, ms-*, template\n            var id = value.id || value.$id;\n            var hasCache = avalon.vmodels[id];\n            var fromCache = false;\n            // this.readyState = 1\n            if (hasCache) {\n                comVm = hasCache;\n                this.comVm = comVm;\n                replaceRoot(this, comVm.$render);\n                fromCache = true;\n            } else {\n                if (typeof component === 'function') {\n                    component = new component(value);\n                }\n                var comVm = createComponentVm(component, value, is);\n                this.readyState = 1;\n                fireComponentHook(comVm, vdom, 'Init');\n                this.comVm = comVm;\n\n                // ＝＝＝创建组件的VM＝＝END＝＝＝\n                var innerRender = avalon.scan(component.template, comVm);\n                comVm.$render = innerRender;\n                replaceRoot(this, innerRender);\n                var nodesWithSlot = [];\n                var directives$$1 = [];\n                if (this.fragment || component.soleSlot) {\n                    var curVM = this.fragment ? this.vm : comVm;\n                    var curText = this.fragment || '{{##' + component.soleSlot + '}}';\n                    var childBoss = avalon.scan('<div>' + curText + '</div>', curVM, function () {\n                        nodesWithSlot = this.root.children;\n                    });\n                    directives$$1 = childBoss.directives;\n                    this.childBoss = childBoss;\n                    for (var i in childBoss) {\n                        delete childBoss[i];\n                    }\n                }\n                Array.prototype.push.apply(innerRender.directives, directives$$1);\n\n                var arraySlot = [],\n                    objectSlot = {};\n                //从用户写的元素内部 收集要移动到 新创建的组件内部的元素\n                if (component.soleSlot) {\n                    arraySlot = nodesWithSlot;\n                } else {\n                    nodesWithSlot.forEach(function (el, i) {\n                        //要求带slot属性\n                        if (el.slot) {\n                            var nodes = getRange(nodesWithSlot, el);\n                            nodes.push(nodes.end);\n                            nodes.unshift(el);\n                            objectSlot[el.slot] = nodes;\n                        } else if (el.props) {\n                            var name = el.props.slot;\n                            if (name) {\n                                delete el.props.slot;\n                                if (Array.isArray(objectSlot[name])) {\n                                    objectSlot[name].push(el);\n                                } else {\n                                    objectSlot[name] = [el];\n                                }\n                            }\n                        }\n                    });\n                }\n                //将原来元素的所有孩子，全部移动新的元素的第一个slot的位置上\n                if (component.soleSlot) {\n                    insertArraySlot(innerRender.vnodes, arraySlot);\n                } else {\n                    insertObjectSlot(innerRender.vnodes, objectSlot);\n                }\n            }\n\n            if (comment) {\n                var dom = avalon.vdom(vdom, 'toDOM');\n                comment.parentNode.replaceChild(dom, comment);\n                comVm.$element = innerRender.root.dom = dom;\n                delete this.reInit;\n            }\n\n            //处理DOM节点\n\n            dumpTree(vdom.dom);\n            comVm.$element = vdom.dom;\n            groupTree(vdom.dom, vdom.children);\n            if (fromCache) {\n                fireComponentHook(comVm, vdom, 'Enter');\n            } else {\n                fireComponentHook(comVm, vdom, 'Ready');\n            }\n        },\n        diff: function diff(newVal, oldVal) {\n            if (cssDiff.call(this, newVal, oldVal)) {\n                return true;\n            }\n        },\n\n        update: function update(vdom, value) {\n            //this.oldValue = value //★★防止递归\n\n            switch (this.readyState) {\n                case 0:\n                    if (this.reInit) {\n                        this.init();\n                        this.readyState++;\n                    }\n                    break;\n                case 1:\n                    this.readyState++;\n                    break;\n                default:\n                    this.readyState++;\n                    var comVm = this.comVm;\n                    avalon.viewChanging = true;\n                    avalon.transaction(function () {\n                        for (var i in value) {\n                            if (comVm.hasOwnProperty(i)) {\n                                if (Array.isArray(value[i])) {\n                                    comVm[i] = value[i].concat();\n                                } else {\n                                    comVm[i] = value[i];\n                                }\n                            }\n                        }\n                    });\n\n                    //要保证要先触发孩子的ViewChange 然后再到它自己的ViewChange\n                    fireComponentHook(comVm, vdom, 'ViewChange');\n                    delete avalon.viewChanging;\n                    break;\n            }\n            this.value = avalon.mix(true, {}, value);\n        },\n        beforeDispose: function beforeDispose() {\n            var comVm = this.comVm;\n            if (!this.cacheVm) {\n                fireComponentHook(comVm, this.node, 'Dispose');\n                comVm.$hashcode = false;\n                delete avalon.vmodels[comVm.$id];\n                this.innerRender && this.innerRender.dispose();\n            } else {\n                fireComponentHook(comVm, this.node, 'Leave');\n            }\n        }\n    });\n\n    function replaceRoot(instance, innerRender) {\n        instance.innerRender = innerRender;\n        var root$$1 = innerRender.root;\n        var vdom = instance.node;\n        var slot = vdom.props.slot;\n        for (var i in root$$1) {\n            vdom[i] = root$$1[i];\n        }\n        if (vdom.props && slot) {\n            vdom.props.slot = slot;\n        }\n        innerRender.root = vdom;\n        innerRender.vnodes[0] = vdom;\n    }\n\n    function fireComponentHook(vm, vdom, name) {\n        var list = vm.$events['on' + name];\n        if (list) {\n            list.forEach(function (el) {\n                setTimeout(function () {\n                    el.callback.call(vm, {\n                        type: name.toLowerCase(),\n                        target: vdom.dom,\n                        vmodel: vm\n                    });\n                }, 0);\n            });\n        }\n    }\n\n    function createComponentVm(component, value, is) {\n        var hooks = [];\n        var defaults = component.defaults;\n        collectHooks(defaults, hooks);\n        collectHooks(value, hooks);\n        var obj = {};\n        for (var i in defaults) {\n            var val = value[i];\n            if (val == null) {\n                obj[i] = defaults[i];\n            } else {\n                obj[i] = val;\n            }\n        }\n        obj.$id = value.id || value.$id || avalon.makeHashCode(is);\n        delete obj.id;\n        var def = avalon.mix(true, {}, obj);\n        var vm = avalon.define(def);\n        hooks.forEach(function (el) {\n            vm.$watch(el.type, el.cb);\n        });\n        return vm;\n    }\n\n    function collectHooks(a, list) {\n        for (var i in a) {\n            if (componentEvents[i]) {\n                if (typeof a[i] === 'function' && i.indexOf('on') === 0) {\n                    list.unshift({\n                        type: i,\n                        cb: a[i]\n                    });\n                }\n                //delete a[i] 这里不能删除,会导致再次切换时没有onReady\n            }\n        }\n    }\n\n    function resetParentChildren(nodes, arr) {\n        var dir = arr && arr[0] && arr[0].forDir;\n        if (dir) {\n            dir.parentChildren = nodes;\n        }\n    }\n\n    function insertArraySlot(nodes, arr) {\n        for (var i = 0, el; el = nodes[i]; i++) {\n            if (el.nodeName === 'slot') {\n                resetParentChildren(nodes, arr);\n                nodes.splice.apply(nodes, [i, 1].concat(arr));\n                break;\n            } else if (el.children) {\n                insertArraySlot(el.children, arr);\n            }\n        }\n    }\n\n    function insertObjectSlot(nodes, obj) {\n        for (var i = 0, el; el = nodes[i]; i++) {\n            if (el.nodeName === 'slot') {\n                var name = el.props.name;\n                resetParentChildren(nodes, obj[name]);\n                nodes.splice.apply(nodes, [i, 1].concat(obj[name]));\n                continue;\n            } else if (el.children) {\n                insertObjectSlot(el.children, obj);\n            }\n        }\n    }\n\n    avalon.components = {};\n    avalon.component = function (name, component) {\n\n        component.extend = componentExtend;\n        return addToQueue(name, component);\n    };\n    function addToQueue(name, component) {\n        avalon.components[name] = component;\n        for (var el, i = 0; el = componentQueue[i]; i++) {\n            if (el.is === name) {\n                componentQueue.splice(i, 1);\n                el.reInit = true;\n                delete el.value;\n                el.update();\n                i--;\n            }\n        }\n        return component;\n    }\n\n    function componentExtend(child) {\n        var name = child.displayName;\n        delete child.displayName;\n        var obj = { defaults: avalon.mix(true, {}, this.defaults, child.defaults) };\n        if (child.soleSlot) {\n            obj.soleSlot = child.soleSlot;\n        }\n        obj.template = child.template || this.template;\n        return avalon.component(name, obj);\n    }\n\n    return avalon;\n});"],"sourceRoot":""}